!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
<<	lib/active_record/associations/collection_proxy.rb	/^      def <<(*records)$/;"	f	class:ActiveRecord.Associations.CollectionProxy
<=>	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^        def <=>(version_string)$/;"	f	class:ActiveRecord.SQLite3Adapter.Version
<=>	lib/active_record/core.rb	/^    def <=>(other_object)$/;"	f	class:ActiveRecord.Core
==	lib/active_record/associations/collection_proxy.rb	/^      def ==(other)$/;"	f	class:ActiveRecord.Associations.CollectionProxy
==	lib/active_record/associations/join_dependency/join_association.rb	/^        def ==(other)$/;"	f	class:ActiveRecord.Associations.JoinDependency.JoinAssociation
==	lib/active_record/associations/join_dependency/join_base.rb	/^        def ==(other)$/;"	f	class:ActiveRecord.Associations.JoinDependency.JoinBase
==	lib/active_record/associations/join_dependency/join_part.rb	/^        def ==(other)$/;"	f	class:ActiveRecord.Associations.JoinDependency.JoinPart
==	lib/active_record/core.rb	/^    def ==(comparison_object)$/;"	f	class:ActiveRecord.Core
==	lib/active_record/reflection.rb	/^      def ==(other_aggregation)$/;"	f	class:ActiveRecord.Reflection.MacroReflection
==	lib/active_record/relation.rb	/^    def ==(other)$/;"	f	class:ActiveRecord.Relation
===	lib/active_record/core.rb	/^      def ===(object)$/;"	f	class:ActiveRecord.Core.ClassMethods
AbstractAdapter	lib/active_record/connection_adapters/abstract_adapter.rb	/^    class AbstractAdapter$/;"	c	class:ActiveRecord.ConnectionAdapters
AbstractMysqlAdapter	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^    class AbstractMysqlAdapter < AbstractAdapter$/;"	c	class:ActiveRecord.ConnectionAdapters
ActiveRecord	lib/active_record.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/aggregations.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/alias_tracker.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/association.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/association_scope.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/belongs_to_association.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/belongs_to_polymorphic_association.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/builder/association.rb	/^module ActiveRecord::Associations::Builder$/;"	m
ActiveRecord	lib/active_record/associations/builder/belongs_to.rb	/^module ActiveRecord::Associations::Builder$/;"	m
ActiveRecord	lib/active_record/associations/builder/collection_association.rb	/^module ActiveRecord::Associations::Builder$/;"	m
ActiveRecord	lib/active_record/associations/builder/has_and_belongs_to_many.rb	/^module ActiveRecord::Associations::Builder$/;"	m
ActiveRecord	lib/active_record/associations/builder/has_many.rb	/^module ActiveRecord::Associations::Builder$/;"	m
ActiveRecord	lib/active_record/associations/builder/has_one.rb	/^module ActiveRecord::Associations::Builder$/;"	m
ActiveRecord	lib/active_record/associations/builder/singular_association.rb	/^module ActiveRecord::Associations::Builder$/;"	m
ActiveRecord	lib/active_record/associations/collection_association.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/collection_proxy.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/has_and_belongs_to_many_association.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/has_many_association.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/has_many_through_association.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/has_one_association.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/has_one_through_association.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/join_dependency.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/join_dependency/join_association.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/join_dependency/join_base.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/join_dependency/join_part.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/join_helper.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/preloader.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/preloader/association.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/preloader/belongs_to.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/preloader/collection_association.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/preloader/has_and_belongs_to_many.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/preloader/has_many.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/preloader/has_many_through.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/preloader/has_one.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/preloader/has_one_through.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/preloader/singular_association.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/preloader/through_association.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/singular_association.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/associations/through_association.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/attribute_assignment.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/attribute_methods.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/attribute_methods/before_type_cast.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/attribute_methods/dirty.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/attribute_methods/primary_key.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/attribute_methods/query.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/attribute_methods/read.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/attribute_methods/serialization.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/attribute_methods/time_zone_conversion.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/attribute_methods/write.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/autosave_association.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/base.rb	/^module ActiveRecord #:nodoc:$/;"	m
ActiveRecord	lib/active_record/callbacks.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/coders/yaml_column.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/abstract/database_limits.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/abstract/database_statements.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/abstract/query_cache.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/abstract/quoting.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/abstract/schema_dumper.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/abstract/transaction.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/abstract_adapter.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/column.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/connection_specification.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/mysql2_adapter.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/mysql_adapter.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/postgresql/array_parser.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/postgresql/cast.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/postgresql/database_statements.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/postgresql/oid.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/postgresql/quoting.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/postgresql/referential_integrity.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/postgresql_adapter.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/schema_cache.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_adapters/statement_pool.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/connection_handling.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/core.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/counter_cache.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/dynamic_matchers.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/errors.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/explain.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/explain_subscriber.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/fixture_set/file.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/fixtures.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/inheritance.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/integration.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/locking/optimistic.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/locking/pessimistic.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/log_subscriber.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/migration.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/migration/command_recorder.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/migration/join_table.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/model_schema.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/nested_attributes.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/null_relation.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/observer.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/persistence.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/query_cache.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/querying.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/railtie.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/railties/controller_runtime.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/readonly_attributes.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/reflection.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/relation.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/relation/batches.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/relation/calculations.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/relation/delegation.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/relation/finder_methods.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/relation/merger.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/relation/predicate_builder.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/relation/query_methods.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/relation/spawn_methods.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/result.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/sanitization.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/schema.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/schema_dumper.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/schema_migration.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/scoping.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/scoping/default.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/scoping/named.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/serialization.rb	/^module ActiveRecord #:nodoc:$/;"	m
ActiveRecord	lib/active_record/serializers/xml_serializer.rb	/^module ActiveRecord #:nodoc:$/;"	m
ActiveRecord	lib/active_record/store.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/tasks/database_tasks.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/tasks/mysql_database_tasks.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/tasks/postgresql_database_tasks.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/tasks/sqlite_database_tasks.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/test_case.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/timestamp.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/transactions.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/translation.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/validations.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/validations/associated.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/validations/presence.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/validations/uniqueness.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/active_record/version.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/rails/generators/active_record.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/rails/generators/active_record/migration/migration_generator.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/rails/generators/active_record/model/model_generator.rb	/^module ActiveRecord$/;"	m
ActiveRecord	lib/rails/generators/active_record/observer/observer_generator.rb	/^module ActiveRecord$/;"	m
ActiveRecordError	lib/active_record/errors.rb	/^  class ActiveRecordError < StandardError$/;"	c	class:ActiveRecord
AdapterNotFound	lib/active_record/errors.rb	/^  class AdapterNotFound < ActiveRecordError$/;"	c	class:ActiveRecord
AdapterNotSpecified	lib/active_record/errors.rb	/^  class AdapterNotSpecified < ActiveRecordError$/;"	c	class:ActiveRecord
AggregateReflection	lib/active_record/reflection.rb	/^    class AggregateReflection < MacroReflection #:nodoc:$/;"	c	class:ActiveRecord.Reflection
Aggregations	lib/active_record/aggregations.rb	/^  module Aggregations # :nodoc:$/;"	m	class:ActiveRecord
AliasTracker	lib/active_record/associations/alias_tracker.rb	/^    class AliasTracker # :nodoc:$/;"	c	class:ActiveRecord.Associations
ArJdbcMySQL	lib/active_record/railties/jdbcmysql_error.rb	/^module ArJdbcMySQL #:nodoc:$/;"	m
Array	lib/active_record/connection_adapters/postgresql/oid.rb	/^        class Array < Type$/;"	c	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID
ArrayParser	lib/active_record/connection_adapters/postgresql/array_parser.rb	/^      module ArrayParser$/;"	m	class:ActiveRecord.ConnectionAdapters.PostgreSQLColumn
AssociatedValidator	lib/active_record/validations/associated.rb	/^    class AssociatedValidator < ActiveModel::EachValidator #:nodoc:$/;"	c	class:ActiveRecord.Validations
Association	lib/active_record/associations/association.rb	/^    class Association #:nodoc:$/;"	c	class:ActiveRecord.Associations
Association	lib/active_record/associations/builder/association.rb	/^  class Association #:nodoc:$/;"	c	class:ActiveRecord
Association	lib/active_record/associations/preloader/association.rb	/^      class Association #:nodoc:$/;"	c	class:ActiveRecord.Associations.Preloader
AssociationBuilderExtension	lib/active_record/autosave_association.rb	/^    module AssociationBuilderExtension #:nodoc:$/;"	m	class:ActiveRecord.AutosaveAssociation
AssociationReflection	lib/active_record/reflection.rb	/^    class AssociationReflection < MacroReflection #:nodoc:$/;"	c	class:ActiveRecord.Reflection
AssociationScope	lib/active_record/associations/association_scope.rb	/^    class AssociationScope #:nodoc:$/;"	c	class:ActiveRecord.Associations
AssociationTypeMismatch	lib/active_record/errors.rb	/^  class AssociationTypeMismatch < ActiveRecordError$/;"	c	class:ActiveRecord
Associations	lib/active_record/associations.rb	/^  module Associations # :nodoc:$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/alias_tracker.rb	/^  module Associations$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/association.rb	/^  module Associations$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/association_scope.rb	/^  module Associations$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/belongs_to_association.rb	/^  module Associations$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/belongs_to_polymorphic_association.rb	/^  module Associations$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/collection_association.rb	/^  module Associations$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/collection_proxy.rb	/^  module Associations$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/has_and_belongs_to_many_association.rb	/^  module Associations$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/has_many_association.rb	/^  module Associations$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/has_many_through_association.rb	/^  module Associations$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/has_one_association.rb	/^  module Associations$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/has_one_through_association.rb	/^  module Associations$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/join_dependency.rb	/^  module Associations$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/join_dependency/join_association.rb	/^  module Associations$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/join_dependency/join_base.rb	/^  module Associations$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/join_dependency/join_part.rb	/^  module Associations$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/join_helper.rb	/^  module Associations$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/preloader.rb	/^  module Associations$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/preloader/association.rb	/^  module Associations$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/preloader/belongs_to.rb	/^  module Associations$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/preloader/collection_association.rb	/^  module Associations$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/preloader/has_and_belongs_to_many.rb	/^  module Associations$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/preloader/has_many.rb	/^  module Associations$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/preloader/has_many_through.rb	/^  module Associations$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/preloader/has_one.rb	/^  module Associations$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/preloader/has_one_through.rb	/^  module Associations$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/preloader/singular_association.rb	/^  module Associations$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/preloader/through_association.rb	/^  module Associations$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/singular_association.rb	/^  module Associations$/;"	m	class:ActiveRecord
Associations	lib/active_record/associations/through_association.rb	/^  module Associations$/;"	m	class:ActiveRecord
Attribute	lib/active_record/attribute_methods/serialization.rb	/^      class Attribute < Struct.new(:coder, :value, :state) # :nodoc:$/;"	c	class:ActiveRecord.AttributeMethods
Attribute	lib/active_record/serializers/xml_serializer.rb	/^    class Attribute < ActiveModel::Serializers::Xml::Serializer::Attribute #:nodoc:$/;"	c	class:ActiveRecord.XmlSerializer
AttributeAssignment	lib/active_record/attribute_assignment.rb	/^  module AttributeAssignment$/;"	m	class:ActiveRecord
AttributeAssignmentError	lib/active_record/errors.rb	/^  class AttributeAssignmentError < ActiveRecordError$/;"	c	class:ActiveRecord
AttributeMethods	lib/active_record.rb	/^  module AttributeMethods$/;"	m	class:ActiveRecord
AttributeMethods	lib/active_record/attribute_methods.rb	/^  module AttributeMethods$/;"	m	class:ActiveRecord
AttributeMethods	lib/active_record/attribute_methods/before_type_cast.rb	/^  module AttributeMethods$/;"	m	class:ActiveRecord
AttributeMethods	lib/active_record/attribute_methods/dirty.rb	/^  module AttributeMethods$/;"	m	class:ActiveRecord
AttributeMethods	lib/active_record/attribute_methods/primary_key.rb	/^  module AttributeMethods$/;"	m	class:ActiveRecord
AttributeMethods	lib/active_record/attribute_methods/query.rb	/^  module AttributeMethods$/;"	m	class:ActiveRecord
AttributeMethods	lib/active_record/attribute_methods/read.rb	/^  module AttributeMethods$/;"	m	class:ActiveRecord
AttributeMethods	lib/active_record/attribute_methods/serialization.rb	/^  module AttributeMethods$/;"	m	class:ActiveRecord
AttributeMethods	lib/active_record/attribute_methods/time_zone_conversion.rb	/^  module AttributeMethods$/;"	m	class:ActiveRecord
AttributeMethods	lib/active_record/attribute_methods/write.rb	/^  module AttributeMethods$/;"	m	class:ActiveRecord
AutosaveAssociation	lib/active_record/autosave_association.rb	/^  module AutosaveAssociation$/;"	m	class:ActiveRecord
Base	lib/active_record/base.rb	/^  class Base$/;"	c	class:ActiveRecord
Base	lib/rails/generators/active_record.rb	/^    class Base < Rails::Generators::NamedBase # :nodoc:$/;"	c	class:ActiveRecord.Generators
Batches	lib/active_record/relation/batches.rb	/^  module Batches$/;"	m	class:ActiveRecord
BeforeTypeCast	lib/active_record/attribute_methods/before_type_cast.rb	/^    module BeforeTypeCast$/;"	m	class:ActiveRecord.AttributeMethods
Behavior	lib/active_record/attribute_methods/serialization.rb	/^      module Behavior #:nodoc:$/;"	m	class:ActiveRecord.AttributeMethods
BelongsTo	lib/active_record/associations/builder/belongs_to.rb	/^  class BelongsTo < SingularAssociation #:nodoc:$/;"	c	class:ActiveRecord
BelongsTo	lib/active_record/associations/preloader/belongs_to.rb	/^      class BelongsTo < SingularAssociation #:nodoc:$/;"	c	class:ActiveRecord.Associations.Preloader
BelongsToAssociation	lib/active_record/associations/belongs_to_association.rb	/^    class BelongsToAssociation < SingularAssociation #:nodoc:$/;"	c	class:ActiveRecord.Associations
BelongsToPolymorphicAssociation	lib/active_record/associations/belongs_to_polymorphic_association.rb	/^    class BelongsToPolymorphicAssociation < BelongsToAssociation #:nodoc:$/;"	c	class:ActiveRecord.Associations
BindSubstitution	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      class BindSubstitution < Arel::Visitors::MySQL # :nodoc:$/;"	c	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
BindSubstitution	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      class BindSubstitution < Arel::Visitors::PostgreSQL # :nodoc:$/;"	c	class:ActiveRecord.PostgreSQLAdapter
BindSubstitution	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      class BindSubstitution < Arel::Visitors::SQLite # :nodoc:$/;"	c	class:ActiveRecord.SQLite3Adapter
Boolean	lib/active_record/connection_adapters/mysql_adapter.rb	/^        class Boolean < Type$/;"	c	class:ActiveRecord.ConnectionAdapters.MysqlAdapter.Fields
Boolean	lib/active_record/connection_adapters/postgresql/oid.rb	/^        class Boolean < Type$/;"	c	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID
Builder	lib/active_record/associations.rb	/^    module Builder #:nodoc:$/;"	m	class:ActiveRecord.Associations
Bytea	lib/active_record/connection_adapters/postgresql/oid.rb	/^        class Bytea < Type$/;"	c	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID
Calculations	lib/active_record/relation/calculations.rb	/^  module Calculations$/;"	m	class:ActiveRecord
Callbacks	lib/active_record/callbacks.rb	/^  module Callbacks$/;"	m	class:ActiveRecord
Cast	lib/active_record/connection_adapters/postgresql/cast.rb	/^      module Cast$/;"	m	class:ActiveRecord.ConnectionAdapters.PostgreSQLColumn
CheckPending	lib/active_record/migration.rb	/^    class CheckPending$/;"	c	class:ActiveRecord.Migration
Cidr	lib/active_record/connection_adapters/postgresql/oid.rb	/^        class Cidr < Type$/;"	c	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID
ClassMethods	lib/active_record/aggregations.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.Aggregations
ClassMethods	lib/active_record/associations.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.Associations
ClassMethods	lib/active_record/attribute_methods.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.AttributeMethods
ClassMethods	lib/active_record/attribute_methods/primary_key.rb	/^      module ClassMethods$/;"	m	class:ActiveRecord.AttributeMethods.PrimaryKey
ClassMethods	lib/active_record/attribute_methods/read.rb	/^      module ClassMethods$/;"	m	class:ActiveRecord.AttributeMethods.Read
ClassMethods	lib/active_record/attribute_methods/serialization.rb	/^        module ClassMethods$/;"	m	class:ActiveRecord.AttributeMethods.Behavior
ClassMethods	lib/active_record/attribute_methods/serialization.rb	/^      module ClassMethods$/;"	m	class:ActiveRecord.AttributeMethods.Serialization
ClassMethods	lib/active_record/attribute_methods/time_zone_conversion.rb	/^      module ClassMethods$/;"	m	class:ActiveRecord.AttributeMethods.TimeZoneConversion
ClassMethods	lib/active_record/attribute_methods/write.rb	/^      module ClassMethods$/;"	m	class:ActiveRecord.AttributeMethods.Write
ClassMethods	lib/active_record/autosave_association.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.AutosaveAssociation
ClassMethods	lib/active_record/callbacks.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.Callbacks
ClassMethods	lib/active_record/core.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.Core
ClassMethods	lib/active_record/counter_cache.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.CounterCache
ClassMethods	lib/active_record/fixtures.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.TestFixtures
ClassMethods	lib/active_record/inheritance.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.Inheritance
ClassMethods	lib/active_record/locking/optimistic.rb	/^      module ClassMethods$/;"	m	class:ActiveRecord.Locking.Optimistic
ClassMethods	lib/active_record/model_schema.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.ModelSchema
ClassMethods	lib/active_record/nested_attributes.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.NestedAttributes
ClassMethods	lib/active_record/persistence.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.Persistence
ClassMethods	lib/active_record/query_cache.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.QueryCache
ClassMethods	lib/active_record/railties/controller_runtime.rb	/^      module ClassMethods # :nodoc:$/;"	m	class:ActiveRecord.Railties.ControllerRuntime
ClassMethods	lib/active_record/readonly_attributes.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.ReadonlyAttributes
ClassMethods	lib/active_record/reflection.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.Reflection
ClassMethods	lib/active_record/sanitization.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.Sanitization
ClassMethods	lib/active_record/scoping.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.Scoping
ClassMethods	lib/active_record/scoping/default.rb	/^      module ClassMethods$/;"	m	class:ActiveRecord.Scoping.Default
ClassMethods	lib/active_record/scoping/named.rb	/^      module ClassMethods$/;"	m	class:ActiveRecord.Scoping.Named
ClassMethods	lib/active_record/store.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.Store
ClassMethods	lib/active_record/transactions.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.Transactions
ClassMethods	lib/active_record/validations.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.Validations
ClassMethods	lib/active_record/validations/associated.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.Validations
ClassMethods	lib/active_record/validations/presence.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.Validations
ClassMethods	lib/active_record/validations/uniqueness.rb	/^    module ClassMethods$/;"	m	class:ActiveRecord.Validations
ClosedTransaction	lib/active_record/connection_adapters/abstract/transaction.rb	/^    class ClosedTransaction < Transaction #:nodoc:$/;"	c	class:ActiveRecord.ConnectionAdapters
Coders	lib/active_record.rb	/^  module Coders$/;"	m	class:ActiveRecord
Coders	lib/active_record/coders/yaml_column.rb	/^  module Coders # :nodoc:$/;"	m	class:ActiveRecord
CollectionAssociation	lib/active_record/associations/builder/collection_association.rb	/^  class CollectionAssociation < Association #:nodoc:$/;"	c	class:ActiveRecord
CollectionAssociation	lib/active_record/associations/collection_association.rb	/^    class CollectionAssociation < Association #:nodoc:$/;"	c	class:ActiveRecord.Associations
CollectionAssociation	lib/active_record/associations/preloader/collection_association.rb	/^      class CollectionAssociation < Association #:nodoc:$/;"	c	class:ActiveRecord.Associations.Preloader
CollectionProxy	lib/active_record/associations/collection_proxy.rb	/^    class CollectionProxy < Relation$/;"	c	class:ActiveRecord.Associations
Column	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      class Column < ConnectionAdapters::Column # :nodoc:$/;"	c	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
Column	lib/active_record/connection_adapters/column.rb	/^    class Column$/;"	c	class:ActiveRecord.ConnectionAdapters
Column	lib/active_record/connection_adapters/mysql2_adapter.rb	/^      class Column < AbstractMysqlAdapter::Column # :nodoc:$/;"	c	class:ActiveRecord.ConnectionAdapters.Mysql2Adapter
Column	lib/active_record/connection_adapters/mysql_adapter.rb	/^      class Column < AbstractMysqlAdapter::Column #:nodoc:$/;"	c	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
ColumnDefinition	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^    class ColumnDefinition < Struct.new(:base, :name, :type, :limit, :precision, :scale, :default, :null) #:nodoc:$/;"	c	class:ActiveRecord.ConnectionAdapters
ColumnDefinition	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      class ColumnDefinition < ActiveRecord::ConnectionAdapters::ColumnDefinition$/;"	c	class:ActiveRecord.PostgreSQLAdapter
ColumnDumper	lib/active_record/connection_adapters/abstract/schema_dumper.rb	/^    module ColumnDumper$/;"	m	class:ActiveRecord.ConnectionAdapters
CommandRecorder	lib/active_record/migration/command_recorder.rb	/^    class CommandRecorder$/;"	c	class:ActiveRecord.Migration
ConfigurationError	lib/active_record/errors.rb	/^  class ConfigurationError < ActiveRecordError$/;"	c	class:ActiveRecord
ConnectionAdapters	lib/active_record.rb	/^  module ConnectionAdapters$/;"	m	class:ActiveRecord
ConnectionAdapters	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^  module ConnectionAdapters$/;"	m	class:ActiveRecord
ConnectionAdapters	lib/active_record/connection_adapters/abstract/database_limits.rb	/^  module ConnectionAdapters # :nodoc:$/;"	m	class:ActiveRecord
ConnectionAdapters	lib/active_record/connection_adapters/abstract/database_statements.rb	/^  module ConnectionAdapters # :nodoc:$/;"	m	class:ActiveRecord
ConnectionAdapters	lib/active_record/connection_adapters/abstract/query_cache.rb	/^  module ConnectionAdapters # :nodoc:$/;"	m	class:ActiveRecord
ConnectionAdapters	lib/active_record/connection_adapters/abstract/quoting.rb	/^  module ConnectionAdapters # :nodoc:$/;"	m	class:ActiveRecord
ConnectionAdapters	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^  module ConnectionAdapters #:nodoc:$/;"	m	class:ActiveRecord
ConnectionAdapters	lib/active_record/connection_adapters/abstract/schema_dumper.rb	/^  module ConnectionAdapters # :nodoc:$/;"	m	class:ActiveRecord
ConnectionAdapters	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^  module ConnectionAdapters # :nodoc:$/;"	m	class:ActiveRecord
ConnectionAdapters	lib/active_record/connection_adapters/abstract/transaction.rb	/^  module ConnectionAdapters$/;"	m	class:ActiveRecord
ConnectionAdapters	lib/active_record/connection_adapters/abstract_adapter.rb	/^  module ConnectionAdapters # :nodoc:$/;"	m	class:ActiveRecord
ConnectionAdapters	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^  module ConnectionAdapters$/;"	m	class:ActiveRecord
ConnectionAdapters	lib/active_record/connection_adapters/column.rb	/^  module ConnectionAdapters$/;"	m	class:ActiveRecord
ConnectionAdapters	lib/active_record/connection_adapters/connection_specification.rb	/^  module ConnectionAdapters$/;"	m	class:ActiveRecord
ConnectionAdapters	lib/active_record/connection_adapters/mysql2_adapter.rb	/^  module ConnectionAdapters$/;"	m	class:ActiveRecord
ConnectionAdapters	lib/active_record/connection_adapters/mysql_adapter.rb	/^  module ConnectionAdapters$/;"	m	class:ActiveRecord
ConnectionAdapters	lib/active_record/connection_adapters/postgresql/array_parser.rb	/^  module ConnectionAdapters$/;"	m	class:ActiveRecord
ConnectionAdapters	lib/active_record/connection_adapters/postgresql/cast.rb	/^  module ConnectionAdapters$/;"	m	class:ActiveRecord
ConnectionAdapters	lib/active_record/connection_adapters/postgresql/database_statements.rb	/^  module ConnectionAdapters$/;"	m	class:ActiveRecord
ConnectionAdapters	lib/active_record/connection_adapters/postgresql/oid.rb	/^  module ConnectionAdapters$/;"	m	class:ActiveRecord
ConnectionAdapters	lib/active_record/connection_adapters/postgresql/quoting.rb	/^  module ConnectionAdapters$/;"	m	class:ActiveRecord
ConnectionAdapters	lib/active_record/connection_adapters/postgresql/referential_integrity.rb	/^  module ConnectionAdapters$/;"	m	class:ActiveRecord
ConnectionAdapters	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^  module ConnectionAdapters$/;"	m	class:ActiveRecord
ConnectionAdapters	lib/active_record/connection_adapters/postgresql_adapter.rb	/^  module ConnectionAdapters$/;"	m	class:ActiveRecord
ConnectionAdapters	lib/active_record/connection_adapters/schema_cache.rb	/^  module ConnectionAdapters$/;"	m	class:ActiveRecord
ConnectionAdapters	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^  module ConnectionAdapters #:nodoc:$/;"	m	class:ActiveRecord
ConnectionAdapters	lib/active_record/connection_adapters/statement_pool.rb	/^  module ConnectionAdapters$/;"	m	class:ActiveRecord
ConnectionHandler	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^    class ConnectionHandler$/;"	c	class:ActiveRecord
ConnectionHandling	lib/active_record/connection_adapters/mysql2_adapter.rb	/^  module ConnectionHandling$/;"	m	class:ActiveRecord
ConnectionHandling	lib/active_record/connection_adapters/mysql_adapter.rb	/^  module ConnectionHandling$/;"	m	class:ActiveRecord
ConnectionHandling	lib/active_record/connection_adapters/postgresql_adapter.rb	/^  module ConnectionHandling$/;"	m	class:ActiveRecord
ConnectionHandling	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^  module ConnectionHandling$/;"	m	class:ActiveRecord
ConnectionHandling	lib/active_record/connection_handling.rb	/^  module ConnectionHandling$/;"	m	class:ActiveRecord
ConnectionManagement	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^    class ConnectionManagement$/;"	c
ConnectionNotEstablished	lib/active_record/errors.rb	/^  class ConnectionNotEstablished < ActiveRecordError$/;"	c	class:ActiveRecord
ConnectionPool	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^    class ConnectionPool$/;"	c	class:ActiveRecord.ConnectionAdapters
ConnectionSpecification	lib/active_record/connection_adapters/connection_specification.rb	/^    class ConnectionSpecification #:nodoc:$/;"	c	class:ActiveRecord.ConnectionAdapters
ConnectionTimeoutError	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^  class ConnectionTimeoutError < ConnectionNotEstablished$/;"	c	class:ActiveRecord
ControllerRuntime	lib/active_record/railties/controller_runtime.rb	/^    module ControllerRuntime #:nodoc:$/;"	m	class:ActiveRecord.Railties
Core	lib/active_record/core.rb	/^  module Core$/;"	m	class:ActiveRecord
CounterCache	lib/active_record/counter_cache.rb	/^  module CounterCache$/;"	m	class:ActiveRecord
DangerousAttributeError	lib/active_record/errors.rb	/^  class DangerousAttributeError < ActiveRecordError$/;"	c	class:ActiveRecord
DatabaseLimits	lib/active_record/connection_adapters/abstract/database_limits.rb	/^    module DatabaseLimits$/;"	m	class:ActiveRecord.ConnectionAdapters
DatabaseStatements	lib/active_record/connection_adapters/abstract/database_statements.rb	/^    module DatabaseStatements$/;"	m	class:ActiveRecord.ConnectionAdapters
DatabaseStatements	lib/active_record/connection_adapters/postgresql/database_statements.rb	/^      module DatabaseStatements$/;"	m	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter
DatabaseTasks	lib/active_record/tasks/database_tasks.rb	/^    module DatabaseTasks # :nodoc:$/;"	m	class:ActiveRecord.Tasks
Date	lib/active_record/connection_adapters/mysql_adapter.rb	/^        class Date < Type$/;"	c	class:ActiveRecord.ConnectionAdapters.MysqlAdapter.Fields
Date	lib/active_record/connection_adapters/postgresql/oid.rb	/^        class Date < Type$/;"	c	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID
DateTime	lib/active_record/connection_adapters/mysql_adapter.rb	/^        class DateTime < Type$/;"	c	class:ActiveRecord.ConnectionAdapters.MysqlAdapter.Fields
Decimal	lib/active_record/connection_adapters/mysql_adapter.rb	/^        class Decimal < Type$/;"	c	class:ActiveRecord.ConnectionAdapters.MysqlAdapter.Fields
Decimal	lib/active_record/connection_adapters/postgresql/oid.rb	/^        class Decimal < Type$/;"	c	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID
Default	lib/active_record/scoping/default.rb	/^    module Default$/;"	m	class:ActiveRecord.Scoping
Delegation	lib/active_record/relation/delegation.rb	/^  module Delegation # :nodoc:$/;"	m	class:ActiveRecord
DeleteRestrictionError	lib/active_record/associations.rb	/^  class DeleteRestrictionError < ActiveRecordError #:nodoc:$/;"	c	class:ActiveRecord
Dirty	lib/active_record/attribute_methods/dirty.rb	/^    module Dirty # :nodoc:$/;"	m	class:ActiveRecord.AttributeMethods
DuplicateMigrationNameError	lib/active_record/migration.rb	/^  class DuplicateMigrationNameError < ActiveRecordError#:nodoc:$/;"	c	class:ActiveRecord
DuplicateMigrationVersionError	lib/active_record/migration.rb	/^  class DuplicateMigrationVersionError < ActiveRecordError#:nodoc:$/;"	c	class:ActiveRecord
DynamicMatchers	lib/active_record/dynamic_matchers.rb	/^  module DynamicMatchers #:nodoc:$/;"	m	class:ActiveRecord
EagerLoadPolymorphicError	lib/active_record/associations.rb	/^  class EagerLoadPolymorphicError < ActiveRecordError #:nodoc:$/;"	c	class:ActiveRecord
Error	lib/active_record/railties/jdbcmysql_error.rb	/^  class Error < StandardError #:nodoc:$/;"	c	class:ArJdbcMySQL
Explain	lib/active_record/explain.rb	/^  module Explain$/;"	m	class:ActiveRecord
ExplainPrettyPrinter	lib/active_record/connection_adapters/mysql2_adapter.rb	/^      class ExplainPrettyPrinter # :nodoc:$/;"	c	class:ActiveRecord.ConnectionAdapters.Mysql2Adapter
ExplainPrettyPrinter	lib/active_record/connection_adapters/postgresql/database_statements.rb	/^        class ExplainPrettyPrinter # :nodoc:$/;"	c	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.DatabaseStatements
ExplainPrettyPrinter	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      class ExplainPrettyPrinter$/;"	c	class:ActiveRecord.SQLite3Adapter
ExplainSubscriber	lib/active_record/explain_subscriber.rb	/^  class ExplainSubscriber # :nodoc:$/;"	c	class:ActiveRecord
Fields	lib/active_record/connection_adapters/mysql_adapter.rb	/^      module Fields$/;"	m	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
File	lib/active_record/fixture_set/file.rb	/^    class File # :nodoc:$/;"	c	class:ActiveRecord.FixtureSet
FindBy	lib/active_record/dynamic_matchers.rb	/^    class FindBy < Method$/;"	c
FindByBang	lib/active_record/dynamic_matchers.rb	/^    class FindByBang < Method$/;"	c
Finder	lib/active_record/dynamic_matchers.rb	/^    module Finder$/;"	m
FinderMethods	lib/active_record/relation/finder_methods.rb	/^  module FinderMethods$/;"	m	class:ActiveRecord
Fixture	lib/active_record/fixtures.rb	/^  class Fixture #:nodoc:$/;"	c	class:ActiveRecord
FixtureClassNotFound	lib/active_record/fixtures.rb	/^  class FixtureClassNotFound < ActiveRecord::ActiveRecordError #:nodoc:$/;"	c	class:ActiveRecord
FixtureError	lib/active_record/fixtures.rb	/^    class FixtureError < StandardError #:nodoc:$/;"	c	class:ActiveRecord.Fixture
FixtureSet	lib/active_record/fixture_set/file.rb	/^  class FixtureSet$/;"	c	class:ActiveRecord
FixtureSet	lib/active_record/fixtures.rb	/^  class FixtureSet$/;"	c	class:ActiveRecord
Float	lib/active_record/connection_adapters/mysql_adapter.rb	/^        class Float < Type$/;"	c	class:ActiveRecord.ConnectionAdapters.MysqlAdapter.Fields
Float	lib/active_record/connection_adapters/postgresql/oid.rb	/^        class Float < Type$/;"	c	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID
Format	lib/active_record/connection_adapters/column.rb	/^      module Format$/;"	m	class:ActiveRecord.ConnectionAdapters.Column
FormatError	lib/active_record/fixtures.rb	/^    class FormatError < FixtureError #:nodoc:$/;"	c	class:ActiveRecord.Fixture
Generators	lib/rails/generators/active_record.rb	/^  module Generators # :nodoc:$/;"	m	class:ActiveRecord
Generators	lib/rails/generators/active_record/migration/migration_generator.rb	/^  module Generators # :nodoc:$/;"	m	class:ActiveRecord
Generators	lib/rails/generators/active_record/model/model_generator.rb	/^  module Generators # :nodoc:$/;"	m	class:ActiveRecord
Generators	lib/rails/generators/active_record/observer/observer_generator.rb	/^  module Generators # :nodoc:$/;"	m	class:ActiveRecord
HasAndBelongsToMany	lib/active_record/associations/builder/has_and_belongs_to_many.rb	/^  class HasAndBelongsToMany < CollectionAssociation #:nodoc:$/;"	c	class:ActiveRecord
HasAndBelongsToMany	lib/active_record/associations/preloader/has_and_belongs_to_many.rb	/^      class HasAndBelongsToMany < CollectionAssociation #:nodoc:$/;"	c	class:ActiveRecord.Associations.Preloader
HasAndBelongsToManyAssociation	lib/active_record/associations/has_and_belongs_to_many_association.rb	/^    class HasAndBelongsToManyAssociation < CollectionAssociation #:nodoc:$/;"	c	class:ActiveRecord.Associations
HasAndBelongsToManyAssociationForeignKeyNeeded	lib/active_record/associations.rb	/^  class HasAndBelongsToManyAssociationForeignKeyNeeded < ActiveRecordError #:nodoc:$/;"	c	class:ActiveRecord
HasMany	lib/active_record/associations/builder/has_many.rb	/^  class HasMany < CollectionAssociation #:nodoc:$/;"	c	class:ActiveRecord
HasMany	lib/active_record/associations/preloader/has_many.rb	/^      class HasMany < CollectionAssociation #:nodoc:$/;"	c	class:ActiveRecord.Associations.Preloader
HasManyAssociation	lib/active_record/associations/has_many_association.rb	/^    class HasManyAssociation < CollectionAssociation #:nodoc:$/;"	c	class:ActiveRecord.Associations
HasManyThrough	lib/active_record/associations/preloader/has_many_through.rb	/^      class HasManyThrough < CollectionAssociation #:nodoc:$/;"	c	class:ActiveRecord.Associations.Preloader
HasManyThroughAssociation	lib/active_record/associations/has_many_through_association.rb	/^    class HasManyThroughAssociation < HasManyAssociation #:nodoc:$/;"	c	class:ActiveRecord.Associations
HasManyThroughAssociationNotFoundError	lib/active_record/associations.rb	/^  class HasManyThroughAssociationNotFoundError < ActiveRecordError #:nodoc:$/;"	c	class:ActiveRecord
HasManyThroughAssociationPointlessSourceTypeError	lib/active_record/associations.rb	/^  class HasManyThroughAssociationPointlessSourceTypeError < ActiveRecordError #:nodoc:$/;"	c	class:ActiveRecord
HasManyThroughAssociationPolymorphicSourceError	lib/active_record/associations.rb	/^  class HasManyThroughAssociationPolymorphicSourceError < ActiveRecordError #:nodoc:$/;"	c	class:ActiveRecord
HasManyThroughAssociationPolymorphicThroughError	lib/active_record/associations.rb	/^  class HasManyThroughAssociationPolymorphicThroughError < ActiveRecordError #:nodoc:$/;"	c	class:ActiveRecord
HasManyThroughCantAssociateNewRecords	lib/active_record/associations.rb	/^  class HasManyThroughCantAssociateNewRecords < ActiveRecordError #:nodoc:$/;"	c	class:ActiveRecord
HasManyThroughCantAssociateThroughHasOneOrManyReflection	lib/active_record/associations.rb	/^  class HasManyThroughCantAssociateThroughHasOneOrManyReflection < ActiveRecordError #:nodoc:$/;"	c	class:ActiveRecord
HasManyThroughCantDissociateNewRecords	lib/active_record/associations.rb	/^  class HasManyThroughCantDissociateNewRecords < ActiveRecordError #:nodoc:$/;"	c	class:ActiveRecord
HasManyThroughNestedAssociationsAreReadonly	lib/active_record/associations.rb	/^  class HasManyThroughNestedAssociationsAreReadonly < ActiveRecordError #:nodoc:$/;"	c	class:ActiveRecord
HasManyThroughSourceAssociationNotFoundError	lib/active_record/associations.rb	/^  class HasManyThroughSourceAssociationNotFoundError < ActiveRecordError #:nodoc:$/;"	c	class:ActiveRecord
HasOne	lib/active_record/associations/builder/has_one.rb	/^  class HasOne < SingularAssociation #:nodoc:$/;"	c	class:ActiveRecord
HasOne	lib/active_record/associations/preloader/has_one.rb	/^      class HasOne < SingularAssociation #:nodoc:$/;"	c	class:ActiveRecord.Associations.Preloader
HasOneAssociation	lib/active_record/associations/has_one_association.rb	/^    class HasOneAssociation < SingularAssociation #:nodoc:$/;"	c	class:ActiveRecord.Associations
HasOneThrough	lib/active_record/associations/preloader/has_one_through.rb	/^      class HasOneThrough < SingularAssociation #:nodoc:$/;"	c	class:ActiveRecord.Associations.Preloader
HasOneThroughAssociation	lib/active_record/associations/has_one_through_association.rb	/^    class HasOneThroughAssociation < HasOneAssociation #:nodoc:$/;"	c	class:ActiveRecord.Associations
HasOneThroughCantAssociateThroughCollection	lib/active_record/associations.rb	/^  class HasOneThroughCantAssociateThroughCollection < ActiveRecordError #:nodoc:$/;"	c	class:ActiveRecord
HashMerger	lib/active_record/relation/merger.rb	/^    class HashMerger # :nodoc:$/;"	c	class:ActiveRecord.Relation
Hstore	lib/active_record/connection_adapters/postgresql/oid.rb	/^        class Hstore < Type$/;"	c	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID
Identity	lib/active_record/connection_adapters/mysql_adapter.rb	/^        class Identity < Type$/;"	c	class:ActiveRecord.ConnectionAdapters.MysqlAdapter.Fields
Identity	lib/active_record/connection_adapters/postgresql/oid.rb	/^        class Identity < Type$/;"	c	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID
IllegalMigrationNameError	lib/active_record/migration.rb	/^  class IllegalMigrationNameError < ActiveRecordError#:nodoc:$/;"	c	class:ActiveRecord
ImmutableRelation	lib/active_record/errors.rb	/^  class ImmutableRelation < ActiveRecordError$/;"	c	class:ActiveRecord
IndexDefinition	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^    class IndexDefinition < Struct.new(:table, :name, :unique, :columns, :lengths, :orders, :where) #:nodoc:$/;"	c	class:ActiveRecord.ConnectionAdapters
IndifferentCoder	lib/active_record/store.rb	/^    class IndifferentCoder # :nodoc:$/;"	c	class:ActiveRecord
Inheritance	lib/active_record/inheritance.rb	/^  module Inheritance$/;"	m	class:ActiveRecord
Integer	lib/active_record/connection_adapters/mysql_adapter.rb	/^        class Integer < Type$/;"	c	class:ActiveRecord.ConnectionAdapters.MysqlAdapter.Fields
Integer	lib/active_record/connection_adapters/postgresql/oid.rb	/^        class Integer < Type$/;"	c	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID
Integration	lib/active_record/integration.rb	/^  module Integration$/;"	m	class:ActiveRecord
InvalidForeignKey	lib/active_record/errors.rb	/^  class InvalidForeignKey < WrappedDatabaseException$/;"	c	class:ActiveRecord
InverseOfAssociationNotFoundError	lib/active_record/associations.rb	/^  class InverseOfAssociationNotFoundError < ActiveRecordError #:nodoc:$/;"	c	class:ActiveRecord
IrreversibleMigration	lib/active_record/migration.rb	/^  class IrreversibleMigration < ActiveRecordError$/;"	c	class:ActiveRecord
JoinAssociation	lib/active_record/associations/join_dependency/join_association.rb	/^      class JoinAssociation < JoinPart # :nodoc:$/;"	c	class:ActiveRecord.Associations.JoinDependency
JoinBase	lib/active_record/associations/join_dependency/join_base.rb	/^      class JoinBase < JoinPart # :nodoc:$/;"	c	class:ActiveRecord.Associations.JoinDependency
JoinDependency	lib/active_record/associations/join_dependency.rb	/^    class JoinDependency # :nodoc:$/;"	c	class:ActiveRecord.Associations
JoinDependency	lib/active_record/associations/join_dependency/join_association.rb	/^    class JoinDependency # :nodoc:$/;"	c	class:ActiveRecord.Associations
JoinDependency	lib/active_record/associations/join_dependency/join_base.rb	/^    class JoinDependency # :nodoc:$/;"	c	class:ActiveRecord.Associations
JoinDependency	lib/active_record/associations/join_dependency/join_part.rb	/^    class JoinDependency # :nodoc:$/;"	c	class:ActiveRecord.Associations
JoinHelper	lib/active_record/associations/join_helper.rb	/^    module JoinHelper #:nodoc:$/;"	m	class:ActiveRecord.Associations
JoinPart	lib/active_record/associations/join_dependency/join_part.rb	/^      class JoinPart # :nodoc:$/;"	c	class:ActiveRecord.Associations.JoinDependency
JoinTable	lib/active_record/migration/join_table.rb	/^    module JoinTable #:nodoc:$/;"	m	class:ActiveRecord.Migration
Json	lib/active_record/connection_adapters/postgresql/oid.rb	/^        class Json < Type$/;"	c	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID
Locking	lib/active_record.rb	/^  module Locking$/;"	m	class:ActiveRecord
Locking	lib/active_record/locking/optimistic.rb	/^  module Locking$/;"	m	class:ActiveRecord
Locking	lib/active_record/locking/pessimistic.rb	/^  module Locking$/;"	m	class:ActiveRecord
LogSubscriber	lib/active_record/log_subscriber.rb	/^  class LogSubscriber < ActiveSupport::LogSubscriber$/;"	c	class:ActiveRecord
MacroReflection	lib/active_record/reflection.rb	/^    class MacroReflection$/;"	c	class:ActiveRecord.Reflection
Merger	lib/active_record/relation/merger.rb	/^    class Merger # :nodoc:$/;"	c	class:ActiveRecord.Relation
Method	lib/active_record/dynamic_matchers.rb	/^    class Method$/;"	c	class:ActiveRecord.DynamicMatchers
Migration	lib/active_record/migration.rb	/^  class Migration$/;"	c	class:ActiveRecord
Migration	lib/active_record/migration/command_recorder.rb	/^  class Migration$/;"	c	class:ActiveRecord
Migration	lib/active_record/migration/join_table.rb	/^  class Migration$/;"	c	class:ActiveRecord
MigrationGenerator	lib/rails/generators/active_record/migration/migration_generator.rb	/^    class MigrationGenerator < Base # :nodoc:$/;"	c	class:ActiveRecord.Generators
MigrationProxy	lib/active_record/migration.rb	/^  class MigrationProxy < Struct.new(:name, :version, :filename, :scope)$/;"	c
Migrator	lib/active_record/migration.rb	/^  class Migrator#:nodoc:$/;"	c
ModelGenerator	lib/rails/generators/active_record/model/model_generator.rb	/^    class ModelGenerator < Base # :nodoc:$/;"	c	class:ActiveRecord.Generators
ModelSchema	lib/active_record/model_schema.rb	/^  module ModelSchema$/;"	m	class:ActiveRecord
Money	lib/active_record/connection_adapters/postgresql/oid.rb	/^        class Money < Type$/;"	c	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID
MultiparameterAssignmentErrors	lib/active_record/errors.rb	/^  class MultiparameterAssignmentErrors < ActiveRecordError$/;"	c	class:ActiveRecord
MultiparameterAttribute	lib/active_record/attribute_assignment.rb	/^    class MultiparameterAttribute #:nodoc:$/;"	c	class:ActiveRecord.AttributeAssignment
MySQLDatabaseTasks	lib/active_record/tasks/mysql_database_tasks.rb	/^    class MySQLDatabaseTasks # :nodoc:$/;"	c	class:ActiveRecord.Tasks
Mysql	lib/active_record/connection_adapters/mysql_adapter.rb	/^class Mysql$/;"	c
Mysql2Adapter	lib/active_record/connection_adapters/mysql2_adapter.rb	/^    class Mysql2Adapter < AbstractMysqlAdapter$/;"	c	class:ActiveRecord.ConnectionAdapters
MysqlAdapter	lib/active_record/connection_adapters/mysql_adapter.rb	/^    class MysqlAdapter < AbstractMysqlAdapter$/;"	c	class:ActiveRecord.ConnectionAdapters
Named	lib/active_record/scoping/named.rb	/^    module Named$/;"	m	class:ActiveRecord.Scoping
NestedAttributes	lib/active_record/nested_attributes.rb	/^  module NestedAttributes #:nodoc:$/;"	m	class:ActiveRecord
NullRelation	lib/active_record/null_relation.rb	/^  module NullRelation # :nodoc:$/;"	m	class:ActiveRecord
OID	lib/active_record/connection_adapters/postgresql/oid.rb	/^      module OID$/;"	m	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter
Observer	lib/active_record/observer.rb	/^  class Observer < ActiveModel::Observer$/;"	c	class:ActiveRecord
ObserverGenerator	lib/rails/generators/active_record/observer/observer_generator.rb	/^    class ObserverGenerator < Base # :nodoc:$/;"	c	class:ActiveRecord.Generators
OpenTransaction	lib/active_record/connection_adapters/abstract/transaction.rb	/^    class OpenTransaction < Transaction #:nodoc:$/;"	c	class:ActiveRecord.ConnectionAdapters
Optimistic	lib/active_record/locking/optimistic.rb	/^    module Optimistic$/;"	m	class:ActiveRecord.Locking
PendingMigrationError	lib/active_record/migration.rb	/^  class PendingMigrationError < ActiveRecordError#:nodoc:$/;"	c	class:ActiveRecord
Persistence	lib/active_record/persistence.rb	/^  module Persistence$/;"	m	class:ActiveRecord
Pessimistic	lib/active_record/locking/pessimistic.rb	/^    module Pessimistic$/;"	m	class:ActiveRecord.Locking
PostgreSQLAdapter	lib/active_record/connection_adapters/postgresql/database_statements.rb	/^    class PostgreSQLAdapter < AbstractAdapter$/;"	c	class:ActiveRecord.ConnectionAdapters
PostgreSQLAdapter	lib/active_record/connection_adapters/postgresql/oid.rb	/^    class PostgreSQLAdapter < AbstractAdapter$/;"	c	class:ActiveRecord.ConnectionAdapters
PostgreSQLAdapter	lib/active_record/connection_adapters/postgresql/quoting.rb	/^    class PostgreSQLAdapter < AbstractAdapter$/;"	c	class:ActiveRecord.ConnectionAdapters
PostgreSQLAdapter	lib/active_record/connection_adapters/postgresql/referential_integrity.rb	/^    class PostgreSQLAdapter < AbstractAdapter$/;"	c	class:ActiveRecord.ConnectionAdapters
PostgreSQLAdapter	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^    class PostgreSQLAdapter < AbstractAdapter$/;"	c	class:ActiveRecord.ConnectionAdapters
PostgreSQLAdapter	lib/active_record/connection_adapters/postgresql_adapter.rb	/^    class PostgreSQLAdapter < AbstractAdapter$/;"	c	class:ActiveRecord
PostgreSQLColumn	lib/active_record/connection_adapters/postgresql/array_parser.rb	/^    class PostgreSQLColumn < Column$/;"	c	class:ActiveRecord.ConnectionAdapters
PostgreSQLColumn	lib/active_record/connection_adapters/postgresql/cast.rb	/^    class PostgreSQLColumn < Column$/;"	c	class:ActiveRecord.ConnectionAdapters
PostgreSQLColumn	lib/active_record/connection_adapters/postgresql_adapter.rb	/^    class PostgreSQLColumn < Column #:nodoc:$/;"	c	class:ActiveRecord.ConnectionAdapters
PostgreSQLDatabaseTasks	lib/active_record/tasks/postgresql_database_tasks.rb	/^    class PostgreSQLDatabaseTasks # :nodoc:$/;"	c	class:ActiveRecord.Tasks
PredicateBuilder	lib/active_record/relation/predicate_builder.rb	/^  class PredicateBuilder # :nodoc:$/;"	c	class:ActiveRecord
Preloader	lib/active_record/associations/preloader.rb	/^    class Preloader #:nodoc:$/;"	c	class:ActiveRecord.Associations
Preloader	lib/active_record/associations/preloader/association.rb	/^    class Preloader$/;"	c	class:ActiveRecord.Associations
Preloader	lib/active_record/associations/preloader/belongs_to.rb	/^    class Preloader$/;"	c	class:ActiveRecord.Associations
Preloader	lib/active_record/associations/preloader/collection_association.rb	/^    class Preloader$/;"	c	class:ActiveRecord.Associations
Preloader	lib/active_record/associations/preloader/has_and_belongs_to_many.rb	/^    class Preloader$/;"	c	class:ActiveRecord.Associations
Preloader	lib/active_record/associations/preloader/has_many.rb	/^    class Preloader$/;"	c	class:ActiveRecord.Associations
Preloader	lib/active_record/associations/preloader/has_many_through.rb	/^    class Preloader$/;"	c	class:ActiveRecord.Associations
Preloader	lib/active_record/associations/preloader/has_one.rb	/^    class Preloader$/;"	c	class:ActiveRecord.Associations
Preloader	lib/active_record/associations/preloader/has_one_through.rb	/^    class Preloader$/;"	c	class:ActiveRecord.Associations
Preloader	lib/active_record/associations/preloader/singular_association.rb	/^    class Preloader$/;"	c	class:ActiveRecord.Associations
Preloader	lib/active_record/associations/preloader/through_association.rb	/^    class Preloader$/;"	c	class:ActiveRecord.Associations
PreparedStatementInvalid	lib/active_record/errors.rb	/^  class PreparedStatementInvalid < ActiveRecordError$/;"	c	class:ActiveRecord
PresenceValidator	lib/active_record/validations/presence.rb	/^    class PresenceValidator < ActiveModel::Validations::PresenceValidator # :nodoc:$/;"	c	class:ActiveRecord.Validations
PrimaryKey	lib/active_record/attribute_methods/primary_key.rb	/^    module PrimaryKey$/;"	m	class:ActiveRecord.AttributeMethods
Query	lib/active_record/attribute_methods/query.rb	/^    module Query$/;"	m	class:ActiveRecord.AttributeMethods
QueryCache	lib/active_record/connection_adapters/abstract/query_cache.rb	/^    module QueryCache$/;"	m	class:ActiveRecord.ConnectionAdapters
QueryCache	lib/active_record/query_cache.rb	/^  class QueryCache$/;"	c	class:ActiveRecord
QueryMethods	lib/active_record/relation/query_methods.rb	/^  module QueryMethods$/;"	m	class:ActiveRecord
Querying	lib/active_record/querying.rb	/^  module Querying$/;"	m	class:ActiveRecord
Queue	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      class Queue$/;"	c	class:ActiveRecord.ConnectionAdapters.ConnectionPool
Quoting	lib/active_record/connection_adapters/abstract/quoting.rb	/^    module Quoting$/;"	m	class:ActiveRecord.ConnectionAdapters
Quoting	lib/active_record/connection_adapters/postgresql/quoting.rb	/^      module Quoting$/;"	m	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter
Railtie	lib/active_record/railtie.rb	/^  class Railtie < Rails::Railtie # :nodoc:$/;"	c	class:ActiveRecord
Railties	lib/active_record/railties/controller_runtime.rb	/^  module Railties # :nodoc:$/;"	m	class:ActiveRecord
Read	lib/active_record/attribute_methods/read.rb	/^    module Read$/;"	m	class:ActiveRecord.AttributeMethods
ReadOnlyAssociation	lib/active_record/associations.rb	/^  class ReadOnlyAssociation < ActiveRecordError #:nodoc:$/;"	c	class:ActiveRecord
ReadOnlyRecord	lib/active_record/errors.rb	/^  class ReadOnlyRecord < ActiveRecordError$/;"	c	class:ActiveRecord
ReadonlyAttributes	lib/active_record/readonly_attributes.rb	/^  module ReadonlyAttributes$/;"	m	class:ActiveRecord
RealTransaction	lib/active_record/connection_adapters/abstract/transaction.rb	/^    class RealTransaction < OpenTransaction #:nodoc:$/;"	c	class:ActiveRecord.ConnectionAdapters
Reaper	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      class Reaper$/;"	c	class:ActiveRecord.ConnectionAdapters.ConnectionPool
RecordInvalid	lib/active_record/validations.rb	/^  class RecordInvalid < ActiveRecordError$/;"	c	class:ActiveRecord
RecordNotDestroyed	lib/active_record/errors.rb	/^  class RecordNotDestroyed < ActiveRecordError$/;"	c	class:ActiveRecord
RecordNotFound	lib/active_record/errors.rb	/^  class RecordNotFound < ActiveRecordError$/;"	c	class:ActiveRecord
RecordNotSaved	lib/active_record/errors.rb	/^  class RecordNotSaved < ActiveRecordError$/;"	c	class:ActiveRecord
RecordNotUnique	lib/active_record/errors.rb	/^  class RecordNotUnique < WrappedDatabaseException$/;"	c	class:ActiveRecord
ReferentialIntegrity	lib/active_record/connection_adapters/postgresql/referential_integrity.rb	/^      module ReferentialIntegrity$/;"	m	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter
Reflection	lib/active_record/reflection.rb	/^  module Reflection # :nodoc:$/;"	m	class:ActiveRecord
Relation	lib/active_record/relation.rb	/^  class Relation$/;"	c	class:ActiveRecord
Relation	lib/active_record/relation/merger.rb	/^  class Relation$/;"	c	class:ActiveRecord
Resolver	lib/active_record/connection_adapters/connection_specification.rb	/^      class Resolver # :nodoc:$/;"	c	class:ActiveRecord.ConnectionAdapters.ConnectionSpecification
Result	lib/active_record/connection_adapters/mysql_adapter.rb	/^  class Result; include Enumerable end$/;"	c	class:Mysql
Result	lib/active_record/result.rb	/^  class Result$/;"	c	class:ActiveRecord
Rollback	lib/active_record/errors.rb	/^  class Rollback < ActiveRecordError$/;"	c	class:ActiveRecord
SQLCounter	lib/active_record/test_case.rb	/^  class SQLCounter$/;"	c	class:ActiveRecord
SQLite3Adapter	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^    class SQLite3Adapter < AbstractAdapter$/;"	c	class:ActiveRecord
SQLite3Column	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^    class SQLite3Column < Column #:nodoc:$/;"	c	class:ActiveRecord.ConnectionAdapters
SQLiteDatabaseTasks	lib/active_record/tasks/sqlite_database_tasks.rb	/^    class SQLiteDatabaseTasks # :nodoc:$/;"	c	class:ActiveRecord.Tasks
Sanitization	lib/active_record/sanitization.rb	/^  module Sanitization$/;"	m	class:ActiveRecord
SavepointTransaction	lib/active_record/connection_adapters/abstract/transaction.rb	/^    class SavepointTransaction < OpenTransaction #:nodoc:$/;"	c	class:ActiveRecord.ConnectionAdapters
Schema	lib/active_record/schema.rb	/^  class Schema < Migration$/;"	c	class:ActiveRecord
SchemaCache	lib/active_record/connection_adapters/schema_cache.rb	/^    class SchemaCache$/;"	c	class:ActiveRecord.ConnectionAdapters
SchemaDumper	lib/active_record/schema_dumper.rb	/^  class SchemaDumper #:nodoc:$/;"	c	class:ActiveRecord
SchemaMigration	lib/active_record/schema_migration.rb	/^  class SchemaMigration < ActiveRecord::Base$/;"	c	class:ActiveRecord
SchemaStatements	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^    module SchemaStatements$/;"	m	class:ActiveRecord.ConnectionAdapters
SchemaStatements	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^      module SchemaStatements$/;"	m	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter
Scoping	lib/active_record.rb	/^  module Scoping$/;"	m	class:ActiveRecord
Scoping	lib/active_record/scoping.rb	/^  module Scoping$/;"	m	class:ActiveRecord
Scoping	lib/active_record/scoping/default.rb	/^  module Scoping$/;"	m	class:ActiveRecord
Scoping	lib/active_record/scoping/named.rb	/^  module Scoping$/;"	m	class:ActiveRecord
Serialization	lib/active_record/attribute_methods/serialization.rb	/^    module Serialization$/;"	m	class:ActiveRecord.AttributeMethods
Serialization	lib/active_record/serialization.rb	/^  module Serialization$/;"	m	class:ActiveRecord
Serialization	lib/active_record/serializers/xml_serializer.rb	/^  module Serialization$/;"	m	class:ActiveRecord
SerializationTypeMismatch	lib/active_record/errors.rb	/^  class SerializationTypeMismatch < ActiveRecordError$/;"	c	class:ActiveRecord
SingularAssociation	lib/active_record/associations/builder/singular_association.rb	/^  class SingularAssociation < Association #:nodoc:$/;"	c	class:ActiveRecord
SingularAssociation	lib/active_record/associations/preloader/singular_association.rb	/^      class SingularAssociation < Association #:nodoc:$/;"	c	class:ActiveRecord.Associations.Preloader
SingularAssociation	lib/active_record/associations/singular_association.rb	/^    class SingularAssociation < Association #:nodoc:$/;"	c	class:ActiveRecord.Associations
SpawnMethods	lib/active_record/relation/spawn_methods.rb	/^  module SpawnMethods$/;"	m	class:ActiveRecord
StaleObjectError	lib/active_record/errors.rb	/^  class StaleObjectError < ActiveRecordError$/;"	c	class:ActiveRecord
StatementInvalid	lib/active_record/errors.rb	/^  class StatementInvalid < ActiveRecordError$/;"	c	class:ActiveRecord
StatementPool	lib/active_record/connection_adapters/mysql_adapter.rb	/^      class StatementPool < ConnectionAdapters::StatementPool$/;"	c	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
StatementPool	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      class StatementPool < ConnectionAdapters::StatementPool$/;"	c	class:ActiveRecord.PostgreSQLAdapter
StatementPool	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      class StatementPool < ConnectionAdapters::StatementPool$/;"	c	class:ActiveRecord.SQLite3Adapter
StatementPool	lib/active_record/connection_adapters/statement_pool.rb	/^    class StatementPool$/;"	c	class:ActiveRecord.ConnectionAdapters
Stmt	lib/active_record/connection_adapters/mysql_adapter.rb	/^  class Stmt; include Enumerable end$/;"	c	class:Mysql
Store	lib/active_record/store.rb	/^  module Store$/;"	m	class:ActiveRecord
SubclassNotFound	lib/active_record/errors.rb	/^  class SubclassNotFound < ActiveRecordError #:nodoc:$/;"	c	class:ActiveRecord
Table	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^    class Table$/;"	c	class:ActiveRecord
TableDefinition	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^    class TableDefinition$/;"	c	class:ActiveRecord.ConnectionAdapters
TableDefinition	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      class TableDefinition < ActiveRecord::ConnectionAdapters::TableDefinition$/;"	c	class:ActiveRecord.PostgreSQLAdapter
Tasks	lib/active_record.rb	/^  module Tasks$/;"	m	class:ActiveRecord
Tasks	lib/active_record/tasks/database_tasks.rb	/^  module Tasks # :nodoc:$/;"	m	class:ActiveRecord
Tasks	lib/active_record/tasks/mysql_database_tasks.rb	/^  module Tasks # :nodoc:$/;"	m	class:ActiveRecord
Tasks	lib/active_record/tasks/postgresql_database_tasks.rb	/^  module Tasks # :nodoc:$/;"	m	class:ActiveRecord
Tasks	lib/active_record/tasks/sqlite_database_tasks.rb	/^  module Tasks # :nodoc:$/;"	m	class:ActiveRecord
TestCase	lib/active_record/test_case.rb	/^  class TestCase < ActiveSupport::TestCase #:nodoc:$/;"	c	class:ActiveRecord
TestFixtures	lib/active_record/fixtures.rb	/^  module TestFixtures$/;"	m	class:ActiveRecord
ThroughAssociation	lib/active_record/associations/preloader/through_association.rb	/^      module ThroughAssociation #:nodoc:$/;"	m	class:ActiveRecord.Associations.Preloader
ThroughAssociation	lib/active_record/associations/through_association.rb	/^    module ThroughAssociation #:nodoc:$/;"	m	class:ActiveRecord.Associations
ThroughReflection	lib/active_record/reflection.rb	/^    class ThroughReflection < AssociationReflection #:nodoc:$/;"	c	class:ActiveRecord.Reflection
ThrowResult	lib/active_record/errors.rb	/^  class ThrowResult < ActiveRecordError$/;"	c	class:ActiveRecord
Time	lib/active_record/connection_adapters/mysql_adapter.rb	/^        class Time < Type$/;"	c	class:ActiveRecord.ConnectionAdapters.MysqlAdapter.Fields
Time	lib/active_record/connection_adapters/mysql_adapter.rb	/^  class Time$/;"	c	class:Mysql
Time	lib/active_record/connection_adapters/postgresql/oid.rb	/^        class Time < Type$/;"	c	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID
TimeZoneConversion	lib/active_record/attribute_methods/time_zone_conversion.rb	/^    module TimeZoneConversion$/;"	m	class:ActiveRecord.AttributeMethods
Timestamp	lib/active_record/connection_adapters/postgresql/oid.rb	/^        class Timestamp < Type$/;"	c	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID
Timestamp	lib/active_record/timestamp.rb	/^  module Timestamp$/;"	m	class:ActiveRecord
TooManyRecords	lib/active_record/nested_attributes.rb	/^    class TooManyRecords < ActiveRecordError$/;"	c	class:ActiveRecord.NestedAttributes
Transaction	lib/active_record/connection_adapters/abstract/transaction.rb	/^    class Transaction #:nodoc:$/;"	c	class:ActiveRecord.ConnectionAdapters
TransactionError	lib/active_record/transactions.rb	/^    class TransactionError < ActiveRecordError # :nodoc:$/;"	c	class:ActiveRecord.Transactions
TransactionIsolationError	lib/active_record/errors.rb	/^  class TransactionIsolationError < ActiveRecordError$/;"	c	class:ActiveRecord
Transactions	lib/active_record/transactions.rb	/^  module Transactions$/;"	m	class:ActiveRecord
Translation	lib/active_record/translation.rb	/^  module Translation$/;"	m	class:ActiveRecord
Type	lib/active_record/attribute_methods/serialization.rb	/^      class Type # :nodoc:$/;"	c	class:ActiveRecord.AttributeMethods
Type	lib/active_record/attribute_methods/time_zone_conversion.rb	/^      class Type # :nodoc:$/;"	c	class:ActiveRecord.AttributeMethods.TimeZoneConversion
Type	lib/active_record/connection_adapters/mysql_adapter.rb	/^        class Type$/;"	c	class:ActiveRecord.ConnectionAdapters.MysqlAdapter.Fields
Type	lib/active_record/connection_adapters/postgresql/oid.rb	/^        class Type$/;"	c	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID
TypeMap	lib/active_record/connection_adapters/postgresql/oid.rb	/^        class TypeMap$/;"	c	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID
UniquenessValidator	lib/active_record/validations/uniqueness.rb	/^    class UniquenessValidator < ActiveModel::EachValidator # :nodoc:$/;"	c	class:ActiveRecord.Validations
UnknownAttributeError	lib/active_record/errors.rb	/^  class UnknownAttributeError < NoMethodError$/;"	c	class:ActiveRecord
UnknownMigrationVersionError	lib/active_record/migration.rb	/^  class UnknownMigrationVersionError < ActiveRecordError #:nodoc:$/;"	c	class:ActiveRecord
UnknownPrimaryKey	lib/active_record/errors.rb	/^  class UnknownPrimaryKey < ActiveRecordError$/;"	c	class:ActiveRecord
Utils	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      module Utils$/;"	m	class:ActiveRecord.PostgreSQLAdapter
VERSION	lib/active_record/version.rb	/^  module VERSION #:nodoc:$/;"	m	class:ActiveRecord
Validations	lib/active_record/validations.rb	/^  module Validations$/;"	m	class:ActiveRecord
Validations	lib/active_record/validations/associated.rb	/^  module Validations$/;"	m	class:ActiveRecord
Validations	lib/active_record/validations/presence.rb	/^  module Validations$/;"	m	class:ActiveRecord
Validations	lib/active_record/validations/uniqueness.rb	/^  module Validations$/;"	m	class:ActiveRecord
Vector	lib/active_record/connection_adapters/postgresql/oid.rb	/^        class Vector < Type$/;"	c	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID
Version	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      class Version$/;"	c	class:ActiveRecord.SQLite3Adapter
WrappedDatabaseException	lib/active_record/errors.rb	/^  class WrappedDatabaseException < StatementInvalid$/;"	c	class:ActiveRecord
Write	lib/active_record/attribute_methods/write.rb	/^    module Write$/;"	m	class:ActiveRecord.AttributeMethods
XmlSerializer	lib/active_record/serializers/xml_serializer.rb	/^  class XmlSerializer < ActiveModel::Serializers::Xml::Serializer #:nodoc:$/;"	c	class:ActiveRecord
YAMLColumn	lib/active_record/coders/yaml_column.rb	/^    class YAMLColumn # :nodoc:$/;"	c	class:ActiveRecord.Coders
[]	lib/active_record/attribute_methods.rb	/^    def [](attr_name)$/;"	f	class:ActiveRecord
[]	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def [](name)$/;"	f	class:ActiveRecord.ConnectionAdapters.TableDefinition
[]	lib/active_record/connection_adapters/mysql_adapter.rb	/^        def [](key);      cache[key]; end$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter.StatementPool
[]	lib/active_record/connection_adapters/postgresql/oid.rb	/^          def [](oid)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID.TypeMap
[]	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def [](key);      cache[key]; end$/;"	f	class:ActiveRecord.PostgreSQLAdapter.StatementPool
[]	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^        def [](key);      cache[key]; end$/;"	f	class:ActiveRecord.SQLite3Adapter.StatementPool
[]	lib/active_record/connection_adapters/statement_pool.rb	/^      def [](key)$/;"	f	class:ActiveRecord.ConnectionAdapters.StatementPool
[]	lib/active_record/fixtures.rb	/^    def [](key)$/;"	f	class:ActiveRecord.Fixture
[]	lib/active_record/fixtures.rb	/^    def [](x)$/;"	f	class:ActiveRecord.FixtureSet
[]	lib/active_record/result.rb	/^    def [](idx)$/;"	f	class:ActiveRecord.Result
[]=	lib/active_record/attribute_methods.rb	/^    def []=(attr_name, value)$/;"	f	class:ActiveRecord
[]=	lib/active_record/connection_adapters/mysql_adapter.rb	/^        def []=(sql, key)$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter.StatementPool
[]=	lib/active_record/connection_adapters/postgresql/oid.rb	/^          def []=(oid, type)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID.TypeMap
[]=	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def []=(sql, key)$/;"	f	class:ActiveRecord.PostgreSQLAdapter.StatementPool
[]=	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^        def []=(sql, key)$/;"	f	class:ActiveRecord.SQLite3Adapter.StatementPool
[]=	lib/active_record/connection_adapters/statement_pool.rb	/^      def []=(sql, key)$/;"	f	class:ActiveRecord.ConnectionAdapters.StatementPool
[]=	lib/active_record/fixtures.rb	/^    def []=(k,v)$/;"	f	class:ActiveRecord.FixtureSet
__temp__	lib/active_record/attribute_methods/read.rb	/^            def __temp__$/;"	f	class:ActiveRecord.AttributeMethods.Read.ClassMethods.define_method_attribute
_assign_attribute	lib/active_record/attribute_assignment.rb	/^    def _assign_attribute(k, v)$/;"	f	class:ActiveRecord.AttributeAssignment
_attr_readonly	lib/active_record/readonly_attributes.rb	/^    def _attr_readonly$/;"	f	class:ActiveRecord.ReadonlyAttributes
_destroy	lib/active_record/nested_attributes.rb	/^    def _destroy$/;"	f	class:ActiveRecord
_field_changed?	lib/active_record/attribute_methods/dirty.rb	/^      def _field_changed?(attr, old, value)$/;"	f	class:ActiveRecord.AttributeMethods.Dirty
abstract_class?	lib/active_record/inheritance.rb	/^      def abstract_class?$/;"	f	class:ActiveRecord.Inheritance.ClassMethods
accepts_nested_attributes_for	lib/active_record/nested_attributes.rb	/^      def accepts_nested_attributes_for(*attr_names)$/;"	f	class:ActiveRecord.NestedAttributes.ClassMethods
accessible_attributes	lib/rails/generators/active_record/model/model_generator.rb	/^      def accessible_attributes$/;"	f	class:ActiveRecord.Generators.ModelGenerator
acquire_connection	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def acquire_connection$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool
active?	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def active?$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
active?	lib/active_record/connection_adapters/mysql2_adapter.rb	/^      def active?$/;"	f	class:ActiveRecord.ConnectionAdapters.Mysql2Adapter
active?	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def active?$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
active?	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def active?$/;"	f	class:ActiveRecord.PostgreSQLAdapter
active?	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def active?$/;"	f	class:ActiveRecord.SQLite3Adapter
active_connection?	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def active_connection?$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool
active_connections?	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def active_connections?$/;"	f	class:ActiveRecord.ConnectionHandler
active_record_primary_key	lib/active_record/reflection.rb	/^      def active_record_primary_key$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
adapter	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^        def adapter$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter.Column
adapter	lib/active_record/connection_adapters/mysql2_adapter.rb	/^        def adapter$/;"	f	class:ActiveRecord.ConnectionAdapters.Mysql2Adapter.Column
adapter	lib/active_record/connection_adapters/mysql_adapter.rb	/^        def adapter$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter.Column
adapter_name	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def adapter_name$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
adapter_name	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def adapter_name #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
adapter_name	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def adapter_name$/;"	f	class:ActiveRecord.PostgreSQLAdapter
adapter_name	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def adapter_name #:nodoc:$/;"	f	class:ActiveRecord.SQLite3Adapter
add	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^        def add(element)$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool.Queue
add	lib/active_record/connection_adapters/schema_cache.rb	/^      def add(table_name)$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaCache
add_autosave_association_callbacks	lib/active_record/autosave_association.rb	/^      def add_autosave_association_callbacks(reflection)$/;"	f	class:ActiveRecord.AutosaveAssociation.ClassMethods
add_column	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def add_column(table_name, column_name, type, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
add_column	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def add_column(table_name, column_name, type, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.bulk_change_table
add_column	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^        def add_column(table_name, column_name, type, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.SchemaStatements.indexes
add_column	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def add_column(table_name, column_name, type, options = {}) #:nodoc:$/;"	f	class:ActiveRecord.SQLite3Adapter
add_column_options!	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^        def add_column_options!(sql, options)$/;"	f	class:ActiveRecord.ConnectionAdapters.ColumnDefinition
add_column_options!	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def add_column_options!(sql, options) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
add_column_options!	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def add_column_options!(sql, options)$/;"	f	class:ActiveRecord.PostgreSQLAdapter
add_column_position!	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def add_column_position!(sql, options)$/;"	f	class:ActiveRecord.ConnectionAdapters.bulk_change_table
add_column_sql	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def add_column_sql(table_name, column_name, type, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters
add_constraints	lib/active_record/associations/association_scope.rb	/^      def add_constraints(scope)$/;"	f	class:ActiveRecord.Associations.AssociationScope
add_counter_cache_callbacks	lib/active_record/associations/builder/belongs_to.rb	/^    def add_counter_cache_callbacks(reflection)$/;"	f	class:ActiveRecord.BelongsTo
add_index	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def add_index(table_name, column_name, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
add_index_length	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def add_index_length(option_strings, column_names, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters
add_index_options	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^        def add_index_options(table_name, column_name, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
add_index_sort_order	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^        def add_index_sort_order(option_strings, column_names, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
add_index_sql	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def add_index_sql(table_name, column_name, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters
add_item_to_array	lib/active_record/connection_adapters/postgresql/array_parser.rb	/^          def add_item_to_array(array, current_item, quoted)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLColumn.ArrayParser
add_observer!	lib/active_record/observer.rb	/^      def add_observer!(klass)$/;"	f	class:ActiveRecord.Observer
add_record	lib/active_record/connection_adapters/abstract/transaction.rb	/^      def add_record(record)$/;"	f	class:ActiveRecord.ConnectionAdapters.ClosedTransaction
add_record	lib/active_record/connection_adapters/abstract/transaction.rb	/^      def add_record(record)$/;"	f	class:ActiveRecord.ConnectionAdapters.OpenTransaction
add_reference	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def add_reference(table_name, ref_name, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
add_timestamps	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def add_timestamps(table_name)$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
add_timestamps_sql	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def add_timestamps_sql(table_name)$/;"	f	class:ActiveRecord.ConnectionAdapters
add_to_target	lib/active_record/associations/collection_association.rb	/^      def add_to_target(record)$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
add_to_transaction	lib/active_record/transactions.rb	/^    def add_to_transaction$/;"	f	class:ActiveRecord.Transactions
add_touch_callbacks	lib/active_record/associations/builder/belongs_to.rb	/^    def add_touch_callbacks(reflection)$/;"	f	class:ActiveRecord.BelongsTo
add_transaction_record	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def add_transaction_record(record)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
after_commit	lib/active_record/transactions.rb	/^      def after_commit(*args, &block)$/;"	f	class:ActiveRecord.Transactions.ClassMethods
after_rollback	lib/active_record/transactions.rb	/^      def after_rollback(*args, &block)$/;"	f	class:ActiveRecord.Transactions.ClassMethods
aggregate_column	lib/active_record/relation/calculations.rb	/^    def aggregate_column(column_name)$/;"	f	class:ActiveRecord
alias_suffix	lib/active_record/associations/association_scope.rb	/^      def alias_suffix$/;"	f	class:ActiveRecord.Associations.AssociationScope
alias_type	lib/active_record/connection_adapters/mysql_adapter.rb	/^        def self.alias_type(new, old)$/;"	F	class:ActiveRecord.ConnectionAdapters.MysqlAdapter.Fields
alias_type	lib/active_record/connection_adapters/postgresql/oid.rb	/^        def self.alias_type(new, old)$/;"	F	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID
aliased_name_for	lib/active_record/associations/alias_tracker.rb	/^      def aliased_name_for(table_name, aliased_name = nil)$/;"	f	class:ActiveRecord.Associations.AliasTracker
aliased_prefix	lib/active_record/associations/join_dependency/join_base.rb	/^        def aliased_prefix$/;"	f	class:ActiveRecord.Associations.JoinDependency.JoinBase
aliased_prefix	lib/active_record/associations/join_dependency/join_part.rb	/^        def aliased_prefix$/;"	f	class:ActiveRecord.Associations.JoinDependency.JoinPart
aliased_primary_key	lib/active_record/associations/join_dependency/join_part.rb	/^        def aliased_primary_key$/;"	f	class:ActiveRecord.Associations.JoinDependency.JoinPart
aliased_table	lib/active_record/associations/join_dependency/join_part.rb	/^        def aliased_table$/;"	f	class:ActiveRecord.Associations.JoinDependency.JoinPart
aliased_table_for	lib/active_record/associations/alias_tracker.rb	/^      def aliased_table_for(table_name, aliased_name = nil)$/;"	f	class:ActiveRecord.Associations.AliasTracker
aliased_table_name	lib/active_record/associations/association.rb	/^      def aliased_table_name$/;"	f	class:ActiveRecord.Associations.Association
aliased_table_name	lib/active_record/associations/join_dependency/join_association.rb	/^        def aliased_table_name$/;"	f	class:ActiveRecord.Associations.JoinDependency.JoinAssociation
aliased_table_name	lib/active_record/associations/join_dependency/join_base.rb	/^        def aliased_table_name$/;"	f	class:ActiveRecord.Associations.JoinDependency.JoinBase
aliased_table_name	lib/active_record/associations/join_dependency/join_part.rb	/^        def aliased_table_name$/;"	f	class:ActiveRecord.Associations.JoinDependency.JoinPart
all	lib/active_record/scoping/named.rb	/^        def all$/;"	f	class:ActiveRecord.Scoping.Named.ClassMethods
all_timestamp_attributes	lib/active_record/timestamp.rb	/^    def all_timestamp_attributes$/;"	f	class:ActiveRecord.Timestamp
all_timestamp_attributes_in_model	lib/active_record/timestamp.rb	/^    def all_timestamp_attributes_in_model$/;"	f	class:ActiveRecord.Timestamp
alter_table	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^        def alter_table(table_name, options = {}) #:nodoc:$/;"	f	class:ActiveRecord.SQLite3Adapter
announce	lib/active_record/migration.rb	/^    def announce(message)$/;"	f	class:ActiveRecord
any?	lib/active_record/associations/collection_association.rb	/^      def any?$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
any?	lib/active_record/associations/collection_proxy.rb	/^      def any?(&block)$/;"	f	class:ActiveRecord.Associations.CollectionProxy
any?	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^        def any?$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool.Queue
any?	lib/active_record/null_relation.rb	/^    def any?$/;"	f	class:ActiveRecord.NullRelation
any?	lib/active_record/relation.rb	/^    def any?$/;"	f	class:ActiveRecord.Relation
any_waiting?	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^        def any_waiting?$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool.Queue
append_info_to_payload	lib/active_record/railties/controller_runtime.rb	/^      def append_info_to_payload(payload)$/;"	f	class:ActiveRecord.Railties.ControllerRuntime
apply_join_dependency	lib/active_record/relation/finder_methods.rb	/^    def apply_join_dependency(relation, join_dependency)$/;"	f	class:ActiveRecord.FinderMethods
arel	lib/active_record/relation/query_methods.rb	/^    def arel$/;"	f
arel_attributes_with_values	lib/active_record/attribute_methods.rb	/^    def arel_attributes_with_values(attribute_names)$/;"	f	class:ActiveRecord
arel_attributes_with_values_for_create	lib/active_record/attribute_methods.rb	/^    def arel_attributes_with_values_for_create(attribute_names) # :nodoc:$/;"	f	class:ActiveRecord
arel_attributes_with_values_for_update	lib/active_record/attribute_methods.rb	/^    def arel_attributes_with_values_for_update(attribute_names) # :nodoc:$/;"	f	class:ActiveRecord
arel_engine	lib/active_record/core.rb	/^      def arel_engine$/;"	f	class:ActiveRecord.Core.ClassMethods
arel_table	lib/active_record/core.rb	/^      def arel_table$/;"	f	class:ActiveRecord.Core.ClassMethods
array_of_strings?	lib/active_record/relation/query_methods.rb	/^    def array_of_strings?(o)$/;"	f
array_to_string	lib/active_record/connection_adapters/postgresql/cast.rb	/^        def array_to_string(value, column, adapter, should_be_quoted = false)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLColumn.Cast
as_indifferent_hash	lib/active_record/store.rb	/^      def self.as_indifferent_hash(obj)$/;"	F	class:ActiveRecord.IndifferentCoder
as_json	lib/active_record/relation.rb	/^    def as_json(options = nil) #:nodoc:$/;"	f	class:ActiveRecord.Relation
assert_date_from_db	lib/active_record/test_case.rb	/^    def assert_date_from_db(expected, actual, message = nil)$/;"	f	class:ActiveRecord.TestCase
assert_no_queries	lib/active_record/test_case.rb	/^    def assert_no_queries(&block)$/;"	f	class:ActiveRecord.TestCase
assert_queries	lib/active_record/test_case.rb	/^    def assert_queries(num = 1, options = {})$/;"	f	class:ActiveRecord.TestCase
assert_sql	lib/active_record/test_case.rb	/^    def assert_sql(*patterns_to_match)$/;"	f	class:ActiveRecord.TestCase
assign_attributes	lib/active_record/attribute_assignment.rb	/^    def assign_attributes(new_attributes)$/;"	f	class:ActiveRecord.AttributeAssignment
assign_multiparameter_attributes	lib/active_record/attribute_assignment.rb	/^    def assign_multiparameter_attributes(pairs)$/;"	f	class:ActiveRecord.AttributeAssignment
assign_nested_attributes_for_collection_association	lib/active_record/nested_attributes.rb	/^    def assign_nested_attributes_for_collection_association(association_name, attributes_collection)$/;"	f	class:ActiveRecord
assign_nested_attributes_for_one_to_one_association	lib/active_record/nested_attributes.rb	/^    def assign_nested_attributes_for_one_to_one_association(association_name, attributes)$/;"	f	class:ActiveRecord
assign_nested_parameter_attributes	lib/active_record/attribute_assignment.rb	/^    def assign_nested_parameter_attributes(pairs)$/;"	f	class:ActiveRecord.AttributeAssignment
assign_to_or_mark_for_destruction	lib/active_record/nested_attributes.rb	/^    def assign_to_or_mark_for_destruction(record, attributes, allow_destroy)$/;"	f
associated_records_by_owner	lib/active_record/associations/preloader/association.rb	/^        def associated_records_by_owner$/;"	f	class:ActiveRecord.Associations.Preloader.Association
associated_records_by_owner	lib/active_record/associations/preloader/has_and_belongs_to_many.rb	/^        def associated_records_by_owner$/;"	f	class:ActiveRecord.Associations.Preloader.HasAndBelongsToMany
associated_records_by_owner	lib/active_record/associations/preloader/has_many_through.rb	/^        def associated_records_by_owner$/;"	f	class:ActiveRecord.Associations.Preloader.HasManyThrough
associated_records_by_owner	lib/active_record/associations/preloader/through_association.rb	/^        def associated_records_by_owner$/;"	f	class:ActiveRecord.Associations.Preloader.ThroughAssociation
associated_records_to_validate_or_save	lib/active_record/autosave_association.rb	/^    def associated_records_to_validate_or_save(association, new_record, autosave)$/;"	f	class:ActiveRecord.AutosaveAssociation
association	lib/active_record/associations.rb	/^    def association(name) #:nodoc:$/;"	f	class:ActiveRecord.Associations
association_class	lib/active_record/reflection.rb	/^      def association_class$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
association_foreign_key	lib/active_record/reflection.rb	/^      def association_foreign_key$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
association_instance_get	lib/active_record/associations.rb	/^      def association_instance_get(name)$/;"	f	class:ActiveRecord.Associations
association_instance_set	lib/active_record/associations.rb	/^      def association_instance_set(name, association)$/;"	f	class:ActiveRecord.Associations
association_key	lib/active_record/associations/preloader/association.rb	/^        def association_key$/;"	f	class:ActiveRecord.Associations.Preloader.Association
association_key	lib/active_record/associations/preloader/has_and_belongs_to_many.rb	/^        def association_key$/;"	f	class:ActiveRecord.Associations.Preloader.HasAndBelongsToMany
association_key_name	lib/active_record/associations/preloader/association.rb	/^        def association_key_name$/;"	f	class:ActiveRecord.Associations.Preloader.Association
association_key_name	lib/active_record/associations/preloader/belongs_to.rb	/^        def association_key_name$/;"	f	class:ActiveRecord.Associations.Preloader.BelongsTo
association_key_name	lib/active_record/associations/preloader/has_and_belongs_to_many.rb	/^        def association_key_name$/;"	f	class:ActiveRecord.Associations.Preloader.HasAndBelongsToMany
association_key_name	lib/active_record/associations/preloader/has_many.rb	/^        def association_key_name$/;"	f	class:ActiveRecord.Associations.Preloader.HasMany
association_key_name	lib/active_record/associations/preloader/has_one.rb	/^        def association_key_name$/;"	f	class:ActiveRecord.Associations.Preloader.HasOne
association_klass	lib/active_record/associations/preloader.rb	/^      def association_klass(reflection, record)$/;"	f	class:ActiveRecord.Associations.Preloader
association_primary_key	lib/active_record/reflection.rb	/^      def association_primary_key(klass = nil)$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
association_primary_key	lib/active_record/reflection.rb	/^      def association_primary_key(klass = nil)$/;"	f	class:ActiveRecord.Reflection.ThroughReflection
association_scope	lib/active_record/associations/association.rb	/^      def association_scope$/;"	f	class:ActiveRecord.Associations.Association
association_valid?	lib/active_record/autosave_association.rb	/^    def association_valid?(reflection, record)$/;"	f	class:ActiveRecord.AutosaveAssociation
assume_migrated_upto_version	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def assume_migrated_upto_version(version, migrations_paths = ActiveRecord::Migrator.migrations_paths)$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
attr_readonly	lib/active_record/readonly_attributes.rb	/^      def attr_readonly(*attributes)$/;"	f	class:ActiveRecord.ReadonlyAttributes.ClassMethods
attribute	lib/active_record/attribute_methods/read.rb	/^      def attribute(attribute_name)$/;"	f	class:ActiveRecord.AttributeMethods.Read
attribute=	lib/active_record/attribute_methods/write.rb	/^      def attribute=(attribute_name, value)$/;"	f	class:ActiveRecord.AttributeMethods
attribute?	lib/active_record/attribute_methods/query.rb	/^        def attribute?(attribute_name)$/;"	f	class:ActiveRecord.AttributeMethods.Query
attribute_before_type_cast	lib/active_record/attribute_methods/before_type_cast.rb	/^      def attribute_before_type_cast(attribute_name)$/;"	f	class:ActiveRecord.AttributeMethods.BeforeTypeCast
attribute_for_inspect	lib/active_record/attribute_methods.rb	/^    def attribute_for_inspect(attr_name)$/;"	f	class:ActiveRecord
attribute_method?	lib/active_record/attribute_methods.rb	/^      def attribute_method?(attribute)$/;"	f	class:ActiveRecord.AttributeMethods.ClassMethods
attribute_method?	lib/active_record/attribute_methods.rb	/^    def attribute_method?(attr_name) # :nodoc:$/;"	f	class:ActiveRecord
attribute_method?	lib/active_record/attribute_methods/primary_key.rb	/^      def attribute_method?(attr_name)$/;"	f	class:ActiveRecord.AttributeMethods.PrimaryKey
attribute_methods_generated?	lib/active_record/attribute_methods.rb	/^      def attribute_methods_generated? # :nodoc:$/;"	f	class:ActiveRecord.AttributeMethods.ClassMethods
attribute_missing	lib/active_record/attribute_methods.rb	/^    def attribute_missing(match, *args, &block) # :nodoc:$/;"	f	class:ActiveRecord
attribute_names	lib/active_record/attribute_methods.rb	/^      def attribute_names$/;"	f	class:ActiveRecord.AttributeMethods.ClassMethods
attribute_names	lib/active_record/attribute_methods.rb	/^    def attribute_names$/;"	f	class:ActiveRecord
attribute_present?	lib/active_record/attribute_methods.rb	/^    def attribute_present?(attribute)$/;"	f	class:ActiveRecord
attributes	lib/active_record/attribute_methods.rb	/^    def attributes$/;"	f	class:ActiveRecord
attributes_before_type_cast	lib/active_record/attribute_methods/before_type_cast.rb	/^      def attributes_before_type_cast$/;"	f	class:ActiveRecord.AttributeMethods.BeforeTypeCast
attributes_before_type_cast	lib/active_record/attribute_methods/serialization.rb	/^        def attributes_before_type_cast$/;"	f	class:ActiveRecord.AttributeMethods.Behavior
attributes_for_create	lib/active_record/attribute_methods.rb	/^    def attributes_for_create(attribute_names)$/;"	f	class:ActiveRecord
attributes_for_update	lib/active_record/attribute_methods.rb	/^    def attributes_for_update(attribute_names)$/;"	f	class:ActiveRecord
attributes_hash	lib/active_record/dynamic_matchers.rb	/^      def attributes_hash$/;"	f	class:Finder
attributes_with_index	lib/rails/generators/active_record/model/model_generator.rb	/^      def attributes_with_index$/;"	f	class:ActiveRecord.Generators.ModelGenerator
average	lib/active_record/relation/calculations.rb	/^    def average(column_name, options = {})$/;"	f	class:ActiveRecord.Calculations
base_class	lib/active_record/inheritance.rb	/^      def base_class$/;"	f	class:ActiveRecord.Inheritance.ClassMethods
base_root	lib/rails/generators/active_record.rb	/^      def self.base_root$/;"	F	class:ActiveRecord.Generators.Base
basename	lib/active_record/migration.rb	/^    def basename$/;"	f	class:MigrationProxy
batch_order	lib/active_record/relation/batches.rb	/^    def batch_order$/;"	f	class:ActiveRecord.Batches
becomes	lib/active_record/persistence.rb	/^    def becomes(klass)$/;"	f	class:ActiveRecord.Persistence
before_remove_const	lib/active_record/scoping/default.rb	/^        def before_remove_const #:nodoc:$/;"	f	class:ActiveRecord.Scoping.Default.ClassMethods
before_save_collection_association	lib/active_record/autosave_association.rb	/^    def before_save_collection_association$/;"	f	class:ActiveRecord.AutosaveAssociation
begin	lib/active_record/connection_adapters/abstract/transaction.rb	/^      def begin(options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.ClosedTransaction
begin	lib/active_record/connection_adapters/abstract/transaction.rb	/^      def begin(options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.OpenTransaction
begin_db_transaction	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def begin_db_transaction()    end$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
begin_db_transaction	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def begin_db_transaction$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
begin_db_transaction	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def begin_db_transaction #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
begin_db_transaction	lib/active_record/connection_adapters/postgresql/database_statements.rb	/^        def begin_db_transaction$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.DatabaseStatements
begin_db_transaction	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def begin_db_transaction #:nodoc:$/;"	f	class:ActiveRecord.SQLite3Adapter.ExplainPrettyPrinter
begin_isolated_db_transaction	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def begin_isolated_db_transaction(isolation)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
begin_isolated_db_transaction	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def begin_isolated_db_transaction(isolation)$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
begin_isolated_db_transaction	lib/active_record/connection_adapters/postgresql/database_statements.rb	/^        def begin_isolated_db_transaction(isolation)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.DatabaseStatements
begin_transaction	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def begin_transaction(options = {}) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
belongs_to	lib/active_record/associations.rb	/^      def belongs_to(name, scope = nil, options = {})$/;"	f	class:ActiveRecord.Associations.ClassMethods
belongs_to?	lib/active_record/reflection.rb	/^      def belongs_to?$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
belongs_to_counter_cache_after_create_for_	lib/active_record/associations/builder/belongs_to.rb	/^        def belongs_to_counter_cache_after_create_for_#{name}$/;"	f	class:ActiveRecord.BelongsTo.add_counter_cache_callbacks
belongs_to_counter_cache_before_destroy_for_	lib/active_record/associations/builder/belongs_to.rb	/^        def belongs_to_counter_cache_before_destroy_for_#{name}$/;"	f	class:ActiveRecord.BelongsTo.add_counter_cache_callbacks
belongs_to_touch_after_save_or_destroy_for_	lib/active_record/associations/builder/belongs_to.rb	/^        def belongs_to_touch_after_save_or_destroy_for_#{name}$/;"	f	class:ActiveRecord.BelongsTo.add_touch_callbacks
binary?	lib/active_record/connection_adapters/column.rb	/^      def binary?$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
binary_to_string	lib/active_record/connection_adapters/column.rb	/^        def binary_to_string(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
binary_to_string	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^        def binary_to_string(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.SQLite3Column
bind	lib/active_record/associations/association_scope.rb	/^      def bind(scope, table_name, column_name, value)$/;"	f	class:ActiveRecord.Associations.AssociationScope
bind	lib/active_record/relation/query_methods.rb	/^    def bind(value)$/;"	f
bind!	lib/active_record/relation/query_methods.rb	/^    def bind!(value)$/;"	f
bind_value	lib/active_record/associations/association_scope.rb	/^      def bind_value(scope, column, value)$/;"	f	class:ActiveRecord.Associations.AssociationScope
blank?	lib/active_record/relation.rb	/^    def blank?$/;"	f	class:ActiveRecord.Relation
blank_date_parameter?	lib/active_record/attribute_assignment.rb	/^      def blank_date_parameter?$/;"	f	class:ActiveRecord.AttributeAssignment.MultiparameterAttribute
body	lib/active_record/dynamic_matchers.rb	/^      def body$/;"	f	class:ActiveRecord
body	lib/active_record/dynamic_matchers.rb	/^      def body$/;"	f	class:Finder
build	lib/active_record/associations/builder/association.rb	/^    def build$/;"	f
build	lib/active_record/associations/builder/association.rb	/^    def self.build(*args, &block)$/;"	F	class:ActiveRecord
build	lib/active_record/associations/builder/belongs_to.rb	/^    def build$/;"	f	class:ActiveRecord.BelongsTo
build	lib/active_record/associations/builder/collection_association.rb	/^    def build$/;"	f	class:ActiveRecord.CollectionAssociation
build	lib/active_record/associations/builder/has_and_belongs_to_many.rb	/^    def build$/;"	f	class:ActiveRecord.HasAndBelongsToMany
build	lib/active_record/associations/collection_association.rb	/^      def build(attributes = {}, &block)$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
build	lib/active_record/associations/collection_proxy.rb	/^      def build(attributes = {}, &block)$/;"	f	class:ActiveRecord.Associations.CollectionProxy
build	lib/active_record/associations/join_dependency.rb	/^      def build(associations, parent = nil, join_type = Arel::InnerJoin)$/;"	f	class:ActiveRecord.Associations.JoinDependency
build	lib/active_record/associations/singular_association.rb	/^      def build(attributes = {})$/;"	f	class:ActiveRecord.Associations.SingularAssociation
build	lib/active_record/autosave_association.rb	/^      def build$/;"	f	class:ActiveRecord.AutosaveAssociation.AssociationBuilderExtension
build	lib/active_record/relation/predicate_builder.rb	/^      def self.build(attribute, value)$/;"	F	class:ActiveRecord.PredicateBuilder.references
build_	lib/active_record/associations/builder/singular_association.rb	/^        def build_#{name}(*args, &block)$/;"	f	class:ActiveRecord.SingularAssociation.define_constructors
build_arel	lib/active_record/relation/query_methods.rb	/^    def build_arel$/;"	f
build_association	lib/active_record/reflection.rb	/^      def build_association(attributes, &block)$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
build_cells	lib/active_record/connection_adapters/mysql2_adapter.rb	/^        def build_cells(items, widths)$/;"	f	class:ActiveRecord.ConnectionAdapters.Mysql2Adapter.ExplainPrettyPrinter
build_constraint	lib/active_record/associations/join_dependency/join_association.rb	/^        def build_constraint(reflection, table, key, foreign_table, foreign_key)$/;"	f	class:ActiveRecord.Associations.JoinDependency.JoinAssociation
build_count_subquery	lib/active_record/relation/calculations.rb	/^    def build_count_subquery(relation, column_name, distinct)$/;"	f	class:ActiveRecord.execute_grouped_calculation
build_default_scope	lib/active_record/scoping/default.rb	/^        def build_default_scope # :nodoc:$/;"	f	class:ActiveRecord.Scoping.Default.ClassMethods
build_footer	lib/active_record/connection_adapters/mysql2_adapter.rb	/^        def build_footer(nrows, elapsed)$/;"	f	class:ActiveRecord.ConnectionAdapters.Mysql2Adapter.ExplainPrettyPrinter
build_from	lib/active_record/relation/query_methods.rb	/^    def build_from$/;"	f
build_from_hash	lib/active_record/relation/predicate_builder.rb	/^    def self.build_from_hash(klass, attributes, default_table)$/;"	F	class:ActiveRecord.PredicateBuilder
build_join_association	lib/active_record/associations/join_dependency.rb	/^      def build_join_association(reflection, parent)$/;"	f	class:ActiveRecord.Associations.JoinDependency
build_joins	lib/active_record/relation/query_methods.rb	/^    def build_joins(manager, joins)$/;"	f
build_order	lib/active_record/relation/query_methods.rb	/^    def build_order(arel)$/;"	f
build_record	lib/active_record/associations/association.rb	/^        def build_record(attributes)$/;"	f	class:ActiveRecord.Associations.Association
build_record	lib/active_record/associations/has_many_through_association.rb	/^        def build_record(attributes)$/;"	f	class:ActiveRecord.Associations.HasManyThroughAssociation
build_relation	lib/active_record/validations/uniqueness.rb	/^      def build_relation(klass, table, attribute, value) #:nodoc:$/;"	f	class:ActiveRecord.Validations.UniquenessValidator
build_scope	lib/active_record/associations/preloader/association.rb	/^        def build_scope$/;"	f	class:ActiveRecord.Associations.Preloader.Association
build_scope	lib/active_record/associations/preloader/collection_association.rb	/^        def build_scope$/;"	f	class:ActiveRecord.Associations.Preloader.CollectionAssociation
build_scope	lib/active_record/associations/preloader/has_and_belongs_to_many.rb	/^        def build_scope$/;"	f	class:ActiveRecord.Associations.Preloader.HasAndBelongsToMany
build_scope	lib/active_record/associations/preloader/has_one.rb	/^        def build_scope$/;"	f	class:ActiveRecord.Associations.Preloader.HasOne
build_select	lib/active_record/relation/query_methods.rb	/^    def build_select(arel, selects)$/;"	f
build_separator	lib/active_record/connection_adapters/mysql2_adapter.rb	/^        def build_separator(widths)$/;"	f	class:ActiveRecord.ConnectionAdapters.Mysql2Adapter.ExplainPrettyPrinter
build_through_record	lib/active_record/associations/has_many_through_association.rb	/^        def build_through_record(record)$/;"	f	class:ActiveRecord.Associations.HasManyThroughAssociation
build_where	lib/active_record/relation/query_methods.rb	/^    def build_where(opts, other = [])$/;"	f
bulk_change_table	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def bulk_change_table(table_name, operations) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters
cache	lib/active_record/connection_adapters/abstract/query_cache.rb	/^      def cache$/;"	f	class:ActiveRecord
cache	lib/active_record/connection_adapters/mysql_adapter.rb	/^        def cache$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter.StatementPool
cache	lib/active_record/connection_adapters/postgresql_adapter.rb	/^          def cache$/;"	f	class:ActiveRecord.PostgreSQLAdapter.StatementPool
cache	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^        def cache$/;"	f	class:ActiveRecord.SQLite3Adapter.StatementPool
cache	lib/active_record/query_cache.rb	/^      def cache(&block)$/;"	f	class:ActiveRecord.QueryCache.ClassMethods
cache_attribute?	lib/active_record/attribute_methods/read.rb	/^        def cache_attribute?(attr_name)$/;"	f	class:ActiveRecord.AttributeMethods.Read.ClassMethods
cache_attributes	lib/active_record/attribute_methods/read.rb	/^        def cache_attributes(*attribute_names)$/;"	f	class:ActiveRecord.AttributeMethods.Read.ClassMethods
cache_fixtures	lib/active_record/fixtures.rb	/^    def self.cache_fixtures(connection, fixtures_map)$/;"	F	class:ActiveRecord.FixtureSet
cache_for_connection	lib/active_record/fixtures.rb	/^    def self.cache_for_connection(connection)$/;"	F	class:ActiveRecord.FixtureSet
cache_joined_association	lib/active_record/associations/join_dependency.rb	/^      def cache_joined_association(association)$/;"	f	class:ActiveRecord.Associations.JoinDependency
cache_key	lib/active_record/integration.rb	/^    def cache_key$/;"	f	class:ActiveRecord.Integration
cache_sql	lib/active_record/connection_adapters/abstract/query_cache.rb	/^      def cache_sql(sql, binds)$/;"	f	class:ActiveRecord
cacheable_column?	lib/active_record/attribute_methods/read.rb	/^        def cacheable_column?(column)$/;"	f	class:ActiveRecord.AttributeMethods.Read.ClassMethods
cached_attributes	lib/active_record/attribute_methods/read.rb	/^        def cached_attributes$/;"	f	class:ActiveRecord.AttributeMethods.Read.ClassMethods
cached_counter_attribute_name	lib/active_record/associations/has_many_association.rb	/^        def cached_counter_attribute_name(reflection = reflection)$/;"	f	class:ActiveRecord.Associations
cached_fixtures	lib/active_record/fixtures.rb	/^    def self.cached_fixtures(connection, keys_to_fetch = nil)$/;"	F	class:ActiveRecord.FixtureSet
calculate	lib/active_record/null_relation.rb	/^    def calculate(_operation, _column_name, _options = {})$/;"	f	class:ActiveRecord.NullRelation
calculate	lib/active_record/relation/calculations.rb	/^    def calculate(operation, column_name, options = {})$/;"	f	class:ActiveRecord.Calculations
call	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def call(env)$/;"	f	class:ConnectionManagement
call	lib/active_record/migration.rb	/^      def call(env)$/;"	f	class:ActiveRecord.Migration.CheckPending
call	lib/active_record/query_cache.rb	/^    def call(env)$/;"	f	class:ActiveRecord.QueryCache
call	lib/active_record/test_case.rb	/^    def call(name, start, finish, message_id, values)$/;"	f	class:ActiveRecord
call_reject_if	lib/active_record/nested_attributes.rb	/^    def call_reject_if(association_name, attributes)$/;"	f
callback	lib/active_record/associations/collection_association.rb	/^        def callback(method, record)$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
callbacks_for	lib/active_record/associations/collection_association.rb	/^        def callbacks_for(callback_name)$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
can_remove_no_wait?	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^        def can_remove_no_wait?$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool.Queue
case_insensitive_comparison	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def case_insensitive_comparison(table, attribute, column, value)$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
case_insensitive_comparison	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def case_insensitive_comparison(table, attribute, column, value)$/;"	f	class:ActiveRecord.ConnectionAdapters
case_sensitive?	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^        def case_sensitive?$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter.Column
case_sensitive_equality_operator	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def case_sensitive_equality_operator$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
case_sensitive_modifier	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def case_sensitive_modifier(node)$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
case_sensitive_modifier	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def case_sensitive_modifier(node)$/;"	f	class:ActiveRecord.ConnectionAdapters
chain	lib/active_record/reflection.rb	/^      def chain$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
chain	lib/active_record/reflection.rb	/^      def chain$/;"	f	class:ActiveRecord.Reflection.ThroughReflection
change	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def change(column_name, type, options = {})$/;"	f	class:ActiveRecord.Table
change	lib/rails/generators/active_record/migration/templates/migration.rb	/^  def change$/;"	f
change	lib/rails/generators/active_record/model/templates/migration.rb	/^  def change$/;"	f
change_column	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def change_column(table_name, column_name, type, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
change_column	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def change_column(table_name, column_name, type, options = {}) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.bulk_change_table
change_column	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^        def change_column(table_name, column_name, type, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.SchemaStatements.indexes
change_column	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def change_column(table_name, column_name, type, options = {}) #:nodoc:$/;"	f	class:ActiveRecord.SQLite3Adapter
change_column_default	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def change_column_default(table_name, column_name, default)$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
change_column_default	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def change_column_default(table_name, column_name, default)$/;"	f	class:ActiveRecord.ConnectionAdapters.bulk_change_table
change_column_default	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^        def change_column_default(table_name, column_name, default)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.SchemaStatements.indexes
change_column_default	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def change_column_default(table_name, column_name, default) #:nodoc:$/;"	f	class:ActiveRecord.SQLite3Adapter
change_column_null	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def change_column_null(table_name, column_name, null, default = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.bulk_change_table
change_column_null	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^        def change_column_null(table_name, column_name, null, default = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.SchemaStatements.indexes
change_column_null	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def change_column_null(table_name, column_name, null, default = nil)$/;"	f	class:ActiveRecord.SQLite3Adapter
change_column_sql	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def change_column_sql(table_name, column_name, type, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters
change_default	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def change_default(column_name, default)$/;"	f	class:ActiveRecord.Table
change_table	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def change_table(table_name, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
changed_for_autosave?	lib/active_record/autosave_association.rb	/^    def changed_for_autosave?$/;"	f	class:ActiveRecord.AutosaveAssociation
changes_from_nil_to_empty_string?	lib/active_record/attribute_methods/dirty.rb	/^      def changes_from_nil_to_empty_string?(column, old, value)$/;"	f	class:ActiveRecord.AttributeMethods.Dirty
changes_from_zero_to_string?	lib/active_record/attribute_methods/dirty.rb	/^      def changes_from_zero_to_string?(old, value)$/;"	f	class:ActiveRecord.AttributeMethods.Dirty
charset	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def charset$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
charset	lib/active_record/tasks/database_tasks.rb	/^      def charset(*arguments)$/;"	f	class:ActiveRecord.Tasks
charset	lib/active_record/tasks/mysql_database_tasks.rb	/^      def charset$/;"	f	class:ActiveRecord.Tasks.MySQLDatabaseTasks
charset	lib/active_record/tasks/postgresql_database_tasks.rb	/^      def charset$/;"	f	class:ActiveRecord.Tasks.PostgreSQLDatabaseTasks
charset	lib/active_record/tasks/sqlite_database_tasks.rb	/^      def charset$/;"	f	class:ActiveRecord.Tasks.SQLiteDatabaseTasks
charset_current	lib/active_record/tasks/database_tasks.rb	/^      def charset_current(environment = Rails.env)$/;"	f	class:ActiveRecord.Tasks
check_pending	lib/active_record/migration.rb	/^    def self.check_pending!$/;"	F	class:ActiveRecord
check_validity!	lib/active_record/reflection.rb	/^      def check_validity!$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
check_validity!	lib/active_record/reflection.rb	/^      def check_validity!$/;"	f	class:ActiveRecord.Reflection.ThroughReflection
check_validity_of_inverse!	lib/active_record/reflection.rb	/^      def check_validity_of_inverse!$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
checkin	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def checkin(conn)$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool
checkout	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def checkout$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool
checkout_and_verify	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def checkout_and_verify(c)$/;"	f	class:ActiveRecord.ConnectionAdapters
checkout_new_connection	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def checkout_new_connection$/;"	f	class:ActiveRecord.ConnectionAdapters
cidr	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def cidr(name, options = {})$/;"	f	class:ActiveRecord.PostgreSQLAdapter.TableDefinition
cidr_to_string	lib/active_record/connection_adapters/postgresql/cast.rb	/^        def cidr_to_string(object)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLColumn.Cast
class_for_adapter	lib/active_record/tasks/database_tasks.rb	/^      def class_for_adapter(adapter)$/;"	f	class:ActiveRecord.Tasks
class_name	lib/active_record/fixtures.rb	/^    def class_name$/;"	f	class:ActiveRecord.Fixture
class_name	lib/active_record/reflection.rb	/^      def class_name$/;"	f	class:ActiveRecord.Reflection.MacroReflection
class_to_pool	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def class_to_pool$/;"	f	class:ActiveRecord
cleanup_view_runtime	lib/active_record/railties/controller_runtime.rb	/^      def cleanup_view_runtime$/;"	f	class:ActiveRecord.Railties.ControllerRuntime
clear	lib/active_record/associations/collection_proxy.rb	/^      def clear$/;"	f	class:ActiveRecord.Associations.CollectionProxy
clear	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^        def clear$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool.Queue
clear	lib/active_record/connection_adapters/mysql_adapter.rb	/^        def clear$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter.StatementPool
clear	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def clear$/;"	f	class:ActiveRecord.PostgreSQLAdapter.StatementPool
clear	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^        def clear$/;"	f	class:ActiveRecord.SQLite3Adapter.StatementPool
clear	lib/active_record/connection_adapters/statement_pool.rb	/^      def clear$/;"	f	class:ActiveRecord.ConnectionAdapters.StatementPool
clear!	lib/active_record/connection_adapters/schema_cache.rb	/^      def clear!$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaCache
clear_active_connections!	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def clear_active_connections!$/;"	f	class:ActiveRecord.ConnectionHandler
clear_aggregation_cache	lib/active_record/aggregations.rb	/^    def clear_aggregation_cache #:nodoc:$/;"	f	class:ActiveRecord.Aggregations
clear_all_connections!	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def clear_all_connections!$/;"	f	class:ActiveRecord.ConnectionHandler
clear_association_cache	lib/active_record/associations.rb	/^    def clear_association_cache #:nodoc:$/;"	f	class:ActiveRecord.Associations
clear_cache!	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def clear_cache!$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
clear_cache!	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def clear_cache!$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
clear_cache!	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def clear_cache!$/;"	f	class:ActiveRecord.PostgreSQLAdapter
clear_cache!	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def clear_cache!$/;"	f	class:ActiveRecord.SQLite3Adapter
clear_cache!	lib/active_record/connection_handling.rb	/^    def clear_cache! # :nodoc:$/;"	f	class:ActiveRecord.ConnectionHandling
clear_log	lib/active_record/test_case.rb	/^      def clear_log; self.log = []; self.log_all = []; end$/;"	f	class:ActiveRecord.SQLCounter
clear_query_cache	lib/active_record/connection_adapters/abstract/query_cache.rb	/^      def clear_query_cache$/;"	f	class:ActiveRecord
clear_reloadable_connections!	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def clear_reloadable_connections!$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool
clear_reloadable_connections!	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def clear_reloadable_connections!$/;"	f	class:ActiveRecord.ConnectionHandler
clear_stale_cached_connections!	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def clear_stale_cached_connections! # :nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool
clear_table_cache!	lib/active_record/connection_adapters/schema_cache.rb	/^      def clear_table_cache!(table_name)$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaCache
clear_timestamp_attributes	lib/active_record/timestamp.rb	/^    def clear_timestamp_attributes$/;"	f	class:ActiveRecord.Timestamp
clear_transaction_record_state	lib/active_record/transactions.rb	/^    def clear_transaction_record_state #:nodoc:$/;"	f	class:ActiveRecord.Transactions
client_encoding	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def client_encoding$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
client_min_messages	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^        def client_min_messages$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.SchemaStatements.indexes
client_min_messages=	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^        def client_min_messages=(level)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.SchemaStatements.indexes
clone_attribute_value	lib/active_record/attribute_methods.rb	/^    def clone_attribute_value(reader_method, attribute_name) # :nodoc:$/;"	f	class:ActiveRecord
clone_attributes	lib/active_record/attribute_methods.rb	/^    def clone_attributes(reader_method = :read_attribute, attributes = {}) # :nodoc:$/;"	f	class:ActiveRecord
close	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def close$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
closed?	lib/active_record/connection_adapters/abstract/transaction.rb	/^      def closed?$/;"	f	class:ActiveRecord.ConnectionAdapters.ClosedTransaction
closed?	lib/active_record/connection_adapters/abstract/transaction.rb	/^      def closed?$/;"	f	class:ActiveRecord.ConnectionAdapters.OpenTransaction
collapse_wheres	lib/active_record/relation/query_methods.rb	/^    def collapse_wheres(arel, wheres)$/;"	f
collation	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def collation$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
collation	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^        def collation$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.SchemaStatements.indexes
collation	lib/active_record/tasks/database_tasks.rb	/^      def collation(*arguments)$/;"	f	class:ActiveRecord.Tasks
collation	lib/active_record/tasks/mysql_database_tasks.rb	/^      def collation$/;"	f	class:ActiveRecord.Tasks.MySQLDatabaseTasks
collation	lib/active_record/tasks/postgresql_database_tasks.rb	/^      def collation$/;"	f	class:ActiveRecord.Tasks.PostgreSQLDatabaseTasks
collation_current	lib/active_record/tasks/database_tasks.rb	/^      def collation_current(environment = Rails.env)$/;"	f	class:ActiveRecord.Tasks
collecting_queries_for_explain	lib/active_record/explain.rb	/^    def collecting_queries_for_explain # :nodoc:$/;"	f	class:ActiveRecord.Explain
collection?	lib/active_record/reflection.rb	/^      def collection?$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
column	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def column(column_name, type, options = {})$/;"	f	class:ActiveRecord.Table
column	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def column(name, type, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.TableDefinition
column	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def column(name, type = nil, options = {})$/;"	f	class:ActiveRecord.PostgreSQLAdapter.TableDefinition
column_alias_for	lib/active_record/relation/calculations.rb	/^    def column_alias_for(keys)$/;"	f	class:ActiveRecord.execute_grouped_calculation
column_defaults	lib/active_record/locking/optimistic.rb	/^        def column_defaults$/;"	f	class:ActiveRecord.Locking.Optimistic.ClassMethods
column_defaults	lib/active_record/model_schema.rb	/^      def column_defaults$/;"	f	class:ActiveRecord.ModelSchema
column_definitions	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def column_definitions(table_name) #:nodoc:$/;"	f	class:ActiveRecord.PostgreSQLAdapter
column_exists?	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def column_exists?(column_name, type = nil, options = {})$/;"	f	class:ActiveRecord.Table
column_exists?	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def column_exists?(table_name, column_name, type = nil, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
column_for	lib/active_record/associations/association_scope.rb	/^      def column_for(table_name, column_name)$/;"	f	class:ActiveRecord.Associations.AssociationScope
column_for	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def column_for(table_name, column_name)$/;"	f	class:ActiveRecord.ConnectionAdapters
column_for	lib/active_record/relation/calculations.rb	/^    def column_for(field)$/;"	f	class:ActiveRecord.execute_grouped_calculation
column_for_attribute	lib/active_record/attribute_methods.rb	/^    def column_for_attribute(name)$/;"	f	class:ActiveRecord
column_methods_hash	lib/active_record/model_schema.rb	/^      def column_methods_hash #:nodoc:$/;"	f	class:ActiveRecord.ModelSchema
column_name_length	lib/active_record/connection_adapters/abstract/database_limits.rb	/^      def column_name_length$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseLimits
column_names	lib/active_record/fixtures.rb	/^      def column_names$/;"	f	class:ActiveRecord.FixtureSet
column_names	lib/active_record/model_schema.rb	/^      def column_names$/;"	f	class:ActiveRecord.ModelSchema
column_names_with_alias	lib/active_record/associations/join_dependency/join_part.rb	/^        def column_names_with_alias$/;"	f	class:ActiveRecord.Associations.JoinDependency.JoinPart
column_spec	lib/active_record/connection_adapters/abstract/schema_dumper.rb	/^      def column_spec(column, types)$/;"	f	class:ActiveRecord.ConnectionAdapters.ColumnDumper
column_types	lib/active_record/model_schema.rb	/^      def column_types # :nodoc:$/;"	f	class:ActiveRecord.ModelSchema
columns	lib/active_record/associations/join_dependency.rb	/^      def columns$/;"	f	class:ActiveRecord.Associations.JoinDependency
columns	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def columns(table_name) end$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
columns	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def columns(table_name)#:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters
columns	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^        def columns(table_name)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.SchemaStatements.indexes
columns	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def columns(table_name) #:nodoc:$/;"	f	class:ActiveRecord.SQLite3Adapter.ExplainPrettyPrinter
columns	lib/active_record/model_schema.rb	/^      def columns$/;"	f	class:ActiveRecord.ModelSchema
columns	lib/active_record/reflection.rb	/^      def columns(tbl_name)$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
columns_for_remove	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^        def columns_for_remove(table_name, *column_names)$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
columns_hash	lib/active_record/model_schema.rb	/^      def columns_hash$/;"	f	class:ActiveRecord.ModelSchema
columns_per_multicolumn_index	lib/active_record/connection_adapters/abstract/database_limits.rb	/^      def columns_per_multicolumn_index$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseLimits
columns_per_table	lib/active_record/connection_adapters/abstract/database_limits.rb	/^      def columns_per_table$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseLimits
commit	lib/active_record/connection_adapters/abstract/transaction.rb	/^      def commit$/;"	f	class:ActiveRecord.ConnectionAdapters.OpenTransaction
commit_db_transaction	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def commit_db_transaction()   end$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
commit_db_transaction	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def commit_db_transaction #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
commit_db_transaction	lib/active_record/connection_adapters/postgresql/database_statements.rb	/^        def commit_db_transaction$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.DatabaseStatements
commit_db_transaction	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def commit_db_transaction #:nodoc:$/;"	f	class:ActiveRecord.SQLite3Adapter.ExplainPrettyPrinter
commit_records	lib/active_record/connection_adapters/abstract/transaction.rb	/^      def commit_records$/;"	f	class:ActiveRecord.ConnectionAdapters.OpenTransaction
commit_transaction	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def commit_transaction #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
committed!	lib/active_record/transactions.rb	/^    def committed! #:nodoc:$/;"	f	class:ActiveRecord.Transactions
composed_of	lib/active_record/aggregations.rb	/^      def composed_of(part_id, options = {})$/;"	f	class:ActiveRecord.Aggregations.ClassMethods
compute_column_widths	lib/active_record/connection_adapters/mysql2_adapter.rb	/^        def compute_column_widths(result)$/;"	f	class:ActiveRecord.ConnectionAdapters.Mysql2Adapter.ExplainPrettyPrinter
compute_table_name	lib/active_record/model_schema.rb	/^      def compute_table_name$/;"	f	class:ActiveRecord.ModelSchema
compute_type	lib/active_record/inheritance.rb	/^      def compute_type(type_name)$/;"	f	class:ActiveRecord.Inheritance.ClassMethods
compute_type	lib/active_record/serializers/xml_serializer.rb	/^      def compute_type$/;"	f	class:ActiveRecord.XmlSerializer.Attribute
concat	lib/active_record/associations/collection_association.rb	/^      def concat(*records)$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
concat	lib/active_record/associations/collection_proxy.rb	/^      def concat(*records)$/;"	f	class:ActiveRecord.Associations.CollectionProxy
concat	lib/active_record/associations/has_many_through_association.rb	/^      def concat(*records)$/;"	f	class:ActiveRecord.Associations.HasManyThroughAssociation
concat_records	lib/active_record/associations/collection_association.rb	/^        def concat_records(records)$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
concat_records	lib/active_record/associations/has_many_through_association.rb	/^      def concat_records(records)$/;"	f	class:ActiveRecord.Associations.HasManyThroughAssociation
configuration	lib/active_record/tasks/mysql_database_tasks.rb	/^      def configuration$/;"	f	class:ActiveRecord.Tasks.MySQLDatabaseTasks
configuration	lib/active_record/tasks/postgresql_database_tasks.rb	/^      def configuration$/;"	f	class:ActiveRecord.Tasks.PostgreSQLDatabaseTasks
configuration	lib/active_record/tasks/sqlite_database_tasks.rb	/^      def configuration$/;"	f	class:ActiveRecord.Tasks.SQLiteDatabaseTasks
configuration_without_database	lib/active_record/tasks/mysql_database_tasks.rb	/^      def configuration_without_database$/;"	f	class:ActiveRecord.Tasks.MySQLDatabaseTasks
configure_connection	lib/active_record/connection_adapters/mysql2_adapter.rb	/^      def configure_connection$/;"	f	class:ActiveRecord.ConnectionAdapters.Mysql2Adapter
configure_connection	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def configure_connection$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
configure_connection	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def configure_connection$/;"	f	class:ActiveRecord.PostgreSQLAdapter
configure_dependency	lib/active_record/associations/builder/association.rb	/^    def configure_dependency$/;"	f
configure_dependency	lib/active_record/associations/builder/has_one.rb	/^    def configure_dependency$/;"	f	class:ActiveRecord.HasOne
connect	lib/active_record/connection_adapters/mysql2_adapter.rb	/^      def connect$/;"	f	class:ActiveRecord.ConnectionAdapters.Mysql2Adapter
connect	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def connect$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
connect	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def connect$/;"	f	class:ActiveRecord.PostgreSQLAdapter
connected?	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def connected?$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool
connected?	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def connected?(klass)$/;"	f	class:ActiveRecord.ConnectionHandler
connected?	lib/active_record/connection_handling.rb	/^    def connected?$/;"	f	class:ActiveRecord.ConnectionHandling
connection	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def connection$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool
connection	lib/active_record/connection_handling.rb	/^    def connection$/;"	f	class:ActiveRecord.ConnectionHandling
connection	lib/active_record/core.rb	/^    def connection$/;"	f	class:ActiveRecord.Core
connection	lib/active_record/migration.rb	/^    def connection$/;"	f	class:ActiveRecord
connection_active?	lib/active_record/connection_adapters/postgresql_adapter.rb	/^          def connection_active?$/;"	f	class:ActiveRecord.PostgreSQLAdapter.StatementPool
connection_config	lib/active_record/connection_handling.rb	/^    def connection_config$/;"	f	class:ActiveRecord.ConnectionHandling
connection_id	lib/active_record/connection_handling.rb	/^    def connection_id$/;"	f	class:ActiveRecord.ConnectionHandling
connection_id=	lib/active_record/connection_handling.rb	/^    def connection_id=(connection_id)$/;"	f	class:ActiveRecord.ConnectionHandling
connection_pool	lib/active_record/connection_handling.rb	/^    def connection_pool$/;"	f	class:ActiveRecord.ConnectionHandling
connection_pool_list	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def connection_pool_list$/;"	f	class:ActiveRecord.ConnectionHandler
connection_pools	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def connection_pools$/;"	f	class:ActiveRecord.ConnectionHandler
connection_url_to_hash	lib/active_record/connection_adapters/connection_specification.rb	/^        def connection_url_to_hash(url) # :nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionSpecification.Resolver
construct	lib/active_record/associations/join_dependency.rb	/^      def construct(parent, associations, join_parts, row)$/;"	f	class:ActiveRecord.Associations.JoinDependency
construct_association	lib/active_record/associations/join_dependency.rb	/^      def construct_association(record, join_part, row)$/;"	f	class:ActiveRecord.Associations.JoinDependency
construct_join_attributes	lib/active_record/associations/through_association.rb	/^        def construct_join_attributes(*records)$/;"	f	class:ActiveRecord.Associations.ThroughAssociation
construct_join_dependency_for_association_find	lib/active_record/relation/finder_methods.rb	/^    def construct_join_dependency_for_association_find$/;"	f	class:ActiveRecord.FinderMethods
construct_limited_ids_condition	lib/active_record/relation/finder_methods.rb	/^    def construct_limited_ids_condition(relation)$/;"	f	class:ActiveRecord.FinderMethods
construct_relation_for_association_calculations	lib/active_record/relation/finder_methods.rb	/^    def construct_relation_for_association_calculations$/;"	f	class:ActiveRecord.FinderMethods
construct_relation_for_association_find	lib/active_record/relation/finder_methods.rb	/^    def construct_relation_for_association_find(join_dependency)$/;"	f	class:ActiveRecord.FinderMethods
construct_tables	lib/active_record/associations/join_helper.rb	/^      def construct_tables$/;"	f	class:ActiveRecord.Associations.JoinHelper
constructable?	lib/active_record/associations/builder/belongs_to.rb	/^    def constructable?$/;"	f	class:ActiveRecord.BelongsTo
constructable?	lib/active_record/associations/builder/has_one.rb	/^    def constructable?$/;"	f	class:ActiveRecord.HasOne
constructable?	lib/active_record/associations/builder/singular_association.rb	/^    def constructable?$/;"	f	class:ActiveRecord.SingularAssociation
content_columns	lib/active_record/model_schema.rb	/^      def content_columns$/;"	f	class:ActiveRecord.ModelSchema
copy	lib/active_record/migration.rb	/^    def copy(destination, sources, options = {})$/;"	f
copy_table	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^        def copy_table(from, to, options = {}) #:nodoc:$/;"	f	class:ActiveRecord.SQLite3Adapter
copy_table_contents	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^        def copy_table_contents(from, to, columns, rename = {}) #:nodoc:$/;"	f	class:ActiveRecord.SQLite3Adapter
copy_table_indexes	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^        def copy_table_indexes(from, to, rename = {}) #:nodoc:$/;"	f	class:ActiveRecord.SQLite3Adapter
count	lib/active_record/associations/collection_association.rb	/^      def count(column_name = nil, count_options = {})$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
count	lib/active_record/associations/collection_proxy.rb	/^      def count(column_name = nil, options = {})$/;"	f	class:ActiveRecord.Associations.CollectionProxy
count	lib/active_record/null_relation.rb	/^    def count(*)$/;"	f	class:ActiveRecord.NullRelation
count	lib/active_record/relation/calculations.rb	/^    def count(column_name = nil, options = {})$/;"	f	class:ActiveRecord.Calculations
count_by_sql	lib/active_record/querying.rb	/^    def count_by_sql(sql)$/;"	f	class:ActiveRecord.Querying
count_records	lib/active_record/associations/has_and_belongs_to_many_association.rb	/^        def count_records$/;"	f	class:ActiveRecord.Associations.HasAndBelongsToManyAssociation
count_records	lib/active_record/associations/has_many_association.rb	/^        def count_records$/;"	f	class:ActiveRecord.Associations.HasManyAssociation
counter_cache_column	lib/active_record/reflection.rb	/^      def counter_cache_column$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
create	lib/active_record/associations/collection_association.rb	/^      def create(attributes = {}, &block)$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
create	lib/active_record/associations/collection_proxy.rb	/^      def create(attributes = {}, &block)$/;"	f	class:ActiveRecord.Associations.CollectionProxy
create	lib/active_record/associations/singular_association.rb	/^      def create(attributes = {}, &block)$/;"	f	class:ActiveRecord.Associations.SingularAssociation
create	lib/active_record/attribute_methods/dirty.rb	/^      def create(*)$/;"	f	class:ActiveRecord.AttributeMethods.Dirty
create	lib/active_record/callbacks.rb	/^    def create #:nodoc:$/;"	f	class:ActiveRecord.Callbacks
create	lib/active_record/connection_adapters/postgresql/database_statements.rb	/^        def create$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.DatabaseStatements
create	lib/active_record/persistence.rb	/^      def create(attributes = nil, &block)$/;"	f	class:ActiveRecord.Persistence.ClassMethods
create	lib/active_record/persistence.rb	/^    def create(attribute_names = @attributes.keys)$/;"	f	class:ActiveRecord.Persistence
create	lib/active_record/relation.rb	/^    def create(*args, &block)$/;"	f	class:ActiveRecord.Relation
create	lib/active_record/tasks/database_tasks.rb	/^      def create(*arguments)$/;"	f	class:ActiveRecord.Tasks
create	lib/active_record/tasks/mysql_database_tasks.rb	/^      def create$/;"	f	class:ActiveRecord.Tasks.MySQLDatabaseTasks
create	lib/active_record/tasks/postgresql_database_tasks.rb	/^      def create(master_established = false)$/;"	f	class:ActiveRecord.Tasks.PostgreSQLDatabaseTasks
create	lib/active_record/tasks/sqlite_database_tasks.rb	/^      def create$/;"	f	class:ActiveRecord.Tasks.SQLiteDatabaseTasks
create	lib/active_record/timestamp.rb	/^    def create$/;"	f	class:ActiveRecord.Timestamp
create!	lib/active_record/associations/collection_association.rb	/^      def create!(attributes = {}, &block)$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
create!	lib/active_record/associations/collection_proxy.rb	/^      def create!(attributes = {}, &block)$/;"	f	class:ActiveRecord.Associations.CollectionProxy
create!	lib/active_record/associations/singular_association.rb	/^      def create!(attributes = {}, &block)$/;"	f	class:ActiveRecord.Associations.SingularAssociation
create!	lib/active_record/relation.rb	/^    def create!(*args, &block)$/;"	f	class:ActiveRecord.Relation
create!	lib/active_record/validations.rb	/^      def create!(attributes = nil, &block)$/;"	f	class:ActiveRecord.Validations.ClassMethods
create_	lib/active_record/associations/builder/singular_association.rb	/^        def create_#{name}!(*args, &block)$/;"	f	class:ActiveRecord.SingularAssociation.define_constructors
create_	lib/active_record/associations/builder/singular_association.rb	/^        def create_#{name}(*args, &block)$/;"	f	class:ActiveRecord.SingularAssociation.define_constructors
create_all	lib/active_record/tasks/database_tasks.rb	/^      def create_all$/;"	f	class:ActiveRecord.Tasks
create_current	lib/active_record/tasks/database_tasks.rb	/^      def create_current(environment = Rails.env)$/;"	f	class:ActiveRecord.Tasks
create_database	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def create_database(name, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
create_database	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^        def create_database(name, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.SchemaStatements
create_database_url	lib/active_record/tasks/database_tasks.rb	/^      def create_database_url$/;"	f	class:ActiveRecord.Tasks
create_fixtures	lib/active_record/fixtures.rb	/^    def self.create_fixtures(fixtures_directory, fixture_set_names, class_names = {})$/;"	F	class:ActiveRecord.FixtureSet
create_join_table	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def create_join_table(table_1, table_2, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
create_migration_file	lib/rails/generators/active_record/migration/migration_generator.rb	/^      def create_migration_file$/;"	f	class:ActiveRecord.Generators.MigrationGenerator
create_migration_file	lib/rails/generators/active_record/model/model_generator.rb	/^      def create_migration_file$/;"	f	class:ActiveRecord.Generators.ModelGenerator
create_model_file	lib/rails/generators/active_record/model/model_generator.rb	/^      def create_model_file$/;"	f	class:ActiveRecord.Generators.ModelGenerator
create_module_file	lib/rails/generators/active_record/model/model_generator.rb	/^      def create_module_file$/;"	f	class:ActiveRecord.Generators.ModelGenerator
create_observer_file	lib/rails/generators/active_record/observer/observer_generator.rb	/^      def create_observer_file$/;"	f	class:ActiveRecord.Generators.ObserverGenerator
create_or_update	lib/active_record/callbacks.rb	/^    def create_or_update #:nodoc:$/;"	f	class:ActiveRecord.Callbacks
create_or_update	lib/active_record/persistence.rb	/^    def create_or_update$/;"	f	class:ActiveRecord.Persistence
create_record	lib/active_record/associations/collection_association.rb	/^        def create_record(attributes, raise = false, &block)$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
create_record	lib/active_record/associations/singular_association.rb	/^        def create_record(attributes, raise_error = false)$/;"	f	class:ActiveRecord.Associations.SingularAssociation
create_reflection	lib/active_record/reflection.rb	/^      def create_reflection(macro, name, scope, options, active_record)$/;"	f	class:ActiveRecord.Reflection.ClassMethods
create_savepoint	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def create_savepoint$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
create_savepoint	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def create_savepoint$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
create_savepoint	lib/active_record/connection_adapters/postgresql/database_statements.rb	/^        def create_savepoint$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.DatabaseStatements
create_savepoint	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def create_savepoint$/;"	f	class:ActiveRecord.SQLite3Adapter.ExplainPrettyPrinter
create_schema	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^        def create_schema schema_name$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.SchemaStatements.indexes
create_scope	lib/active_record/associations/collection_association.rb	/^        def create_scope$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
create_scope	lib/active_record/associations/singular_association.rb	/^        def create_scope$/;"	f	class:ActiveRecord.Associations.SingularAssociation
create_table	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def create_table(table_name, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
create_table	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def create_table(table_name, options = {}) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters
create_table	lib/active_record/schema_migration.rb	/^    def self.create_table$/;"	F	class:ActiveRecord.SchemaMigration
create_through_record	lib/active_record/associations/has_one_through_association.rb	/^        def create_through_record(record)$/;"	f	class:ActiveRecord.Associations.HasOneThroughAssociation
create_time_zone_conversion_attribute?	lib/active_record/attribute_methods/time_zone_conversion.rb	/^        def create_time_zone_conversion_attribute?(name, column)$/;"	f	class:ActiveRecord.AttributeMethods.TimeZoneConversion
create_with	lib/active_record/relation/query_methods.rb	/^    def create_with(value)$/;"	f
create_with!	lib/active_record/relation/query_methods.rb	/^    def create_with!(value)$/;"	f
create_with_value	lib/active_record/relation/query_methods.rb	/^    def create_with_value # :nodoc:$/;"	f
creation_attributes	lib/active_record/associations/association.rb	/^        def creation_attributes$/;"	f	class:ActiveRecord.Associations.Association
creation_options	lib/active_record/tasks/mysql_database_tasks.rb	/^      def creation_options$/;"	f	class:ActiveRecord.Tasks.MySQLDatabaseTasks
ctype	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^        def ctype$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.SchemaStatements.indexes
current_config	lib/active_record/tasks/database_tasks.rb	/^      def current_config(options = {})$/;"	f	class:ActiveRecord.Tasks.DatabaseTasks
current_connection_id	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def current_connection_id #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters
current_database	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def current_database$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
current_database	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^        def current_database$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.SchemaStatements.indexes
current_migration	lib/active_record/migration.rb	/^    def current_migration$/;"	f
current_savepoint_name	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def current_savepoint_name$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
current_schema	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^        def current_schema$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.SchemaStatements.indexes
current_scope	lib/active_record/scoping.rb	/^      def current_scope #:nodoc:$/;"	f	class:ActiveRecord.Scoping.ClassMethods
current_scope=	lib/active_record/scoping.rb	/^      def current_scope=(scope) #:nodoc:$/;"	f	class:ActiveRecord.Scoping.ClassMethods
current_time_from_proper_timezone	lib/active_record/timestamp.rb	/^    def current_time_from_proper_timezone$/;"	f	class:ActiveRecord.Timestamp
current_transaction	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def current_transaction #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
current_version	lib/active_record/migration.rb	/^      def current_version$/;"	f	class:Migrator
current_version	lib/active_record/migration.rb	/^    def current_version$/;"	f
custom_counter_sql	lib/active_record/associations/collection_association.rb	/^        def custom_counter_sql$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
custom_finder_sql	lib/active_record/associations/collection_association.rb	/^        def custom_finder_sql$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
custom_join_ast	lib/active_record/relation/query_methods.rb	/^    def custom_join_ast(table, joins)$/;"	f
dangerous_attribute_method?	lib/active_record/attribute_methods.rb	/^      def dangerous_attribute_method?(name) # :nodoc:$/;"	f	class:ActiveRecord.AttributeMethods.ClassMethods
dangerous_attribute_method?	lib/active_record/attribute_methods/primary_key.rb	/^        def dangerous_attribute_method?(method_name)$/;"	f	class:ActiveRecord.AttributeMethods.PrimaryKey.ClassMethods
database_url_config	lib/active_record/tasks/database_tasks.rb	/^      def database_url_config$/;"	f	class:ActiveRecord.Tasks
ddl_transaction	lib/active_record/migration.rb	/^    def ddl_transaction$/;"	f
dealloc	lib/active_record/connection_adapters/postgresql_adapter.rb	/^          def dealloc(key)$/;"	f	class:ActiveRecord.PostgreSQLAdapter.StatementPool
dealloc	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^        def dealloc(stmt)$/;"	f	class:ActiveRecord.SQLite3Adapter.StatementPool
decorate_columns	lib/active_record/model_schema.rb	/^      def decorate_columns(columns_hash) # :nodoc:$/;"	f	class:ActiveRecord.ModelSchema
decrement	lib/active_record/persistence.rb	/^    def decrement(attribute, by = 1)$/;"	f	class:ActiveRecord.Persistence
decrement!	lib/active_record/persistence.rb	/^    def decrement!(attribute, by = 1)$/;"	f	class:ActiveRecord.Persistence
decrement_counter	lib/active_record/counter_cache.rb	/^      def decrement_counter(counter_name, id)$/;"	f	class:ActiveRecord.CounterCache.ClassMethods
decrement_open_transactions	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def decrement_open_transactions$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
default_fixture_model_name	lib/active_record/fixtures.rb	/^    def self.default_fixture_model_name(fixture_set_name) # :nodoc:$/;"	F	class:ActiveRecord.FixtureSet
default_fixture_table_name	lib/active_record/fixtures.rb	/^    def self.default_fixture_table_name(fixture_set_name) # :nodoc:$/;"	F	class:ActiveRecord.FixtureSet
default_primary_key_type	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^        def default_primary_key_type$/;"	f	class:ActiveRecord
default_scope	lib/active_record/scoping/default.rb	/^        def default_scope(scope = nil)$/;"	f	class:ActiveRecord.Scoping.Default.ClassMethods
default_sequence_name	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def default_sequence_name(table, column)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
default_sequence_name	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^        def default_sequence_name(table_name, pk = nil) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.SchemaStatements.indexes
default_string	lib/active_record/connection_adapters/abstract/schema_dumper.rb	/^        def default_string(value)$/;"	f	class:ActiveRecord.ConnectionAdapters
define	lib/active_record/dynamic_matchers.rb	/^      def define$/;"	f	class:ActiveRecord.DynamicMatchers
define	lib/active_record/schema.rb	/^    def define(info, &block)$/;"	f	class:ActiveRecord.Schema
define	lib/active_record/schema.rb	/^    def self.define(info={}, &block)$/;"	F	class:ActiveRecord.Schema
define_accessors	lib/active_record/associations/builder/association.rb	/^    def define_accessors$/;"	f
define_accessors	lib/active_record/associations/builder/singular_association.rb	/^    def define_accessors$/;"	f	class:ActiveRecord.SingularAssociation
define_attribute_methods	lib/active_record/attribute_methods.rb	/^      def define_attribute_methods # :nodoc:$/;"	f	class:ActiveRecord.AttributeMethods.ClassMethods
define_callback	lib/active_record/associations/builder/collection_association.rb	/^    def define_callback(callback_name)$/;"	f	class:ActiveRecord.CollectionAssociation
define_callbacks	lib/active_record/observer.rb	/^      def define_callbacks(klass)$/;"	f	class:ActiveRecord.Observer
define_constructors	lib/active_record/associations/builder/singular_association.rb	/^    def define_constructors$/;"	f	class:ActiveRecord.SingularAssociation
define_destroy_hook	lib/active_record/associations/builder/has_and_belongs_to_many.rb	/^    def define_destroy_hook$/;"	f	class:ActiveRecord.HasAndBelongsToMany
define_method_attribute	lib/active_record/attribute_methods/primary_key.rb	/^        def define_method_attribute(attr_name)$/;"	f	class:ActiveRecord.AttributeMethods.PrimaryKey.ClassMethods
define_method_attribute	lib/active_record/attribute_methods/read.rb	/^        def define_method_attribute(attr_name)$/;"	f	class:ActiveRecord.AttributeMethods.Read.ClassMethods
define_method_attribute=	lib/active_record/attribute_methods/time_zone_conversion.rb	/^        def define_method_attribute=(attr_name)$/;"	f	class:ActiveRecord.AttributeMethods.TimeZoneConversion.ClassMethods
define_method_attribute=	lib/active_record/attribute_methods/write.rb	/^          def define_method_attribute=(attr_name)$/;"	f	class:ActiveRecord.AttributeMethods.Write.ClassMethods
define_non_cyclic_method	lib/active_record/autosave_association.rb	/^      def define_non_cyclic_method(name, reflection, &block)$/;"	f	class:ActiveRecord.AutosaveAssociation.ClassMethods
define_readers	lib/active_record/associations/builder/association.rb	/^    def define_readers$/;"	f
define_readers	lib/active_record/associations/builder/collection_association.rb	/^    def define_readers$/;"	f	class:ActiveRecord.CollectionAssociation
define_writers	lib/active_record/associations/builder/association.rb	/^    def define_writers$/;"	f
define_writers	lib/active_record/associations/builder/collection_association.rb	/^    def define_writers$/;"	f	class:ActiveRecord
delegate_to_scoped_klass	lib/active_record/relation/delegation.rb	/^    def self.delegate_to_scoped_klass(method)$/;"	F	class:ActiveRecord.Delegation
delete	lib/active_record/associations/collection_association.rb	/^      def delete(*records)$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
delete	lib/active_record/associations/collection_proxy.rb	/^      def delete(*records)$/;"	f	class:ActiveRecord.Associations.CollectionProxy
delete	lib/active_record/associations/has_one_association.rb	/^      def delete(method = options[:dependent])$/;"	f	class:ActiveRecord.Associations.HasOneAssociation
delete	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^        def delete(element)$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool.Queue
delete	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def delete(arel, name = nil, binds = [])$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
delete	lib/active_record/connection_adapters/mysql_adapter.rb	/^        def delete(key);  cache.delete(key); end$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter.StatementPool
delete	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def delete(sql_key)$/;"	f	class:ActiveRecord.PostgreSQLAdapter.StatementPool
delete	lib/active_record/connection_adapters/statement_pool.rb	/^      def delete(key)$/;"	f	class:ActiveRecord.ConnectionAdapters.StatementPool
delete	lib/active_record/null_relation.rb	/^    def delete(_id_or_array)$/;"	f	class:ActiveRecord.NullRelation
delete	lib/active_record/persistence.rb	/^    def delete$/;"	f	class:ActiveRecord.Persistence
delete	lib/active_record/relation.rb	/^    def delete(id_or_array)$/;"	f	class:ActiveRecord.Relation
delete_all	lib/active_record/associations/collection_association.rb	/^      def delete_all$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
delete_all	lib/active_record/associations/collection_proxy.rb	/^      def delete_all$/;"	f	class:ActiveRecord.Associations.CollectionProxy
delete_all	lib/active_record/null_relation.rb	/^    def delete_all(_conditions = nil)$/;"	f	class:ActiveRecord.NullRelation
delete_all	lib/active_record/relation.rb	/^    def delete_all(conditions = nil)$/;"	f	class:ActiveRecord.Relation
delete_or_destroy	lib/active_record/associations/collection_association.rb	/^        def delete_or_destroy(records, method)$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
delete_records	lib/active_record/associations/collection_association.rb	/^        def delete_records(records, method)$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
delete_records	lib/active_record/associations/has_and_belongs_to_many_association.rb	/^        def delete_records(records, method)$/;"	f	class:ActiveRecord.Associations.HasAndBelongsToManyAssociation
delete_records	lib/active_record/associations/has_many_association.rb	/^        def delete_records(records, method)$/;"	f	class:ActiveRecord.Associations
delete_records	lib/active_record/associations/has_many_through_association.rb	/^        def delete_records(records, method)$/;"	f	class:ActiveRecord.Associations.HasManyThroughAssociation
delete_sql	lib/active_record/connection_adapters/abstract/database_statements.rb	/^        def delete_sql(sql, name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
delete_sql	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def delete_sql(sql, name = nil) #:nodoc:$/;"	f	class:ActiveRecord.SQLite3Adapter.ExplainPrettyPrinter
delete_through_records	lib/active_record/associations/has_many_through_association.rb	/^        def delete_through_records(records)$/;"	f	class:ActiveRecord.Associations.HasManyThroughAssociation
derive_class_name	lib/active_record/reflection.rb	/^        def derive_class_name$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
derive_class_name	lib/active_record/reflection.rb	/^        def derive_class_name$/;"	f	class:ActiveRecord.Reflection.MacroReflection
derive_class_name	lib/active_record/reflection.rb	/^        def derive_class_name$/;"	f	class:ActiveRecord.Reflection.ThroughReflection
derive_foreign_key	lib/active_record/reflection.rb	/^        def derive_foreign_key$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
derive_join_table	lib/active_record/reflection.rb	/^        def derive_join_table$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
descends_from_active_record?	lib/active_record/inheritance.rb	/^      def descends_from_active_record?$/;"	f	class:ActiveRecord.Inheritance.ClassMethods
destroy	lib/active_record/associations/collection_association.rb	/^      def destroy(*records)$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
destroy	lib/active_record/associations/collection_proxy.rb	/^      def destroy(*records)$/;"	f	class:ActiveRecord.Associations.CollectionProxy
destroy	lib/active_record/callbacks.rb	/^    def destroy #:nodoc:$/;"	f	class:ActiveRecord.Callbacks
destroy	lib/active_record/persistence.rb	/^    def destroy$/;"	f	class:ActiveRecord.Persistence
destroy	lib/active_record/relation.rb	/^    def destroy(id)$/;"	f	class:ActiveRecord.Relation
destroy	lib/active_record/transactions.rb	/^    def destroy #:nodoc:$/;"	f	class:ActiveRecord.Transactions
destroy!	lib/active_record/persistence.rb	/^    def destroy!$/;"	f	class:ActiveRecord.Persistence
destroy_all	lib/active_record/associations/collection_association.rb	/^      def destroy_all$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
destroy_all	lib/active_record/associations/collection_proxy.rb	/^      def destroy_all$/;"	f	class:ActiveRecord.Associations.CollectionProxy
destroy_all	lib/active_record/relation.rb	/^    def destroy_all(conditions = nil)$/;"	f	class:ActiveRecord.Relation
destroy_associations	lib/active_record/associations/builder/has_and_belongs_to_many.rb	/^          def destroy_associations$/;"	f	class:ActiveRecord.HasAndBelongsToMany.define_destroy_hook
destroy_associations	lib/active_record/persistence.rb	/^    def destroy_associations$/;"	f	class:ActiveRecord.Persistence
destroy_row	lib/active_record/locking/optimistic.rb	/^        def destroy_row$/;"	f	class:ActiveRecord.Locking.Optimistic
destroy_row	lib/active_record/persistence.rb	/^    def destroy_row$/;"	f	class:ActiveRecord.Persistence
destroyed?	lib/active_record/persistence.rb	/^    def destroyed?$/;"	f	class:ActiveRecord.Persistence
different_target?	lib/active_record/associations/belongs_to_association.rb	/^        def different_target?(record)$/;"	f	class:ActiveRecord.Associations.BelongsToAssociation
different_target?	lib/active_record/associations/belongs_to_polymorphic_association.rb	/^        def different_target?(record)$/;"	f	class:ActiveRecord.Associations.BelongsToPolymorphicAssociation
dirties_query_cache	lib/active_record/connection_adapters/abstract/query_cache.rb	/^        def dirties_query_cache(base, *method_names)$/;"	f	class:ActiveRecord.ConnectionAdapters.QueryCache
disable_query_cache!	lib/active_record/connection_adapters/abstract/query_cache.rb	/^      def disable_query_cache!$/;"	f	class:ActiveRecord
disable_referential_integrity	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def disable_referential_integrity$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
disable_referential_integrity	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def disable_referential_integrity(&block) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
disable_referential_integrity	lib/active_record/connection_adapters/postgresql/referential_integrity.rb	/^        def disable_referential_integrity #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.ReferentialIntegrity
disconnect!	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def disconnect!$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool
disconnect!	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def disconnect!$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
disconnect!	lib/active_record/connection_adapters/mysql2_adapter.rb	/^      def disconnect!$/;"	f	class:ActiveRecord.ConnectionAdapters.Mysql2Adapter
disconnect!	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def disconnect!$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
disconnect!	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def disconnect!$/;"	f	class:ActiveRecord.PostgreSQLAdapter
disconnect!	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def disconnect!$/;"	f	class:ActiveRecord.SQLite3Adapter
distinct	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def distinct(columns, order_by)$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
distinct	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^        def distinct(columns, orders) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.SchemaStatements.indexes
down	lib/active_record/migration.rb	/^      def down(migrations_paths, target_version = nil, &block)$/;"	f	class:Migrator
down	lib/active_record/migration.rb	/^    def down$/;"	f	class:ActiveRecord
down	lib/rails/generators/active_record/migration/templates/migration.rb	/^  def down$/;"	f
down?	lib/active_record/migration.rb	/^    def down?$/;"	f
drop	lib/active_record/tasks/database_tasks.rb	/^      def drop(*arguments)$/;"	f	class:ActiveRecord.Tasks
drop	lib/active_record/tasks/mysql_database_tasks.rb	/^      def drop$/;"	f	class:ActiveRecord.Tasks.MySQLDatabaseTasks
drop	lib/active_record/tasks/postgresql_database_tasks.rb	/^      def drop$/;"	f	class:ActiveRecord.Tasks.PostgreSQLDatabaseTasks
drop	lib/active_record/tasks/sqlite_database_tasks.rb	/^      def drop$/;"	f	class:ActiveRecord.Tasks.SQLiteDatabaseTasks
drop_all	lib/active_record/tasks/database_tasks.rb	/^      def drop_all$/;"	f	class:ActiveRecord.Tasks
drop_current	lib/active_record/tasks/database_tasks.rb	/^      def drop_current(environment = Rails.env)$/;"	f	class:ActiveRecord.Tasks
drop_database	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def drop_database(name) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
drop_database	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^        def drop_database(name) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.SchemaStatements
drop_database_url	lib/active_record/tasks/database_tasks.rb	/^      def drop_database_url$/;"	f	class:ActiveRecord.Tasks
drop_schema	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^        def drop_schema schema_name$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.SchemaStatements.indexes
drop_table	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def drop_table(table_name, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
drop_table	lib/active_record/schema_migration.rb	/^    def self.drop_table$/;"	F	class:ActiveRecord.SchemaMigration
dump	lib/active_record/coders/yaml_column.rb	/^      def dump(obj)$/;"	f	class:ActiveRecord.Coders.YAMLColumn
dump	lib/active_record/schema_dumper.rb	/^    def dump(stream)$/;"	f	class:ActiveRecord.SchemaDumper
dump	lib/active_record/schema_dumper.rb	/^    def self.dump(connection=ActiveRecord::Base.connection, stream=STDOUT)$/;"	F	class:ActiveRecord.SchemaDumper
dump	lib/active_record/store.rb	/^      def dump(obj)$/;"	f	class:ActiveRecord.IndifferentCoder
dump_schema_information	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def dump_schema_information #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
each	lib/active_record/connection_adapters/mysql_adapter.rb	/^        def each(&block); cache.each(&block); end$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter.StatementPool
each	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def each(&block); cache.each(&block); end$/;"	f	class:ActiveRecord.PostgreSQLAdapter.StatementPool
each	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^        def each(&block); cache.each(&block); end$/;"	f	class:ActiveRecord.SQLite3Adapter.StatementPool
each	lib/active_record/connection_adapters/statement_pool.rb	/^      def each$/;"	f	class:ActiveRecord.ConnectionAdapters.StatementPool
each	lib/active_record/fixture_set/file.rb	/^      def each(&block)$/;"	f	class:ActiveRecord.FixtureSet.File
each	lib/active_record/fixtures.rb	/^    def each$/;"	f	class:ActiveRecord.Fixture
each	lib/active_record/fixtures.rb	/^    def each(&block)$/;"	f	class:ActiveRecord.FixtureSet
each	lib/active_record/result.rb	/^    def each$/;"	f	class:ActiveRecord.Result
each_current_configuration	lib/active_record/tasks/database_tasks.rb	/^      def each_current_configuration(environment)$/;"	f	class:ActiveRecord.Tasks
each_hash	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def each_hash(result) # :nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
each_hash	lib/active_record/connection_adapters/mysql2_adapter.rb	/^      def each_hash(result) # :nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.Mysql2Adapter
each_hash	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def each_hash(result) # :nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
each_local_configuration	lib/active_record/tasks/database_tasks.rb	/^      def each_local_configuration$/;"	f	class:ActiveRecord.Tasks
eager_load	lib/active_record.rb	/^  def self.eager_load!$/;"	F	class:ActiveRecord
eager_load	lib/active_record/relation/query_methods.rb	/^    def eager_load(*args)$/;"	f
eager_load!	lib/active_record/relation/query_methods.rb	/^    def eager_load!(*args)$/;"	f
eager_loading?	lib/active_record/relation.rb	/^    def eager_loading?$/;"	f	class:ActiveRecord.Relation
empty?	lib/active_record/associations/collection_association.rb	/^      def empty?$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
empty?	lib/active_record/associations/collection_proxy.rb	/^      def empty?$/;"	f	class:ActiveRecord.Associations.CollectionProxy
empty?	lib/active_record/null_relation.rb	/^    def empty?$/;"	f	class:ActiveRecord.NullRelation
empty?	lib/active_record/relation.rb	/^    def empty?$/;"	f	class:ActiveRecord.Relation
empty?	lib/active_record/result.rb	/^    def empty?$/;"	f	class:ActiveRecord.Result
empty_insert_statement_value	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def empty_insert_statement_value$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
empty_insert_statement_value	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def empty_insert_statement_value$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
enable_query_cache!	lib/active_record/connection_adapters/abstract/query_cache.rb	/^      def enable_query_cache!$/;"	f	class:ActiveRecord
encode_with	lib/active_record/core.rb	/^    def encode_with(coder)$/;"	f	class:ActiveRecord.Core
encoding	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^        def encoding$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.SchemaStatements.indexes
encoding	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def encoding$/;"	f	class:ActiveRecord.SQLite3Adapter
encoding	lib/active_record/tasks/postgresql_database_tasks.rb	/^      def encoding$/;"	f	class:ActiveRecord.Tasks.PostgreSQLDatabaseTasks
enlist_fixture_connections	lib/active_record/fixtures.rb	/^    def enlist_fixture_connections$/;"	f	class:ActiveRecord.TestFixtures
ensure_mutable	lib/active_record/associations/through_association.rb	/^        def ensure_mutable$/;"	f	class:ActiveRecord.Associations.ThroughAssociation
ensure_not_nested	lib/active_record/associations/through_association.rb	/^        def ensure_not_nested$/;"	f	class:ActiveRecord.Associations.ThroughAssociation
ensure_proper_type	lib/active_record/inheritance.rb	/^    def ensure_proper_type$/;"	f	class:ActiveRecord.Inheritance
error_class	lib/active_record/tasks/mysql_database_tasks.rb	/^      def error_class$/;"	f	class:ActiveRecord.Tasks.MySQLDatabaseTasks
error_number	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def error_number(exception) # :nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
error_number	lib/active_record/connection_adapters/mysql2_adapter.rb	/^      def error_number(exception)$/;"	f	class:ActiveRecord.ConnectionAdapters.Mysql2Adapter
error_number	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def error_number(exception) # :nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
escape_bytea	lib/active_record/connection_adapters/postgresql/quoting.rb	/^        def escape_bytea(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.Quoting
escape_hstore	lib/active_record/connection_adapters/postgresql/cast.rb	/^          def escape_hstore(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLColumn.Cast
establish_connection	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def establish_connection(owner, spec)$/;"	f	class:ActiveRecord.ConnectionHandler
establish_connection	lib/active_record/connection_handling.rb	/^    def establish_connection(spec = ENV["DATABASE_URL"])$/;"	f	class:ActiveRecord.ConnectionHandling
establish_master_connection	lib/active_record/tasks/postgresql_database_tasks.rb	/^      def establish_master_connection$/;"	f	class:ActiveRecord.Tasks.PostgreSQLDatabaseTasks
eval_scope	lib/active_record/associations/association_scope.rb	/^      def eval_scope(klass, scope)$/;"	f	class:ActiveRecord.Associations.AssociationScope
evaluate_default_scope	lib/active_record/scoping/default.rb	/^        def evaluate_default_scope # :nodoc:$/;"	f	class:ActiveRecord.Scoping.Default.ClassMethods
except	lib/active_record/relation/spawn_methods.rb	/^    def except(*skips)$/;"	f	class:ActiveRecord.SpawnMethods
exec_cache	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def exec_cache(sql, binds)$/;"	f	class:ActiveRecord.PostgreSQLAdapter
exec_delete	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def exec_delete(sql, name, binds)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
exec_delete	lib/active_record/connection_adapters/mysql2_adapter.rb	/^      def exec_delete(sql, name, binds)$/;"	f	class:ActiveRecord.ConnectionAdapters.Mysql2Adapter
exec_delete	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def exec_delete(sql, name, binds)$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
exec_delete	lib/active_record/connection_adapters/postgresql/database_statements.rb	/^        def exec_delete(sql, name = 'SQL', binds = [])$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.DatabaseStatements
exec_delete	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def exec_delete(sql, name = 'SQL', binds = [])$/;"	f	class:ActiveRecord.SQLite3Adapter.ExplainPrettyPrinter
exec_explain	lib/active_record/explain.rb	/^    def exec_explain(queries) # :nodoc:$/;"	f	class:ActiveRecord.Explain
exec_insert	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def exec_insert(sql, name, binds, pk = nil, sequence_name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
exec_insert	lib/active_record/connection_adapters/mysql2_adapter.rb	/^      def exec_insert(sql, name, binds, pk = nil, sequence_name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.Mysql2Adapter
exec_insert	lib/active_record/connection_adapters/postgresql/database_statements.rb	/^        def exec_insert(sql, name, binds, pk = nil, sequence_name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.DatabaseStatements
exec_no_cache	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def exec_no_cache(sql, binds)$/;"	f	class:ActiveRecord.PostgreSQLAdapter
exec_queries	lib/active_record/null_relation.rb	/^    def exec_queries$/;"	f	class:ActiveRecord.NullRelation
exec_queries	lib/active_record/relation.rb	/^    def exec_queries$/;"	f	class:ActiveRecord.Relation
exec_query	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def exec_query(sql, name = 'SQL', binds = [])$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
exec_query	lib/active_record/connection_adapters/mysql2_adapter.rb	/^      def exec_query(sql, name = 'SQL', binds = [])$/;"	f	class:ActiveRecord.ConnectionAdapters.Mysql2Adapter
exec_query	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def exec_query(sql, name = 'SQL', binds = [])$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
exec_query	lib/active_record/connection_adapters/postgresql/database_statements.rb	/^        def exec_query(sql, name = 'SQL', binds = [])$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.DatabaseStatements
exec_query	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def exec_query(sql, name = nil, binds = [])$/;"	f	class:ActiveRecord.SQLite3Adapter.ExplainPrettyPrinter
exec_stmt	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def exec_stmt(sql, name, binds)$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
exec_update	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def exec_update(sql, name, binds)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
exec_without_stmt	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def exec_without_stmt(sql, name = 'SQL') # :nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
execute	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def execute(sql, name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
execute	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def execute(sql, name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
execute	lib/active_record/connection_adapters/mysql2_adapter.rb	/^      def execute(sql, name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.Mysql2Adapter
execute	lib/active_record/connection_adapters/postgresql/database_statements.rb	/^        def execute(sql, name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.DatabaseStatements
execute	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def execute(sql, name = nil) #:nodoc:$/;"	f	class:ActiveRecord.SQLite3Adapter.ExplainPrettyPrinter
execute_and_free	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def execute_and_free(sql, name = nil) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
execute_and_free	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def execute_and_free(sql, name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
execute_callstack_for_multiparameter_attributes	lib/active_record/attribute_assignment.rb	/^    def execute_callstack_for_multiparameter_attributes(callstack)$/;"	f	class:ActiveRecord.AttributeAssignment
execute_grouped_calculation	lib/active_record/relation/calculations.rb	/^    def execute_grouped_calculation(operation, column_name, distinct) #:nodoc:$/;"	f	class:ActiveRecord
execute_simple_calculation	lib/active_record/relation/calculations.rb	/^    def execute_simple_calculation(operation, column_name, distinct) #:nodoc:$/;"	f	class:ActiveRecord
exists?	lib/active_record/null_relation.rb	/^    def exists?(_id = false)$/;"	f	class:ActiveRecord.NullRelation
exists?	lib/active_record/relation/finder_methods.rb	/^    def exists?(conditions = :none)$/;"	f	class:ActiveRecord.FinderMethods
expand	lib/active_record/relation/predicate_builder.rb	/^    def self.expand(klass, table, column, value)$/;"	F	class:ActiveRecord.PredicateBuilder
expand_hash_conditions_for_aggregates	lib/active_record/sanitization.rb	/^      def expand_hash_conditions_for_aggregates(attrs)$/;"	f	class:ActiveRecord.Sanitization.ClassMethods
expire	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def expire$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
explain	lib/active_record/connection_adapters/mysql2_adapter.rb	/^      def explain(arel, binds = [])$/;"	f	class:ActiveRecord.ConnectionAdapters.Mysql2Adapter
explain	lib/active_record/connection_adapters/postgresql/database_statements.rb	/^        def explain(arel, binds = [])$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.DatabaseStatements
explain	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def explain(arel, binds = [])$/;"	f	class:ActiveRecord.SQLite3Adapter
explain	lib/active_record/relation.rb	/^    def explain$/;"	f	class:ActiveRecord.Relation
extended	lib/active_record/explain.rb	/^    def self.extended(base)$/;"	F	class:ActiveRecord.Explain
extending	lib/active_record/relation/query_methods.rb	/^    def extending(*modules, &block)$/;"	f
extending!	lib/active_record/relation/query_methods.rb	/^    def extending!(*modules, &block)$/;"	f
extension_module_name	lib/active_record/associations/builder/collection_association.rb	/^    def extension_module_name$/;"	f	class:ActiveRecord.CollectionAssociation
extract_callstack_for_multiparameter_attributes	lib/active_record/attribute_assignment.rb	/^    def extract_callstack_for_multiparameter_attributes(pairs)$/;"	f	class:ActiveRecord.AttributeAssignment
extract_default	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^        def extract_default(default)$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter.Column
extract_default	lib/active_record/connection_adapters/column.rb	/^      def extract_default(default)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
extract_limit	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^        def extract_limit(sql_type)$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter.Column
extract_limit	lib/active_record/connection_adapters/column.rb	/^        def extract_limit(sql_type)$/;"	f	class:ActiveRecord.ConnectionAdapters
extract_limit	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def extract_limit(sql_type)$/;"	f	class:ActiveRecord.ConnectionAdapters
extract_max_param	lib/active_record/attribute_assignment.rb	/^      def extract_max_param(upper_cap = 100)$/;"	f	class:ActiveRecord.AttributeAssignment.MultiparameterAttribute
extract_pg_identifier_from_name	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def extract_pg_identifier_from_name(name)$/;"	f	class:ActiveRecord.PostgreSQLAdapter
extract_precision	lib/active_record/connection_adapters/column.rb	/^        def extract_precision(sql_type)$/;"	f	class:ActiveRecord.ConnectionAdapters
extract_precision	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def extract_precision(sql_type)$/;"	f	class:ActiveRecord.ConnectionAdapters
extract_record	lib/active_record/associations/join_dependency/join_part.rb	/^        def extract_record(row)$/;"	f	class:ActiveRecord.Associations.JoinDependency.JoinPart
extract_scale	lib/active_record/connection_adapters/column.rb	/^        def extract_scale(sql_type)$/;"	f	class:ActiveRecord.ConnectionAdapters
extract_scale	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def extract_scale(sql_type)$/;"	f	class:ActiveRecord.ConnectionAdapters
extract_schema_and_table	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def extract_schema_and_table(name)$/;"	f	class:ActiveRecord.PostgreSQLAdapter.Utils
extract_table_ref_from_insert_sql	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def extract_table_ref_from_insert_sql(sql)$/;"	f	class:ActiveRecord.PostgreSQLAdapter
extract_value_from_default	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def self.extract_value_from_default(default)$/;"	F	class:ActiveRecord.ConnectionAdapters
fallback_string_to_date	lib/active_record/connection_adapters/column.rb	/^          def fallback_string_to_date(string)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
fallback_string_to_time	lib/active_record/connection_adapters/column.rb	/^          def fallback_string_to_time(string)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
fast_string_to_date	lib/active_record/connection_adapters/column.rb	/^          def fast_string_to_date(string)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
fast_string_to_time	lib/active_record/connection_adapters/column.rb	/^          def fast_string_to_time(string)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
fetch	lib/active_record/connection_adapters/postgresql/oid.rb	/^          def fetch(ftype, fmod)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID.TypeMap
fetch_first_or_last_using_find?	lib/active_record/associations/collection_association.rb	/^        def fetch_first_or_last_using_find?(args)$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
find	lib/active_record/associations/collection_association.rb	/^      def find(*args)$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
find	lib/active_record/associations/collection_proxy.rb	/^      def find(*args, &block)$/;"	f	class:ActiveRecord.Associations.CollectionProxy
find	lib/active_record/fixtures.rb	/^    def find$/;"	f	class:ActiveRecord.Fixture
find	lib/active_record/relation/finder_methods.rb	/^    def find(*args)$/;"	f	class:ActiveRecord.FinderMethods
find_by	lib/active_record/relation/finder_methods.rb	/^    def find_by(*args)$/;"	f	class:ActiveRecord.FinderMethods
find_by!	lib/active_record/relation/finder_methods.rb	/^    def find_by!(*args)$/;"	f	class:ActiveRecord.FinderMethods
find_by_scan	lib/active_record/associations/collection_association.rb	/^        def find_by_scan(*args)$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
find_by_sql	lib/active_record/querying.rb	/^    def find_by_sql(sql, binds = [])$/;"	f	class:ActiveRecord.Querying
find_each	lib/active_record/relation/batches.rb	/^    def find_each(options = {})$/;"	f	class:ActiveRecord.Batches
find_finder_class_for	lib/active_record/validations/uniqueness.rb	/^      def find_finder_class_for(record) #:nodoc:$/;"	f	class:ActiveRecord.Validations.UniquenessValidator
find_first	lib/active_record/relation/finder_methods.rb	/^    def find_first$/;"	f	class:ActiveRecord.FinderMethods
find_in_batches	lib/active_record/relation/batches.rb	/^    def find_in_batches(options = {})$/;"	f	class:ActiveRecord.Batches
find_join_association	lib/active_record/associations/join_dependency.rb	/^      def find_join_association(name_or_reflection, parent)$/;"	f	class:ActiveRecord.Associations.JoinDependency
find_join_table_name	lib/active_record/migration/join_table.rb	/^      def find_join_table_name(table_1, table_2, options = {})$/;"	f	class:ActiveRecord.Migration.JoinTable
find_last	lib/active_record/relation/finder_methods.rb	/^    def find_last$/;"	f	class:ActiveRecord.FinderMethods
find_one	lib/active_record/relation/finder_methods.rb	/^    def find_one(id)$/;"	f	class:ActiveRecord.FinderMethods
find_or_create_by	lib/active_record/relation.rb	/^    def find_or_create_by(attributes, &block)$/;"	f	class:ActiveRecord.Relation
find_or_create_by!	lib/active_record/relation.rb	/^    def find_or_create_by!(attributes, &block)$/;"	f	class:ActiveRecord.Relation
find_or_initialize_by	lib/active_record/relation.rb	/^    def find_or_initialize_by(attributes, &block)$/;"	f	class:ActiveRecord.Relation
find_parameter_position	lib/active_record/attribute_assignment.rb	/^    def find_parameter_position(multiparameter_name)$/;"	f	class:ActiveRecord.AttributeAssignment
find_parent_in	lib/active_record/associations/join_dependency/join_association.rb	/^        def find_parent_in(other_join_dependency)$/;"	f	class:ActiveRecord.Associations.JoinDependency.JoinAssociation
find_some	lib/active_record/relation/finder_methods.rb	/^    def find_some(ids)$/;"	f	class:ActiveRecord.FinderMethods
find_sti_class	lib/active_record/inheritance.rb	/^      def find_sti_class(type_name)$/;"	f	class:ActiveRecord.Inheritance.ClassMethods
find_take	lib/active_record/relation/finder_methods.rb	/^    def find_take$/;"	f	class:ActiveRecord.FinderMethods
find_target	lib/active_record/associations/collection_association.rb	/^        def find_target$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
find_target	lib/active_record/associations/has_many_through_association.rb	/^        def find_target$/;"	f	class:ActiveRecord.Associations.HasManyThroughAssociation
find_target	lib/active_record/associations/singular_association.rb	/^        def find_target$/;"	f	class:ActiveRecord.Associations.SingularAssociation
find_target?	lib/active_record/associations/association.rb	/^        def find_target?$/;"	f	class:ActiveRecord.Associations.Association
find_target?	lib/active_record/associations/belongs_to_association.rb	/^        def find_target?$/;"	f	class:ActiveRecord.Associations.BelongsToAssociation
find_with_associations	lib/active_record/relation/finder_methods.rb	/^    def find_with_associations$/;"	f	class:ActiveRecord.FinderMethods
find_with_ids	lib/active_record/relation/finder_methods.rb	/^    def find_with_ids(*ids)$/;"	f	class:ActiveRecord.FinderMethods
finder	lib/active_record/dynamic_matchers.rb	/^      def finder$/;"	f	class:FindBy
finder	lib/active_record/dynamic_matchers.rb	/^      def finder$/;"	f	class:FindByBang
finder	lib/active_record/dynamic_matchers.rb	/^      def finder$/;"	f	class:Finder
finder_needs_type_condition?	lib/active_record/inheritance.rb	/^      def finder_needs_type_condition? #:nodoc:$/;"	f	class:ActiveRecord.Inheritance.ClassMethods
finish	lib/active_record/explain_subscriber.rb	/^    def finish(name, id, payload)$/;"	f	class:ActiveRecord.ExplainSubscriber
finish	lib/active_record/migration.rb	/^    def finish$/;"	f
finishing?	lib/active_record/connection_adapters/abstract/transaction.rb	/^      def finishing?$/;"	f	class:ActiveRecord.ConnectionAdapters.OpenTransaction
first	lib/active_record/associations/collection_association.rb	/^      def first(*args)$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
first	lib/active_record/associations/collection_proxy.rb	/^      def first(*args)$/;"	f	class:ActiveRecord.Associations.CollectionProxy
first	lib/active_record/relation/finder_methods.rb	/^    def first(limit = nil)$/;"	f	class:ActiveRecord.FinderMethods
first!	lib/active_record/relation/finder_methods.rb	/^    def first!$/;"	f	class:ActiveRecord.FinderMethods
first_or_create	lib/active_record/relation.rb	/^    def first_or_create(attributes = nil, &block) # :nodoc:$/;"	f	class:ActiveRecord.Relation
first_or_create!	lib/active_record/relation.rb	/^    def first_or_create!(attributes = nil, &block) # :nodoc:$/;"	f	class:ActiveRecord.Relation
first_or_initialize	lib/active_record/relation.rb	/^    def first_or_initialize(attributes = nil, &block) # :nodoc:$/;"	f	class:ActiveRecord.Relation
first_or_last	lib/active_record/associations/collection_association.rb	/^        def first_or_last(type, *args)$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
fixture_is_cached	lib/active_record/fixtures.rb	/^    def self.fixture_is_cached?(connection, table_name)$/;"	F	class:ActiveRecord.FixtureSet
fixtures	lib/active_record/fixtures.rb	/^      def fixtures(*fixture_set_names)$/;"	f	class:ActiveRecord.TestFixtures.ClassMethods
foreign_key	lib/active_record/reflection.rb	/^      def foreign_key$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
foreign_key_present?	lib/active_record/associations/association.rb	/^        def foreign_key_present?$/;"	f	class:ActiveRecord.Associations.Association
foreign_key_present?	lib/active_record/associations/belongs_to_association.rb	/^        def foreign_key_present?$/;"	f	class:ActiveRecord.Associations.BelongsToAssociation
foreign_key_present?	lib/active_record/associations/has_many_association.rb	/^        def foreign_key_present?$/;"	f	class:ActiveRecord.Associations
foreign_key_present?	lib/active_record/associations/through_association.rb	/^        def foreign_key_present?$/;"	f	class:ActiveRecord.Associations.ThroughAssociation
foreign_type	lib/active_record/reflection.rb	/^      def foreign_type$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
forward	lib/active_record/migration.rb	/^      def forward(migrations_paths, steps=1)$/;"	f	class:Migrator
freeze	lib/active_record/core.rb	/^    def freeze$/;"	f	class:ActiveRecord.Core
from	lib/active_record/relation/query_methods.rb	/^    def from(value, subquery_name = nil)$/;"	f
from!	lib/active_record/relation/query_methods.rb	/^    def from!(value, subquery_name = nil)$/;"	f
frozen?	lib/active_record/core.rb	/^    def frozen?$/;"	f	class:ActiveRecord.Core
full_table_name_prefix	lib/active_record/model_schema.rb	/^      def full_table_name_prefix #:nodoc:$/;"	f	class:ActiveRecord.ModelSchema
generated_feature_methods	lib/active_record/core.rb	/^      def generated_feature_methods$/;"	f	class:ActiveRecord.Core.ClassMethods
get_all_versions	lib/active_record/migration.rb	/^      def get_all_versions$/;"	f	class:Migrator
get_primary_key	lib/active_record/attribute_methods/primary_key.rb	/^        def get_primary_key(base_name) #:nodoc:$/;"	f	class:ActiveRecord.AttributeMethods.PrimaryKey.ClassMethods
graft	lib/active_record/associations/join_dependency.rb	/^      def graft(*associations)$/;"	f	class:ActiveRecord.Associations.JoinDependency
grant_statement	lib/active_record/tasks/mysql_database_tasks.rb	/^      def grant_statement$/;"	f	class:ActiveRecord.Tasks.MySQLDatabaseTasks
group	lib/active_record/relation/query_methods.rb	/^    def group(*args)$/;"	f
group!	lib/active_record/relation/query_methods.rb	/^    def group!(*args)$/;"	f
grouped_records	lib/active_record/associations/preloader.rb	/^      def grouped_records(association)$/;"	f	class:ActiveRecord.Associations.Preloader
handle_dependency	lib/active_record/associations/belongs_to_association.rb	/^      def handle_dependency$/;"	f	class:ActiveRecord.Associations.BelongsToAssociation
handle_dependency	lib/active_record/associations/has_many_association.rb	/^      def handle_dependency$/;"	f	class:ActiveRecord.Associations.HasManyAssociation
handle_dependency	lib/active_record/associations/has_one_association.rb	/^      def handle_dependency$/;"	f	class:ActiveRecord.Associations.HasOneAssociation
has_and_belongs_to_many	lib/active_record/associations.rb	/^      def has_and_belongs_to_many(name, scope = nil, options = {}, &extension)$/;"	f	class:ActiveRecord.Associations.ClassMethods
has_and_belongs_to_many?	lib/active_record/reflection.rb	/^      def has_and_belongs_to_many?$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
has_attribute?	lib/active_record/attribute_methods.rb	/^    def has_attribute?(attr_name)$/;"	f	class:ActiveRecord
has_cached_counter?	lib/active_record/associations/has_many_association.rb	/^        def has_cached_counter?(reflection = reflection)$/;"	f	class:ActiveRecord.Associations
has_default?	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^        def has_default?$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter.Column
has_default?	lib/active_record/connection_adapters/column.rb	/^      def has_default?$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
has_destroy_flag?	lib/active_record/nested_attributes.rb	/^    def has_destroy_flag?(hash)$/;"	f
has_include?	lib/active_record/relation/calculations.rb	/^    def has_include?(column_name)$/;"	f	class:ActiveRecord
has_inverse?	lib/active_record/reflection.rb	/^      def has_inverse?$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
has_many	lib/active_record/associations.rb	/^      def has_many(name, scope = nil, options = {}, &extension)$/;"	f	class:ActiveRecord.Associations.ClassMethods
has_one	lib/active_record/associations.rb	/^      def has_one(name, scope = nil, options = {})$/;"	f	class:ActiveRecord.Associations.ClassMethods
has_primary_key_column?	lib/active_record/fixtures.rb	/^      def has_primary_key_column?$/;"	f	class:ActiveRecord.FixtureSet
hash	lib/active_record/core.rb	/^    def hash$/;"	f	class:ActiveRecord.Core
hash_rows	lib/active_record/result.rb	/^    def hash_rows$/;"	f	class:ActiveRecord.Result
having	lib/active_record/relation/query_methods.rb	/^    def having(opts, *rest)$/;"	f
having!	lib/active_record/relation/query_methods.rb	/^    def having!(opts, *rest)$/;"	f
header	lib/active_record/schema_dumper.rb	/^      def header(stream)$/;"	f	class:ActiveRecord.SchemaDumper
hstore	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def hstore(name, options = {})$/;"	f	class:ActiveRecord.PostgreSQLAdapter.TableDefinition
hstore_to_string	lib/active_record/connection_adapters/postgresql/cast.rb	/^        def hstore_to_string(object)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLColumn.Cast
human_name	lib/active_record/connection_adapters/column.rb	/^      def human_name$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
i18n_scope	lib/active_record/translation.rb	/^    def i18n_scope #:nodoc:$/;"	f	class:ActiveRecord.Translation
id	lib/active_record/attribute_methods/primary_key.rb	/^      def id$/;"	f	class:ActiveRecord.AttributeMethods.PrimaryKey
id=	lib/active_record/attribute_methods/primary_key.rb	/^      def id=(value)$/;"	f	class:ActiveRecord.AttributeMethods.PrimaryKey
id?	lib/active_record/attribute_methods/primary_key.rb	/^      def id?$/;"	f	class:ActiveRecord.AttributeMethods.PrimaryKey
id_before_type_cast	lib/active_record/attribute_methods/primary_key.rb	/^      def id_before_type_cast$/;"	f	class:ActiveRecord.AttributeMethods.PrimaryKey
identify	lib/active_record/fixtures.rb	/^    def self.identify(label)$/;"	F	class:ActiveRecord.FixtureSet
identity	lib/active_record/log_subscriber.rb	/^    def identity(event)$/;"	f	class:ActiveRecord.LogSubscriber
ids	lib/active_record/relation/calculations.rb	/^    def ids$/;"	f	class:ActiveRecord
ids_reader	lib/active_record/associations/collection_association.rb	/^      def ids_reader$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
ids_writer	lib/active_record/associations/collection_association.rb	/^      def ids_writer(ids)$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
ignore_default_scope=	lib/active_record/scoping/default.rb	/^        def ignore_default_scope=(ignore) # :nodoc:$/;"	f	class:ActiveRecord.Scoping.Default.ClassMethods
ignore_default_scope?	lib/active_record/scoping/default.rb	/^        def ignore_default_scope? # :nodoc:$/;"	f	class:ActiveRecord.Scoping.Default.ClassMethods
ignore_payload?	lib/active_record/explain_subscriber.rb	/^    def ignore_payload?(payload)$/;"	f	class:ActiveRecord.ExplainSubscriber
in_clause_length	lib/active_record/connection_adapters/abstract/database_limits.rb	/^      def in_clause_length$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseLimits
include?	lib/active_record/associations/collection_association.rb	/^      def include?(record)$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
include?	lib/active_record/associations/collection_proxy.rb	/^      def include?(record)$/;"	f	class:ActiveRecord.Associations.CollectionProxy
include_in_memory?	lib/active_record/associations/collection_association.rb	/^        def include_in_memory?(record)$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
included	lib/active_record/connection_adapters/abstract/query_cache.rb	/^        def included(base) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.QueryCache
includes	lib/active_record/relation/query_methods.rb	/^    def includes(*args)$/;"	f
includes!	lib/active_record/relation/query_methods.rb	/^    def includes!(*args)$/;"	f
increment	lib/active_record/persistence.rb	/^    def increment(attribute, by = 1)$/;"	f	class:ActiveRecord.Persistence
increment!	lib/active_record/persistence.rb	/^    def increment!(attribute, by = 1)$/;"	f	class:ActiveRecord.Persistence
increment_counter	lib/active_record/counter_cache.rb	/^      def increment_counter(counter_name, id)$/;"	f	class:ActiveRecord.CounterCache.ClassMethods
increment_lock	lib/active_record/locking/optimistic.rb	/^        def increment_lock$/;"	f	class:ActiveRecord.Locking.Optimistic
increment_open_transactions	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def increment_open_transactions$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
index	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def index(column_name, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters
index	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def index(column_name, options = {})$/;"	f	class:ActiveRecord.Table
index_exists?	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def index_exists?(column_name, options = {})$/;"	f	class:ActiveRecord.Table
index_exists?	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def index_exists?(table_name, column_name, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
index_name	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def index_name(table_name, options) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
index_name	lib/active_record/schema_migration.rb	/^    def self.index_name$/;"	F	class:ActiveRecord.SchemaMigration
index_name_exists?	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def index_name_exists?(table_name, index_name, default)$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
index_name_for	lib/rails/generators/active_record/migration/migration_generator.rb	/^      def index_name_for(attribute)$/;"	f	class:ActiveRecord.Generators.MigrationGenerator
index_name_for_remove	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^        def index_name_for_remove(table_name, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
index_name_length	lib/active_record/connection_adapters/abstract/database_limits.rb	/^      def index_name_length$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseLimits
index_name_length	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^        def index_name_length$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.SchemaStatements.indexes
indexes	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def indexes(table_name, name = nil) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
indexes	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^        def indexes(table_name, name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.SchemaStatements
indexes	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def indexes(table_name, name = nil) #:nodoc:$/;"	f	class:ActiveRecord.SQLite3Adapter.ExplainPrettyPrinter
indexes	lib/active_record/schema_dumper.rb	/^      def indexes(table, stream)$/;"	f	class:ActiveRecord.SchemaDumper.table
indexes_per_table	lib/active_record/connection_adapters/abstract/database_limits.rb	/^      def indexes_per_table$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseLimits
inet	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def inet(name, options = {})$/;"	f	class:ActiveRecord.PostgreSQLAdapter.TableDefinition
inheritance_column	lib/active_record/model_schema.rb	/^      def inheritance_column$/;"	f	class:ActiveRecord.ModelSchema
inheritance_column=	lib/active_record/model_schema.rb	/^      def inheritance_column=(value)$/;"	f	class:ActiveRecord.ModelSchema
inheritance_column_name	lib/active_record/fixtures.rb	/^      def inheritance_column_name$/;"	f	class:ActiveRecord.FixtureSet
inherited	lib/active_record/core.rb	/^      def inherited(child_class) #:nodoc:$/;"	f	class:ActiveRecord.Core.ClassMethods
init_internals	lib/active_record/core.rb	/^    def init_internals$/;"	f	class:ActiveRecord
init_with	lib/active_record/core.rb	/^    def init_with(coder)$/;"	f	class:ActiveRecord.Core
initial_count_for	lib/active_record/associations/alias_tracker.rb	/^        def initial_count_for(name)$/;"	f	class:ActiveRecord.Associations.AliasTracker
initialize	lib/active_record/associations.rb	/^    def initialize(name)$/;"	f	class:ActiveRecord.DeleteRestrictionError
initialize	lib/active_record/associations.rb	/^    def initialize(owner, reflection)$/;"	f	class:ActiveRecord.HasManyThroughCantAssociateNewRecords
initialize	lib/active_record/associations.rb	/^    def initialize(owner, reflection)$/;"	f	class:ActiveRecord.HasManyThroughCantAssociateThroughHasOneOrManyReflection
initialize	lib/active_record/associations.rb	/^    def initialize(owner, reflection)$/;"	f	class:ActiveRecord.HasManyThroughCantDissociateNewRecords
initialize	lib/active_record/associations.rb	/^    def initialize(owner, reflection)$/;"	f	class:ActiveRecord.HasManyThroughNestedAssociationsAreReadonly
initialize	lib/active_record/associations.rb	/^    def initialize(owner_class_name, reflection)$/;"	f	class:ActiveRecord.HasManyThroughAssociationNotFoundError
initialize	lib/active_record/associations.rb	/^    def initialize(owner_class_name, reflection)$/;"	f	class:ActiveRecord.HasManyThroughAssociationPolymorphicThroughError
initialize	lib/active_record/associations.rb	/^    def initialize(owner_class_name, reflection, source_reflection)$/;"	f	class:ActiveRecord.HasManyThroughAssociationPointlessSourceTypeError
initialize	lib/active_record/associations.rb	/^    def initialize(owner_class_name, reflection, source_reflection)$/;"	f	class:ActiveRecord.HasManyThroughAssociationPolymorphicSourceError
initialize	lib/active_record/associations.rb	/^    def initialize(owner_class_name, reflection, through_reflection)$/;"	f	class:ActiveRecord.HasOneThroughCantAssociateThroughCollection
initialize	lib/active_record/associations.rb	/^    def initialize(reflection)$/;"	f	class:ActiveRecord.EagerLoadPolymorphicError
initialize	lib/active_record/associations.rb	/^    def initialize(reflection)$/;"	f	class:ActiveRecord.HasAndBelongsToManyAssociationForeignKeyNeeded
initialize	lib/active_record/associations.rb	/^    def initialize(reflection)$/;"	f	class:ActiveRecord.HasManyThroughSourceAssociationNotFoundError
initialize	lib/active_record/associations.rb	/^    def initialize(reflection)$/;"	f	class:ActiveRecord.ReadOnlyAssociation
initialize	lib/active_record/associations.rb	/^    def initialize(reflection, associated_class = nil)$/;"	f	class:ActiveRecord.InverseOfAssociationNotFoundError
initialize	lib/active_record/associations/alias_tracker.rb	/^      def initialize(connection = Base.connection, table_joins = [])$/;"	f	class:ActiveRecord.Associations.AliasTracker
initialize	lib/active_record/associations/association.rb	/^      def initialize(owner, reflection)$/;"	f	class:ActiveRecord.Associations.Association
initialize	lib/active_record/associations/association_scope.rb	/^      def initialize(association)$/;"	f	class:ActiveRecord.Associations.AssociationScope
initialize	lib/active_record/associations/builder/association.rb	/^    def initialize(model, name, scope, options)$/;"	f	class:ActiveRecord
initialize	lib/active_record/associations/builder/collection_association.rb	/^    def initialize(*args, &extension)$/;"	f	class:ActiveRecord.CollectionAssociation
initialize	lib/active_record/associations/collection_proxy.rb	/^      def initialize(association) #:nodoc:$/;"	f	class:ActiveRecord.Associations.CollectionProxy
initialize	lib/active_record/associations/has_and_belongs_to_many_association.rb	/^      def initialize(owner, reflection)$/;"	f	class:ActiveRecord.Associations.HasAndBelongsToManyAssociation
initialize	lib/active_record/associations/has_many_through_association.rb	/^      def initialize(owner, reflection)$/;"	f	class:ActiveRecord.Associations.HasManyThroughAssociation
initialize	lib/active_record/associations/join_dependency.rb	/^      def initialize(base, associations, joins)$/;"	f	class:ActiveRecord.Associations.JoinDependency
initialize	lib/active_record/associations/join_dependency/join_association.rb	/^        def initialize(reflection, join_dependency, parent = nil)$/;"	f	class:ActiveRecord.Associations.JoinDependency.JoinAssociation
initialize	lib/active_record/associations/join_dependency/join_part.rb	/^        def initialize(active_record)$/;"	f	class:ActiveRecord.Associations.JoinDependency.JoinPart
initialize	lib/active_record/associations/preloader.rb	/^      def initialize(records, associations, preload_scope = nil)$/;"	f	class:ActiveRecord.Associations.Preloader
initialize	lib/active_record/associations/preloader/association.rb	/^        def initialize(klass, owners, reflection, preload_scope)$/;"	f	class:ActiveRecord.Associations.Preloader.Association
initialize	lib/active_record/associations/preloader/has_and_belongs_to_many.rb	/^        def initialize(klass, records, reflection, preload_options)$/;"	f	class:ActiveRecord.Associations.Preloader.HasAndBelongsToMany
initialize	lib/active_record/attribute_assignment.rb	/^      def initialize(object, name, values)$/;"	f	class:ActiveRecord.AttributeAssignment.MultiparameterAttribute
initialize	lib/active_record/attribute_methods/serialization.rb	/^        def initialize(column)$/;"	f	class:ActiveRecord.AttributeMethods.Type
initialize	lib/active_record/attribute_methods/time_zone_conversion.rb	/^        def initialize(column)$/;"	f	class:ActiveRecord.AttributeMethods.TimeZoneConversion.Type
initialize	lib/active_record/coders/yaml_column.rb	/^      def initialize(object_class = Object)$/;"	f	class:ActiveRecord.Coders.YAMLColumn
initialize	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^        def initialize(lock = Monitor.new)$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool.Queue
initialize	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^        def initialize(pool, frequency)$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool.Reaper
initialize	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def initialize$/;"	f	class:ActiveRecord.ConnectionHandler
initialize	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def initialize(app)$/;"	f	class:ConnectionManagement
initialize	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def initialize(spec)$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool
initialize	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def initialize$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
initialize	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def initialize(base)$/;"	f	class:ActiveRecord.ConnectionAdapters.TableDefinition
initialize	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def initialize(table_name, base)$/;"	f	class:ActiveRecord.Table
initialize	lib/active_record/connection_adapters/abstract/transaction.rb	/^      def initialize(connection)$/;"	f	class:ActiveRecord.ConnectionAdapters.Transaction
initialize	lib/active_record/connection_adapters/abstract/transaction.rb	/^      def initialize(connection, parent, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.OpenTransaction
initialize	lib/active_record/connection_adapters/abstract/transaction.rb	/^      def initialize(connection, parent, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.RealTransaction
initialize	lib/active_record/connection_adapters/abstract/transaction.rb	/^      def initialize(connection, parent, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.SavepointTransaction
initialize	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def initialize(connection, logger = nil, pool = nil) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
initialize	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^        def initialize(name, default, sql_type = nil, null = true, collation = nil, strict = false)$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter.Column
initialize	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def initialize(connection, logger, connection_options, config)$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
initialize	lib/active_record/connection_adapters/column.rb	/^      def initialize(name, default, sql_type = nil, null = true)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
initialize	lib/active_record/connection_adapters/connection_specification.rb	/^        def initialize(config, configurations)$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionSpecification.Resolver
initialize	lib/active_record/connection_adapters/connection_specification.rb	/^      def initialize(config, adapter_method)$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionSpecification
initialize	lib/active_record/connection_adapters/mysql2_adapter.rb	/^      def initialize(connection, logger, connection_options, config)$/;"	f	class:ActiveRecord.ConnectionAdapters.Mysql2Adapter
initialize	lib/active_record/connection_adapters/mysql_adapter.rb	/^        def initialize(connection, max = 1000)$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter.StatementPool
initialize	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def initialize(connection, logger, connection_options, config)$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
initialize	lib/active_record/connection_adapters/postgresql/oid.rb	/^          def initialize$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID.TypeMap
initialize	lib/active_record/connection_adapters/postgresql/oid.rb	/^          def initialize(delim, subtype)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID.Vector
initialize	lib/active_record/connection_adapters/postgresql/oid.rb	/^          def initialize(subtype)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID.Array
initialize	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def initialize(connection, max)$/;"	f	class:ActiveRecord.PostgreSQLAdapter.StatementPool
initialize	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def initialize(connection, logger, connection_parameters, config)$/;"	f	class:ActiveRecord.PostgreSQLAdapter
initialize	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def initialize(name, default, oid_type, sql_type = nil, null = true)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLColumn
initialize	lib/active_record/connection_adapters/schema_cache.rb	/^      def initialize(conn)$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaCache
initialize	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^        def initialize(connection, max)$/;"	f	class:ActiveRecord.SQLite3Adapter.StatementPool
initialize	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^        def initialize(version_string)$/;"	f	class:ActiveRecord.SQLite3Adapter.Version
initialize	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def initialize(connection, logger, config)$/;"	f	class:ActiveRecord.SQLite3Adapter
initialize	lib/active_record/connection_adapters/statement_pool.rb	/^      def initialize(connection, max = 1000)$/;"	f	class:ActiveRecord.ConnectionAdapters.StatementPool
initialize	lib/active_record/core.rb	/^    def initialize(attributes = nil)$/;"	f	class:ActiveRecord.Core
initialize	lib/active_record/dynamic_matchers.rb	/^      def initialize(model, name)$/;"	f	class:ActiveRecord.DynamicMatchers
initialize	lib/active_record/errors.rb	/^    def initialize(errors)$/;"	f	class:ActiveRecord.MultiparameterAssignmentErrors
initialize	lib/active_record/errors.rb	/^    def initialize(message, exception, attribute)$/;"	f	class:ActiveRecord.AttributeAssignmentError
initialize	lib/active_record/errors.rb	/^    def initialize(message, original_exception)$/;"	f	class:ActiveRecord.WrappedDatabaseException
initialize	lib/active_record/errors.rb	/^    def initialize(model)$/;"	f	class:ActiveRecord.UnknownPrimaryKey
initialize	lib/active_record/errors.rb	/^    def initialize(record, attempted_action)$/;"	f	class:ActiveRecord.StaleObjectError
initialize	lib/active_record/fixture_set/file.rb	/^      def initialize(file)$/;"	f	class:ActiveRecord.FixtureSet.File
initialize	lib/active_record/fixtures.rb	/^    def initialize(connection, name, class_name, path)$/;"	f	class:ActiveRecord.FixtureSet
initialize	lib/active_record/fixtures.rb	/^    def initialize(fixture, model_class)$/;"	f	class:ActiveRecord.Fixture
initialize	lib/active_record/log_subscriber.rb	/^    def initialize$/;"	f	class:ActiveRecord.LogSubscriber
initialize	lib/active_record/migration.rb	/^      def initialize(app)$/;"	f	class:ActiveRecord.Migration.CheckPending
initialize	lib/active_record/migration.rb	/^    def initialize$/;"	f	class:ActiveRecord.PendingMigrationError
initialize	lib/active_record/migration.rb	/^    def initialize(direction, migrations, target_version = nil)$/;"	f
initialize	lib/active_record/migration.rb	/^    def initialize(name = self.class.name, version = nil)$/;"	f	class:ActiveRecord
initialize	lib/active_record/migration.rb	/^    def initialize(name)$/;"	f	class:ActiveRecord.DuplicateMigrationNameError
initialize	lib/active_record/migration.rb	/^    def initialize(name)$/;"	f	class:ActiveRecord.IllegalMigrationNameError
initialize	lib/active_record/migration.rb	/^    def initialize(name, version, filename, scope)$/;"	f	class:MigrationProxy
initialize	lib/active_record/migration.rb	/^    def initialize(version)$/;"	f	class:ActiveRecord.DuplicateMigrationVersionError
initialize	lib/active_record/migration.rb	/^    def initialize(version)$/;"	f	class:ActiveRecord.UnknownMigrationVersionError
initialize	lib/active_record/migration/command_recorder.rb	/^      def initialize(delegate = nil)$/;"	f	class:ActiveRecord.Migration.CommandRecorder
initialize	lib/active_record/query_cache.rb	/^    def initialize(app)$/;"	f	class:ActiveRecord.QueryCache
initialize	lib/active_record/railties/jdbcmysql_error.rb	/^    def initialize msg$/;"	f	class:ArJdbcMySQL.Error
initialize	lib/active_record/reflection.rb	/^      def initialize(*args)$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
initialize	lib/active_record/reflection.rb	/^      def initialize(macro, name, scope, options, active_record)$/;"	f	class:ActiveRecord.Reflection.MacroReflection
initialize	lib/active_record/relation.rb	/^    def initialize(klass, table, values = {})$/;"	f	class:ActiveRecord.Relation
initialize	lib/active_record/relation/merger.rb	/^      def initialize(relation, hash)$/;"	f	class:ActiveRecord.Relation.HashMerger
initialize	lib/active_record/relation/merger.rb	/^      def initialize(relation, other)$/;"	f	class:ActiveRecord.Relation.Merger
initialize	lib/active_record/result.rb	/^    def initialize(columns, rows, column_types = {})$/;"	f	class:ActiveRecord.Result
initialize	lib/active_record/schema_dumper.rb	/^      def initialize(connection)$/;"	f	class:ActiveRecord.SchemaDumper
initialize	lib/active_record/store.rb	/^      def initialize(coder_or_class_name)$/;"	f	class:ActiveRecord.IndifferentCoder
initialize	lib/active_record/tasks/mysql_database_tasks.rb	/^      def initialize(configuration)$/;"	f	class:ActiveRecord.Tasks.MySQLDatabaseTasks
initialize	lib/active_record/tasks/postgresql_database_tasks.rb	/^      def initialize(configuration)$/;"	f	class:ActiveRecord.Tasks.PostgreSQLDatabaseTasks
initialize	lib/active_record/tasks/sqlite_database_tasks.rb	/^      def initialize(configuration, root = Rails.root)$/;"	f	class:ActiveRecord.Tasks.SQLiteDatabaseTasks
initialize	lib/active_record/test_case.rb	/^    def initialize(ignore = Regexp.union(self.class.ignored_sql))$/;"	f	class:ActiveRecord
initialize	lib/active_record/validations.rb	/^    def initialize(record) # :nodoc:$/;"	f	class:ActiveRecord.RecordInvalid
initialize	lib/active_record/validations/uniqueness.rb	/^      def initialize(options)$/;"	f	class:ActiveRecord.Validations.UniquenessValidator
initialize_attributes	lib/active_record/attribute_methods/serialization.rb	/^          def initialize_attributes(attributes, options = {})$/;"	f	class:ActiveRecord.AttributeMethods.Behavior.ClassMethods
initialize_attributes	lib/active_record/model_schema.rb	/^      def initialize_attributes(attributes, options = {}) #:nodoc:$/;"	f	class:ActiveRecord.ModelSchema
initialize_copy	lib/active_record/relation.rb	/^    def initialize_copy(other)$/;"	f	class:ActiveRecord.Relation
initialize_copy	lib/active_record/result.rb	/^    def initialize_copy(other)$/;"	f	class:ActiveRecord.Result
initialize_dup	lib/active_record/connection_adapters/connection_specification.rb	/^      def initialize_dup(original)$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionSpecification
initialize_dup	lib/active_record/core.rb	/^    def initialize_dup(other) # :nodoc:$/;"	f	class:ActiveRecord.Core
initialize_dup	lib/active_record/timestamp.rb	/^    def initialize_dup(other) # :nodoc:$/;"	f	class:ActiveRecord.Timestamp
initialize_generated_modules	lib/active_record/core.rb	/^      def initialize_generated_modules$/;"	f	class:ActiveRecord.Core.ClassMethods
initialize_schema_migrations_table	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def initialize_schema_migrations_table$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
initialize_store_attribute	lib/active_record/store.rb	/^      def initialize_store_attribute(store_attribute)$/;"	f	class:ActiveRecord
initialize_type_map	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def initialize_type_map$/;"	f	class:ActiveRecord.PostgreSQLAdapter
insert	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def insert(arel, name = nil, pk = nil, id_value = nil, sequence_name = nil, binds = [])$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
insert	lib/active_record/relation.rb	/^    def insert(values)$/;"	f	class:ActiveRecord.Relation
insert_connection_for_test!	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def insert_connection_for_test!(c) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool
insert_fixture	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def insert_fixture(fixture, table_name)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
insert_record	lib/active_record/associations/collection_association.rb	/^        def insert_record(record, validate = true, raise = false)$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
insert_record	lib/active_record/associations/has_and_belongs_to_many_association.rb	/^      def insert_record(record, validate = true, raise = false)$/;"	f	class:ActiveRecord.Associations.HasAndBelongsToManyAssociation
insert_record	lib/active_record/associations/has_many_association.rb	/^      def insert_record(record, validate = true, raise = false)$/;"	f	class:ActiveRecord.Associations.HasManyAssociation
insert_record	lib/active_record/associations/has_many_through_association.rb	/^      def insert_record(record, validate = true, raise = false)$/;"	f	class:ActiveRecord.Associations.HasManyThroughAssociation
insert_sql	lib/active_record/connection_adapters/abstract/database_statements.rb	/^        def insert_sql(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
insert_sql	lib/active_record/connection_adapters/mysql2_adapter.rb	/^      def insert_sql(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.Mysql2Adapter
insert_sql	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def insert_sql(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
insert_sql	lib/active_record/connection_adapters/postgresql/database_statements.rb	/^        def insert_sql(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.DatabaseStatements
insert_sql	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def insert_sql(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil) #:nodoc:$/;"	f	class:ActiveRecord.SQLite3Adapter.ExplainPrettyPrinter
inspect	lib/active_record/core.rb	/^      def inspect$/;"	f	class:ActiveRecord.Core.ClassMethods
inspect	lib/active_record/core.rb	/^    def inspect$/;"	f	class:ActiveRecord.Core
inspect	lib/active_record/explain.rb	/^      def str.inspect$/;"	F	class:ActiveRecord.Explain.exec_explain
inspect	lib/active_record/relation.rb	/^    def inspect$/;"	f	class:ActiveRecord.Relation
instance_method_already_implemented?	lib/active_record/attribute_methods.rb	/^      def instance_method_already_implemented?(method_name)$/;"	f	class:ActiveRecord.AttributeMethods.ClassMethods
instantiate	lib/active_record/associations/join_dependency.rb	/^      def instantiate(rows)$/;"	f	class:ActiveRecord.Associations.JoinDependency
instantiate	lib/active_record/associations/join_dependency/join_part.rb	/^        def instantiate(row)$/;"	f	class:ActiveRecord.Associations.JoinDependency.JoinPart
instantiate	lib/active_record/inheritance.rb	/^      def instantiate(record, column_types = {})$/;"	f	class:ActiveRecord.Inheritance.ClassMethods
instantiate_all_loaded_fixtures	lib/active_record/fixtures.rb	/^    def self.instantiate_all_loaded_fixtures(object, load_instances = true)$/;"	F	class:ActiveRecord.FixtureSet
instantiate_fixtures	lib/active_record/fixtures.rb	/^      def instantiate_fixtures$/;"	f	class:ActiveRecord.TestFixtures
instantiate_fixtures	lib/active_record/fixtures.rb	/^    def self.instantiate_fixtures(object, fixture_set, load_instances = true)$/;"	F	class:ActiveRecord.FixtureSet
instantiate_time_object	lib/active_record/attribute_assignment.rb	/^      def instantiate_time_object(set_values)$/;"	f	class:ActiveRecord.AttributeAssignment.MultiparameterAttribute
interpolate	lib/active_record/associations/association.rb	/^      def interpolate(sql, record = nil)$/;"	f	class:ActiveRecord.Associations.Association
inverse	lib/active_record/migration/command_recorder.rb	/^      def inverse$/;"	f	class:ActiveRecord.Migration.CommandRecorder
inverse_of	lib/active_record/reflection.rb	/^      def inverse_of$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
inverse_reflection_for	lib/active_record/associations/association.rb	/^        def inverse_reflection_for(record)$/;"	f	class:ActiveRecord.Associations.Association
inverse_reflection_for	lib/active_record/associations/belongs_to_polymorphic_association.rb	/^        def inverse_reflection_for(record)$/;"	f	class:ActiveRecord.Associations.BelongsToPolymorphicAssociation
inverse_updates_counter_cache?	lib/active_record/associations/has_many_association.rb	/^        def inverse_updates_counter_cache?(reflection = reflection)$/;"	f	class:ActiveRecord.Associations
invert_add_column	lib/active_record/migration/command_recorder.rb	/^      def invert_add_column(args)$/;"	f	class:ActiveRecord.Migration
invert_add_index	lib/active_record/migration/command_recorder.rb	/^      def invert_add_index(args)$/;"	f	class:ActiveRecord.Migration
invert_add_reference	lib/active_record/migration/command_recorder.rb	/^      def invert_add_reference(args)$/;"	f	class:ActiveRecord.Migration
invert_add_timestamps	lib/active_record/migration/command_recorder.rb	/^      def invert_add_timestamps(args)$/;"	f	class:ActiveRecord.Migration
invert_create_join_table	lib/active_record/migration/command_recorder.rb	/^      def invert_create_join_table(args)$/;"	f	class:ActiveRecord.Migration
invert_create_table	lib/active_record/migration/command_recorder.rb	/^      def invert_create_table(args)$/;"	f	class:ActiveRecord.Migration
invert_remove_reference	lib/active_record/migration/command_recorder.rb	/^      def invert_remove_reference(args)$/;"	f	class:ActiveRecord.Migration
invert_remove_timestamps	lib/active_record/migration/command_recorder.rb	/^      def invert_remove_timestamps(args)$/;"	f	class:ActiveRecord.Migration
invert_rename_column	lib/active_record/migration/command_recorder.rb	/^      def invert_rename_column(args)$/;"	f	class:ActiveRecord.Migration
invert_rename_index	lib/active_record/migration/command_recorder.rb	/^      def invert_rename_index(args)$/;"	f	class:ActiveRecord.Migration
invert_rename_table	lib/active_record/migration/command_recorder.rb	/^      def invert_rename_table(args)$/;"	f	class:ActiveRecord.Migration
invertible_for?	lib/active_record/associations/association.rb	/^        def invertible_for?(record)$/;"	f	class:ActiveRecord.Associations.Association
invertible_for?	lib/active_record/associations/belongs_to_association.rb	/^        def invertible_for?(record)$/;"	f	class:ActiveRecord.Associations.BelongsToAssociation
invertible_for?	lib/active_record/associations/has_and_belongs_to_many_association.rb	/^        def invertible_for?(record)$/;"	f	class:ActiveRecord.Associations.HasAndBelongsToManyAssociation
invertible_for?	lib/active_record/associations/has_many_through_association.rb	/^        def invertible_for?(record)$/;"	f	class:ActiveRecord.Associations.HasManyThroughAssociation
join	lib/active_record/associations/join_helper.rb	/^      def join(table, constraint)$/;"	f	class:ActiveRecord.Associations.JoinHelper
join	lib/active_record/associations/preloader/has_and_belongs_to_many.rb	/^        def join$/;"	f	class:ActiveRecord.Associations.Preloader.HasAndBelongsToMany
join_associations	lib/active_record/associations/join_dependency.rb	/^      def join_associations$/;"	f	class:ActiveRecord.Associations.JoinDependency
join_base	lib/active_record/associations/join_dependency.rb	/^      def join_base$/;"	f	class:ActiveRecord.Associations.JoinDependency
join_relation	lib/active_record/associations/join_dependency/join_association.rb	/^        def join_relation(joining_relation)$/;"	f	class:ActiveRecord.Associations.JoinDependency.JoinAssociation
join_select	lib/active_record/associations/preloader/has_and_belongs_to_many.rb	/^        def join_select$/;"	f	class:ActiveRecord.Associations.Preloader.HasAndBelongsToMany
join_table	lib/active_record/reflection.rb	/^      def join_table$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
join_table_name	lib/active_record/migration/join_table.rb	/^      def join_table_name(table_1, table_2)$/;"	f	class:ActiveRecord.Migration.JoinTable
join_to	lib/active_record/associations/join_dependency/join_association.rb	/^        def join_to(relation)$/;"	f	class:ActiveRecord.Associations.JoinDependency.JoinAssociation
join_to_delete	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def join_to_delete(delete, select, key) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
join_to_update	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def join_to_update(update, select) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
join_to_update	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def join_to_update(update, select) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
join_type	lib/active_record/associations/join_helper.rb	/^      def join_type$/;"	f	class:ActiveRecord.Associations.JoinHelper
joinable?	lib/active_record/connection_adapters/abstract/transaction.rb	/^      def joinable?$/;"	f	class:ActiveRecord.ConnectionAdapters.ClosedTransaction
joinable?	lib/active_record/connection_adapters/abstract/transaction.rb	/^      def joinable?$/;"	f	class:ActiveRecord.ConnectionAdapters.OpenTransaction
joined_includes_values	lib/active_record/relation.rb	/^    def joined_includes_values$/;"	f	class:ActiveRecord.Relation
joins	lib/active_record/relation/query_methods.rb	/^    def joins(*args)$/;"	f
joins!	lib/active_record/relation/query_methods.rb	/^    def joins!(*args)$/;"	f
joins_per_query	lib/active_record/connection_adapters/abstract/database_limits.rb	/^      def joins_per_query$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseLimits
json	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def json(name, options = {})$/;"	f	class:ActiveRecord.PostgreSQLAdapter.TableDefinition
json_to_string	lib/active_record/connection_adapters/postgresql/cast.rb	/^        def json_to_string(object)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLColumn.Cast
key?	lib/active_record/connection_adapters/mysql_adapter.rb	/^        def key?(key);    cache.key?(key); end$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter.StatementPool
key?	lib/active_record/connection_adapters/postgresql/oid.rb	/^          def key?(oid)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID.TypeMap
key?	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def key?(key);    cache.key?(key); end$/;"	f	class:ActiveRecord.PostgreSQLAdapter.StatementPool
key?	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^        def key?(key);    cache.key?(key); end$/;"	f	class:ActiveRecord.SQLite3Adapter.StatementPool
key?	lib/active_record/connection_adapters/statement_pool.rb	/^      def key?(key)$/;"	f	class:ActiveRecord.ConnectionAdapters.StatementPool
keys_for_partial_write	lib/active_record/attribute_methods/dirty.rb	/^      def keys_for_partial_write$/;"	f	class:ActiveRecord.AttributeMethods.Dirty
klass	lib/active_record/associations/association.rb	/^      def klass$/;"	f	class:ActiveRecord.Associations.Association
klass	lib/active_record/associations/belongs_to_polymorphic_association.rb	/^      def klass$/;"	f	class:ActiveRecord.Associations.BelongsToPolymorphicAssociation
klass	lib/active_record/connection_adapters/column.rb	/^      def klass$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
klass	lib/active_record/reflection.rb	/^      def klass$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
klass	lib/active_record/reflection.rb	/^      def klass$/;"	f	class:ActiveRecord.Reflection.MacroReflection
last	lib/active_record/associations/collection_association.rb	/^      def last(*args)$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
last	lib/active_record/associations/collection_proxy.rb	/^      def last(*args)$/;"	f	class:ActiveRecord.Associations.CollectionProxy
last	lib/active_record/relation/finder_methods.rb	/^    def last(limit = nil)$/;"	f	class:ActiveRecord.FinderMethods
last	lib/active_record/result.rb	/^    def last$/;"	f	class:ActiveRecord.Result
last!	lib/active_record/relation/finder_methods.rb	/^    def last!$/;"	f	class:ActiveRecord.FinderMethods
last_insert_id	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def last_insert_id(sequence_name) #:nodoc:$/;"	f	class:ActiveRecord.PostgreSQLAdapter
last_insert_id_result	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def last_insert_id_result(sequence_name) #:nodoc:$/;"	f	class:ActiveRecord.PostgreSQLAdapter
last_insert_id_value	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def last_insert_id_value(sequence_name)$/;"	f	class:ActiveRecord.PostgreSQLAdapter
last_inserted_id	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def last_inserted_id(result)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
last_inserted_id	lib/active_record/connection_adapters/mysql2_adapter.rb	/^      def last_inserted_id(result)$/;"	f	class:ActiveRecord.ConnectionAdapters.Mysql2Adapter
last_inserted_id	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def last_inserted_id(result)$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
last_inserted_id	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def last_inserted_id(result)$/;"	f	class:ActiveRecord.SQLite3Adapter.ExplainPrettyPrinter
last_version	lib/active_record/migration.rb	/^      def last_version$/;"	f	class:Migrator
lease	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def lease$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
length	lib/active_record/associations/collection_association.rb	/^      def length$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
length	lib/active_record/associations/collection_proxy.rb	/^      def length$/;"	f	class:ActiveRecord.Associations.CollectionProxy
length	lib/active_record/connection_adapters/mysql_adapter.rb	/^        def length;       cache.length; end$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter.StatementPool
length	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def length;       cache.length; end$/;"	f	class:ActiveRecord.PostgreSQLAdapter.StatementPool
length	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^        def length;       cache.length; end$/;"	f	class:ActiveRecord.SQLite3Adapter.StatementPool
length	lib/active_record/connection_adapters/statement_pool.rb	/^      def length$/;"	f	class:ActiveRecord.ConnectionAdapters.StatementPool
limit	lib/active_record/relation/query_methods.rb	/^    def limit(value)$/;"	f
limit!	lib/active_record/relation/query_methods.rb	/^    def limit!(value)$/;"	f
limited_update_conditions	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def limited_update_conditions(where_sql, quoted_table_name, quoted_primary_key)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
limited_update_conditions	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def limited_update_conditions(where_sql, quoted_table_name, quoted_primary_key)$/;"	f	class:ActiveRecord.ConnectionAdapters
load	lib/active_record/coders/yaml_column.rb	/^      def load(yaml)$/;"	f	class:ActiveRecord.Coders.YAMLColumn
load	lib/active_record/relation.rb	/^    def load$/;"	f	class:ActiveRecord.Relation
load	lib/active_record/store.rb	/^      def load(yaml)$/;"	f	class:ActiveRecord.IndifferentCoder
load_fixtures	lib/active_record/fixtures.rb	/^      def load_fixtures$/;"	f	class:ActiveRecord.TestFixtures
load_instances?	lib/active_record/fixtures.rb	/^      def load_instances?$/;"	f	class:ActiveRecord.TestFixtures
load_migration	lib/active_record/migration.rb	/^      def load_migration$/;"	f	class:MigrationProxy
load_target	lib/active_record/associations/association.rb	/^      def load_target$/;"	f	class:ActiveRecord.Associations.Association
load_target	lib/active_record/associations/collection_association.rb	/^      def load_target$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
load_target	lib/active_record/associations/collection_proxy.rb	/^      def load_target$/;"	f	class:ActiveRecord.Associations.CollectionProxy
loaded!	lib/active_record/associations/association.rb	/^      def loaded!$/;"	f	class:ActiveRecord.Associations.Association
loaded?	lib/active_record/associations/association.rb	/^      def loaded?$/;"	f	class:ActiveRecord.Associations.Association
loaded?	lib/active_record/associations/collection_proxy.rb	/^      def loaded?$/;"	f	class:ActiveRecord.Associations.CollectionProxy
local_database?	lib/active_record/tasks/database_tasks.rb	/^      def local_database?(configuration)$/;"	f	class:ActiveRecord.Tasks
lock	lib/active_record/relation/query_methods.rb	/^    def lock(locks = true)$/;"	f
lock!	lib/active_record/locking/pessimistic.rb	/^      def lock!(lock = true)$/;"	f	class:ActiveRecord.Locking.Pessimistic
lock!	lib/active_record/relation/query_methods.rb	/^    def lock!(locks = true)$/;"	f
locked?	lib/active_record/connection_adapters/abstract/query_cache.rb	/^      def locked?(arel)$/;"	f	class:ActiveRecord
locking_column	lib/active_record/locking/optimistic.rb	/^        def locking_column$/;"	f	class:ActiveRecord.Locking.Optimistic.ClassMethods
locking_column=	lib/active_record/locking/optimistic.rb	/^        def locking_column=(value)$/;"	f	class:ActiveRecord.Locking.Optimistic.ClassMethods
locking_enabled?	lib/active_record/locking/optimistic.rb	/^        def locking_enabled?$/;"	f	class:ActiveRecord.Locking.Optimistic.ClassMethods
locking_enabled?	lib/active_record/locking/optimistic.rb	/^      def locking_enabled? #:nodoc:$/;"	f	class:ActiveRecord.Locking.Optimistic
log	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def log(sql, name = "SQL", binds = [])$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
log_process_action	lib/active_record/railties/controller_runtime.rb	/^        def log_process_action(payload)$/;"	f	class:ActiveRecord.Railties.ControllerRuntime.ClassMethods
logger	lib/active_record/log_subscriber.rb	/^    def logger$/;"	f	class:ActiveRecord.LogSubscriber
logging_query_plan	lib/active_record/explain.rb	/^    def logging_query_plan # :nodoc:$/;"	f	class:ActiveRecord.Explain
lookup_ancestors	lib/active_record/translation.rb	/^    def lookup_ancestors #:nodoc:$/;"	f	class:ActiveRecord.Translation
macaddr	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def macaddr(name, options = {})$/;"	f	class:ActiveRecord.PostgreSQLAdapter.TableDefinition
macro	lib/active_record/associations/builder/association.rb	/^    def macro$/;"	f
macro	lib/active_record/associations/builder/belongs_to.rb	/^    def macro$/;"	f	class:ActiveRecord.BelongsTo
macro	lib/active_record/associations/builder/has_and_belongs_to_many.rb	/^    def macro$/;"	f	class:ActiveRecord.HasAndBelongsToMany
macro	lib/active_record/associations/builder/has_many.rb	/^    def macro$/;"	f	class:ActiveRecord.HasMany
macro	lib/active_record/associations/builder/has_one.rb	/^    def macro$/;"	f	class:ActiveRecord.HasOne
many?	lib/active_record/associations/collection_association.rb	/^      def many?$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
many?	lib/active_record/associations/collection_proxy.rb	/^      def many?(&block)$/;"	f	class:ActiveRecord.Associations.CollectionProxy
many?	lib/active_record/null_relation.rb	/^    def many?$/;"	f	class:ActiveRecord.NullRelation
many?	lib/active_record/relation.rb	/^    def many?$/;"	f	class:ActiveRecord.Relation
mapping	lib/active_record/reflection.rb	/^      def mapping$/;"	f	class:ActiveRecord.Reflection.AggregateReflection
mark_for_destruction	lib/active_record/autosave_association.rb	/^    def mark_for_destruction$/;"	f	class:ActiveRecord.AutosaveAssociation
marked_for_destruction?	lib/active_record/autosave_association.rb	/^    def marked_for_destruction?$/;"	f	class:ActiveRecord.AutosaveAssociation
marshal_dump	lib/active_record/associations/association.rb	/^      def marshal_dump$/;"	f	class:ActiveRecord.Associations.Association
marshal_dump	lib/active_record/connection_adapters/schema_cache.rb	/^      def marshal_dump$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaCache
marshal_load	lib/active_record/associations/association.rb	/^      def marshal_load(data)$/;"	f	class:ActiveRecord.Associations.Association
marshal_load	lib/active_record/connection_adapters/schema_cache.rb	/^      def marshal_load(array)$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaCache
match	lib/active_record/dynamic_matchers.rb	/^        def match(model, name)$/;"	f	class:ActiveRecord.DynamicMatchers.Method
maximum	lib/active_record/relation/calculations.rb	/^    def maximum(column_name, options = {})$/;"	f	class:ActiveRecord.Calculations
merge	lib/active_record/relation/merger.rb	/^      def merge$/;"	f	class:ActiveRecord.Relation.HashMerger
merge	lib/active_record/relation/merger.rb	/^      def merge$/;"	f	class:ActiveRecord.Relation.Merger
merge	lib/active_record/relation/spawn_methods.rb	/^    def merge(other)$/;"	f	class:ActiveRecord.SpawnMethods
merge!	lib/active_record/relation/spawn_methods.rb	/^    def merge!(other)$/;"	f	class:ActiveRecord.SpawnMethods
merge_multi_values	lib/active_record/relation/merger.rb	/^      def merge_multi_values$/;"	f	class:ActiveRecord.Relation.Merger
merge_single_values	lib/active_record/relation/merger.rb	/^      def merge_single_values$/;"	f	class:ActiveRecord.Relation.Merger
merge_target_lists	lib/active_record/associations/collection_association.rb	/^        def merge_target_lists(persisted, memory)$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
merged_binds	lib/active_record/relation/merger.rb	/^      def merged_binds$/;"	f	class:ActiveRecord.Relation.Merger
merged_wheres	lib/active_record/relation/merger.rb	/^      def merged_wheres$/;"	f	class:ActiveRecord.Relation.Merger
method_defined_within?	lib/active_record/attribute_methods.rb	/^      def method_defined_within?(name, klass, sup = klass.superclass) # :nodoc:$/;"	f	class:ActiveRecord.AttributeMethods.ClassMethods
method_missing	lib/active_record/attribute_methods.rb	/^    def method_missing(method, *args, &block) # :nodoc:$/;"	f	class:ActiveRecord
method_missing	lib/active_record/dynamic_matchers.rb	/^    def method_missing(name, *arguments, &block)$/;"	f	class:ActiveRecord.DynamicMatchers
method_missing	lib/active_record/migration.rb	/^    def method_missing(method, *arguments, &block)$/;"	f	class:ActiveRecord
method_missing	lib/active_record/migration.rb	/^    def self.method_missing(name, *args, &block) # :nodoc:$/;"	F	class:ActiveRecord
method_missing	lib/active_record/migration/command_recorder.rb	/^      def method_missing(method, *args, &block)$/;"	f	class:ActiveRecord.Migration
method_missing	lib/active_record/relation/delegation.rb	/^    def method_missing(method, *args, &block)$/;"	f
microseconds	lib/active_record/connection_adapters/column.rb	/^          def microseconds(time)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
migrate	lib/active_record/migration.rb	/^      def migrate(migrations_paths, target_version = nil, &block)$/;"	f	class:Migrator
migrate	lib/active_record/migration.rb	/^    def migrate$/;"	f
migrate	lib/active_record/migration.rb	/^    def migrate(direction)$/;"	f	class:ActiveRecord
migrate	lib/active_record/migration.rb	/^    def self.migrate(direction)$/;"	F	class:ActiveRecord
migrated	lib/active_record/migration.rb	/^    def migrated$/;"	f
migration	lib/active_record/migration.rb	/^      def migration$/;"	f	class:MigrationProxy
migration_keys	lib/active_record/connection_adapters/abstract/schema_dumper.rb	/^      def migration_keys$/;"	f	class:ActiveRecord.ConnectionAdapters
migration_keys	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def migration_keys$/;"	f	class:ActiveRecord.PostgreSQLAdapter
migrations	lib/active_record/migration.rb	/^      def migrations(paths)$/;"	f	class:Migrator
migrations	lib/active_record/migration.rb	/^    def migrations$/;"	f
migrations_path	lib/active_record/migration.rb	/^      def migrations_path$/;"	f	class:Migrator
migrations_paths	lib/active_record/migration.rb	/^      def migrations_paths$/;"	f	class:Migrator
migrations_paths	lib/active_record/schema.rb	/^    def migrations_paths$/;"	f	class:ActiveRecord.Schema
minimum	lib/active_record/relation/calculations.rb	/^    def minimum(column_name, options = {})$/;"	f	class:ActiveRecord.Calculations
missing_default_forged_as_empty_string?	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^        def missing_default_forged_as_empty_string?(default)$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter.Column
mixin	lib/active_record/associations/builder/association.rb	/^    def mixin$/;"	f	class:ActiveRecord
move	lib/active_record/migration.rb	/^      def move(direction, migrations_paths, steps)$/;"	f	class:Migrator
move_table	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^        def move_table(from, to, options = {}, &block) #:nodoc:$/;"	f	class:ActiveRecord.SQLite3Adapter
mysql2_connection	lib/active_record/connection_adapters/mysql2_adapter.rb	/^    def mysql2_connection(config)$/;"	f	class:ActiveRecord.ConnectionHandling
mysql_connection	lib/active_record/connection_adapters/mysql_adapter.rb	/^    def mysql_connection(config) # :nodoc:$/;"	f	class:ActiveRecord.ConnectionHandling
native	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^        def native$/;"	f	class:ActiveRecord
native	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def native$/;"	f	class:ActiveRecord.ConnectionAdapters
native_database_types	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def native_database_types$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
native_database_types	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def native_database_types$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
native_database_types	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def native_database_types #:nodoc:$/;"	f	class:ActiveRecord.PostgreSQLAdapter
native_database_types	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def native_database_types #:nodoc:$/;"	f	class:ActiveRecord.SQLite3Adapter
needs_migration?	lib/active_record/migration.rb	/^      def needs_migration?$/;"	f	class:Migrator
nested?	lib/active_record/reflection.rb	/^      def nested?$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
nested?	lib/active_record/reflection.rb	/^      def nested?$/;"	f	class:ActiveRecord.Reflection.ThroughReflection
nested_records_changed_for_autosave?	lib/active_record/autosave_association.rb	/^    def nested_records_changed_for_autosave?$/;"	f	class:ActiveRecord.AutosaveAssociation
new	lib/active_record/relation.rb	/^    def new(*args, &block)$/;"	f	class:ActiveRecord.Relation
new_column	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def new_column(field, default, type, null, collation) # :nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
new_column	lib/active_record/connection_adapters/mysql2_adapter.rb	/^      def new_column(field, default, type, null, collation) # :nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.Mysql2Adapter
new_column	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def new_column(field, default, type, null, collation) # :nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
new_column_definition	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def new_column_definition(base, name, type)$/;"	f	class:ActiveRecord.ConnectionAdapters
new_column_definition	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def new_column_definition(base, name, type)$/;"	f	class:ActiveRecord.PostgreSQLAdapter.TableDefinition
new_connection	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def new_connection$/;"	f	class:ActiveRecord.ConnectionAdapters
new_date	lib/active_record/connection_adapters/column.rb	/^          def new_date(year, mon, mday)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
new_record?	lib/active_record/persistence.rb	/^    def new_record?$/;"	f	class:ActiveRecord.Persistence
new_time	lib/active_record/connection_adapters/column.rb	/^          def new_time(year, mon, mday, hour, min, sec, microsec)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
next_key	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def next_key$/;"	f	class:ActiveRecord.PostgreSQLAdapter.StatementPool
next_migration_number	lib/active_record/migration.rb	/^    def next_migration_number(number)$/;"	f
next_migration_number	lib/rails/generators/active_record.rb	/^      def self.next_migration_number(dirname)$/;"	F	class:ActiveRecord.Generators.Base
no_wait_poll	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^        def no_wait_poll$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool.Queue
none	lib/active_record/relation/query_methods.rb	/^    def none$/;"	f
none!	lib/active_record/relation/query_methods.rb	/^    def none!$/;"	f
normal_values	lib/active_record/relation/merger.rb	/^      def normal_values$/;"	f	class:ActiveRecord.Relation.Merger
null_scope?	lib/active_record/associations/collection_association.rb	/^      def null_scope?$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
nullify_owner_attributes	lib/active_record/associations/has_one_association.rb	/^        def nullify_owner_attributes(record)$/;"	f	class:ActiveRecord.Associations.HasOneAssociation
num_waiting	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^        def num_waiting$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool.Queue
number	lib/active_record/connection_adapters/abstract/transaction.rb	/^      def number$/;"	f	class:ActiveRecord.ConnectionAdapters.ClosedTransaction
number	lib/active_record/connection_adapters/abstract/transaction.rb	/^      def number$/;"	f	class:ActiveRecord.ConnectionAdapters.OpenTransaction
number?	lib/active_record/connection_adapters/column.rb	/^      def number?$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
observed_classes	lib/active_record/observer.rb	/^      def observed_classes$/;"	f	class:ActiveRecord.Observer
odd?	lib/active_record/log_subscriber.rb	/^    def odd?$/;"	f	class:ActiveRecord.LogSubscriber
offset	lib/active_record/relation/query_methods.rb	/^    def offset(value)$/;"	f
offset!	lib/active_record/relation/query_methods.rb	/^    def offset!(value)$/;"	f
only	lib/active_record/relation/spawn_methods.rb	/^    def only(*onlies)$/;"	f	class:ActiveRecord.SpawnMethods
open	lib/active_record/fixture_set/file.rb	/^      def self.open(file)$/;"	F	class:ActiveRecord.FixtureSet.File
open	lib/active_record/migration.rb	/^      def open(migrations_paths)$/;"	f	class:Migrator
open?	lib/active_record/connection_adapters/abstract/transaction.rb	/^      def open?$/;"	f	class:ActiveRecord.ConnectionAdapters.ClosedTransaction
open?	lib/active_record/connection_adapters/abstract/transaction.rb	/^      def open?$/;"	f	class:ActiveRecord.ConnectionAdapters.OpenTransaction
open_transactions	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def open_transactions$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
operation_over_aggregate_column	lib/active_record/relation/calculations.rb	/^    def operation_over_aggregate_column(column, operation, distinct)$/;"	f	class:ActiveRecord
options	lib/active_record/associations/preloader/association.rb	/^        def options$/;"	f	class:ActiveRecord.Associations.Preloader.Association
options_include_default?	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^        def options_include_default?(options)$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
order	lib/active_record/relation/query_methods.rb	/^    def order(*args)$/;"	f
order!	lib/active_record/relation/query_methods.rb	/^    def order!(*args)$/;"	f
other	lib/active_record/relation/merger.rb	/^      def other$/;"	f	class:ActiveRecord.Relation.HashMerger
outside_transaction?	lib/active_record/connection_adapters/postgresql/database_statements.rb	/^        def outside_transaction?$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.DatabaseStatements
owner_key_name	lib/active_record/associations/preloader/association.rb	/^        def owner_key_name$/;"	f	class:ActiveRecord.Associations.Preloader.Association
owner_key_name	lib/active_record/associations/preloader/belongs_to.rb	/^        def owner_key_name$/;"	f	class:ActiveRecord.Associations.Preloader.BelongsTo
owner_key_name	lib/active_record/associations/preloader/has_and_belongs_to_many.rb	/^        def owner_key_name$/;"	f	class:ActiveRecord.Associations.Preloader.HasAndBelongsToMany
owner_key_name	lib/active_record/associations/preloader/has_many.rb	/^        def owner_key_name$/;"	f	class:ActiveRecord.Associations.Preloader.HasMany
owner_key_name	lib/active_record/associations/preloader/has_one.rb	/^        def owner_key_name$/;"	f	class:ActiveRecord.Associations.Preloader.HasOne
owner_to_pool	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def owner_to_pool$/;"	f	class:ActiveRecord
owners_by_key	lib/active_record/associations/preloader/association.rb	/^        def owners_by_key$/;"	f	class:ActiveRecord.Associations.Preloader.Association
parent_class_name	lib/rails/generators/active_record/model/model_generator.rb	/^        def parent_class_name$/;"	f	class:ActiveRecord.Generators.ModelGenerator
parse_array_contents	lib/active_record/connection_adapters/postgresql/array_parser.rb	/^          def parse_array_contents(array, string, index)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLColumn.ArrayParser
parse_data	lib/active_record/connection_adapters/postgresql/array_parser.rb	/^          def parse_data(string, index)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLColumn.ArrayParser
parse_pg_array	lib/active_record/connection_adapters/postgresql/array_parser.rb	/^            def parse_pg_array(string)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLColumn.ArrayParser
partial_updates	lib/active_record/attribute_methods/dirty.rb	/^        def self.partial_updates; partial_writes; end$/;"	F	class:ActiveRecord.AttributeMethods.Dirty
partial_updates	lib/active_record/attribute_methods/dirty.rb	/^        def self.partial_updates=(v); self.partial_writes = v; end$/;"	F	class:ActiveRecord.AttributeMethods.Dirty
partial_updates	lib/active_record/attribute_methods/dirty.rb	/^        def self.partial_updates?; partial_writes?; end$/;"	F	class:ActiveRecord.AttributeMethods.Dirty
pattern	lib/active_record/dynamic_matchers.rb	/^        def pattern$/;"	f	class:ActiveRecord.DynamicMatchers.Method
pending_migrations	lib/active_record/migration.rb	/^    def pending_migrations$/;"	f
perform_calculation	lib/active_record/relation/calculations.rb	/^    def perform_calculation(operation, column_name, options = {})$/;"	f	class:ActiveRecord
perform_commit	lib/active_record/connection_adapters/abstract/transaction.rb	/^      def perform_commit$/;"	f	class:ActiveRecord.ConnectionAdapters.RealTransaction
perform_commit	lib/active_record/connection_adapters/abstract/transaction.rb	/^      def perform_commit$/;"	f	class:ActiveRecord.ConnectionAdapters.SavepointTransaction
perform_rollback	lib/active_record/connection_adapters/abstract/transaction.rb	/^      def perform_rollback$/;"	f	class:ActiveRecord.ConnectionAdapters.RealTransaction
perform_rollback	lib/active_record/connection_adapters/abstract/transaction.rb	/^      def perform_rollback$/;"	f	class:ActiveRecord.ConnectionAdapters.SavepointTransaction
perform_validations	lib/active_record/validations.rb	/^    def perform_validations(options={}) # :nodoc:$/;"	f	class:ActiveRecord.Validations
persisted?	lib/active_record/persistence.rb	/^    def persisted?$/;"	f	class:ActiveRecord.Persistence
pk_and_sequence_for	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def pk_and_sequence_for(table)$/;"	f	class:ActiveRecord.ConnectionAdapters.bulk_change_table
pk_and_sequence_for	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^        def pk_and_sequence_for(table) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.SchemaStatements.indexes
pk_attribute?	lib/active_record/attribute_methods.rb	/^    def pk_attribute?(name)$/;"	f	class:ActiveRecord
pluck	lib/active_record/null_relation.rb	/^    def pluck(_column_name)$/;"	f	class:ActiveRecord.NullRelation
pluck	lib/active_record/relation/calculations.rb	/^    def pluck(*column_names)$/;"	f	class:ActiveRecord.Calculations
poll	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^        def poll(timeout = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool.Queue
polymorphic?	lib/active_record/reflection.rb	/^      def polymorphic?$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
polymorphic_inverse_of	lib/active_record/reflection.rb	/^      def polymorphic_inverse_of(associated_class)$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
pool_for	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def pool_for(owner)$/;"	f	class:ActiveRecord
pool_from_any_process_for	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def pool_from_any_process_for(owner)$/;"	f	class:ActiveRecord
populate_with_current_scope_attributes	lib/active_record/scoping.rb	/^    def populate_with_current_scope_attributes$/;"	f	class:ActiveRecord.Scoping
postgresql_connection	lib/active_record/connection_adapters/postgresql_adapter.rb	/^    def postgresql_connection(config) # :nodoc:$/;"	f	class:ActiveRecord.ConnectionHandling
postgresql_version	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def postgresql_version$/;"	f	class:ActiveRecord.PostgreSQLAdapter
pp	lib/active_record/connection_adapters/mysql2_adapter.rb	/^        def pp(result, elapsed)$/;"	f	class:ActiveRecord.ConnectionAdapters.Mysql2Adapter.ExplainPrettyPrinter
pp	lib/active_record/connection_adapters/postgresql/database_statements.rb	/^          def pp(result)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.DatabaseStatements.ExplainPrettyPrinter
pp	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^        def pp(result) # :nodoc:$/;"	f	class:ActiveRecord.SQLite3Adapter.ExplainPrettyPrinter
prefetch_primary_key?	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def prefetch_primary_key?(table_name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
prefix	lib/active_record/dynamic_matchers.rb	/^        def prefix$/;"	f	class:ActiveRecord.DynamicMatchers.Method
prefix	lib/active_record/dynamic_matchers.rb	/^      def self.prefix$/;"	F	class:FindBy
prefix	lib/active_record/dynamic_matchers.rb	/^      def self.prefix$/;"	F	class:FindByBang
preload	lib/active_record/associations/preloader.rb	/^      def preload(association)$/;"	f	class:ActiveRecord.Associations.Preloader
preload	lib/active_record/associations/preloader/association.rb	/^        def preload$/;"	f	class:ActiveRecord.Associations.Preloader.Association
preload	lib/active_record/associations/preloader/collection_association.rb	/^        def preload$/;"	f	class:ActiveRecord.Associations.Preloader.CollectionAssociation
preload	lib/active_record/associations/preloader/singular_association.rb	/^        def preload$/;"	f	class:ActiveRecord.Associations.Preloader.SingularAssociation
preload	lib/active_record/relation/query_methods.rb	/^    def preload(*args)$/;"	f
preload!	lib/active_record/relation/query_methods.rb	/^    def preload!(*args)$/;"	f
preload_hash	lib/active_record/associations/preloader.rb	/^      def preload_hash(association)$/;"	f	class:ActiveRecord.Associations.Preloader
preload_one	lib/active_record/associations/preloader.rb	/^      def preload_one(association)$/;"	f	class:ActiveRecord.Associations.Preloader
preloader_for	lib/active_record/associations/preloader.rb	/^      def preloader_for(reflection)$/;"	f	class:ActiveRecord.Associations.Preloader
prepare_column_options	lib/active_record/connection_adapters/abstract/schema_dumper.rb	/^      def prepare_column_options(column, types)$/;"	f	class:ActiveRecord.ConnectionAdapters.ColumnDumper
prepare_column_options	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def prepare_column_options(column, types)$/;"	f	class:ActiveRecord.PostgreSQLAdapter
prepare_command_options	lib/active_record/tasks/mysql_database_tasks.rb	/^      def prepare_command_options(command)$/;"	f	class:ActiveRecord.Tasks.MySQLDatabaseTasks
prepare_default_proc	lib/active_record/connection_adapters/schema_cache.rb	/^      def prepare_default_proc$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaCache
prepare_statement	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def prepare_statement(sql)$/;"	f	class:ActiveRecord.PostgreSQLAdapter
pretty_print	lib/active_record/relation.rb	/^    def pretty_print(q)$/;"	f	class:ActiveRecord.Relation
primary_key	lib/active_record/attribute_methods/primary_key.rb	/^        def primary_key$/;"	f	class:ActiveRecord.AttributeMethods.PrimaryKey.ClassMethods
primary_key	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def primary_key(name)$/;"	f	class:ActiveRecord.ConnectionAdapters.TableDefinition
primary_key	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def primary_key(table)$/;"	f	class:ActiveRecord.ConnectionAdapters
primary_key	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^        def primary_key(table)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.SchemaStatements.indexes
primary_key	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def primary_key(table_name) #:nodoc:$/;"	f	class:ActiveRecord.SQLite3Adapter
primary_key	lib/active_record/reflection.rb	/^        def primary_key(klass)$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
primary_key=	lib/active_record/attribute_methods/primary_key.rb	/^        def primary_key=(value)$/;"	f	class:ActiveRecord.AttributeMethods.PrimaryKey.ClassMethods
primary_key_column	lib/active_record/reflection.rb	/^      def primary_key_column$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
primary_key_column_name	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def primary_key_column_name$/;"	f	class:ActiveRecord.ConnectionAdapters
primary_key_name	lib/active_record/fixtures.rb	/^      def primary_key_name$/;"	f	class:ActiveRecord.FixtureSet
process_action	lib/active_record/railties/controller_runtime.rb	/^      def process_action(action, *args)$/;"	f	class:ActiveRecord.Railties.ControllerRuntime
proper_table_name	lib/active_record/migration.rb	/^      def proper_table_name(name)$/;"	f	class:Migrator
proxy_association	lib/active_record/associations/collection_proxy.rb	/^      def proxy_association$/;"	f	class:ActiveRecord.Associations.CollectionProxy
purge	lib/active_record/tasks/database_tasks.rb	/^      def purge(configuration)$/;"	f	class:ActiveRecord.Tasks
purge	lib/active_record/tasks/mysql_database_tasks.rb	/^      def purge$/;"	f	class:ActiveRecord.Tasks.MySQLDatabaseTasks
purge	lib/active_record/tasks/postgresql_database_tasks.rb	/^      def purge$/;"	f	class:ActiveRecord.Tasks.PostgreSQLDatabaseTasks
query	lib/active_record/connection_adapters/postgresql/database_statements.rb	/^        def query(sql, name = nil) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.DatabaseStatements
query_attribute	lib/active_record/attribute_methods/query.rb	/^      def query_attribute(attr_name)$/;"	f	class:ActiveRecord.AttributeMethods.Query
quote	lib/active_record/connection_adapters/abstract/quoting.rb	/^      def quote(value, column = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.Quoting
quote	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def quote(value, column = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
quote	lib/active_record/connection_adapters/postgresql/quoting.rb	/^        def quote(value, column = nil) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.Quoting
quote	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def quote(value, column = nil)$/;"	f	class:ActiveRecord.SQLite3Adapter
quote_and_escape	lib/active_record/connection_adapters/postgresql/cast.rb	/^          def quote_and_escape(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLColumn.Cast
quote_bound_value	lib/active_record/sanitization.rb	/^      def quote_bound_value(value, c = connection) #:nodoc:$/;"	f	class:ActiveRecord.Sanitization.ClassMethods.sanitize_sql_hash_for_assignment
quote_column_name	lib/active_record/connection_adapters/abstract/quoting.rb	/^      def quote_column_name(column_name)$/;"	f	class:ActiveRecord.ConnectionAdapters.Quoting
quote_column_name	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def quote_column_name(name) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
quote_column_name	lib/active_record/connection_adapters/postgresql/quoting.rb	/^        def quote_column_name(name) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.Quoting
quote_column_name	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def quote_column_name(name) #:nodoc:$/;"	f	class:ActiveRecord.SQLite3Adapter
quote_string	lib/active_record/connection_adapters/abstract/quoting.rb	/^      def quote_string(s)$/;"	f	class:ActiveRecord.ConnectionAdapters.Quoting
quote_string	lib/active_record/connection_adapters/mysql2_adapter.rb	/^      def quote_string(string)$/;"	f	class:ActiveRecord.ConnectionAdapters.Mysql2Adapter
quote_string	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def quote_string(string) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
quote_string	lib/active_record/connection_adapters/postgresql/quoting.rb	/^        def quote_string(s) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.Quoting
quote_string	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def quote_string(s) #:nodoc:$/;"	f	class:ActiveRecord.SQLite3Adapter
quote_table_name	lib/active_record/connection_adapters/abstract/quoting.rb	/^      def quote_table_name(table_name)$/;"	f	class:ActiveRecord.ConnectionAdapters.Quoting
quote_table_name	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def quote_table_name(name) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
quote_table_name	lib/active_record/connection_adapters/postgresql/quoting.rb	/^        def quote_table_name(name)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.Quoting
quote_value	lib/active_record/sanitization.rb	/^      def quote_value(value, column = nil) #:nodoc:$/;"	f	class:ActiveRecord.Sanitization.ClassMethods
quoted_columns_for_index	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^        def quoted_columns_for_index(column_names, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
quoted_columns_for_index	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def quoted_columns_for_index(column_names, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters
quoted_date	lib/active_record/connection_adapters/abstract/quoting.rb	/^      def quoted_date(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.Quoting
quoted_date	lib/active_record/connection_adapters/postgresql/quoting.rb	/^        def quoted_date(value) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.Quoting
quoted_date	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def quoted_date(value) #:nodoc:$/;"	f	class:ActiveRecord.SQLite3Adapter
quoted_false	lib/active_record/connection_adapters/abstract/quoting.rb	/^      def quoted_false$/;"	f	class:ActiveRecord.ConnectionAdapters.Quoting
quoted_false	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def quoted_false$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
quoted_id	lib/active_record/sanitization.rb	/^    def quoted_id$/;"	f	class:ActiveRecord.Sanitization.ClassMethods
quoted_locking_column	lib/active_record/locking/optimistic.rb	/^        def quoted_locking_column$/;"	f	class:ActiveRecord.Locking.Optimistic.ClassMethods
quoted_primary_key	lib/active_record/attribute_methods/primary_key.rb	/^        def quoted_primary_key$/;"	f	class:ActiveRecord.AttributeMethods.PrimaryKey.ClassMethods
quoted_table_name	lib/active_record/model_schema.rb	/^      def quoted_table_name$/;"	f	class:ActiveRecord.ModelSchema.ClassMethods
quoted_table_name	lib/active_record/reflection.rb	/^      def quoted_table_name$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
quoted_true	lib/active_record/connection_adapters/abstract/quoting.rb	/^      def quoted_true$/;"	f	class:ActiveRecord.ConnectionAdapters.Quoting
quoted_true	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def quoted_true$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
raise_if_bind_arity_mismatch	lib/active_record/sanitization.rb	/^      def raise_if_bind_arity_mismatch(statement, expected, provided) #:nodoc:$/;"	f	class:ActiveRecord.Sanitization.ClassMethods.sanitize_sql_hash_for_assignment
raise_nested_attributes_record_not_found	lib/active_record/nested_attributes.rb	/^    def raise_nested_attributes_record_not_found(association_name, record_id)$/;"	f
raise_on_type_mismatch	lib/active_record/associations/association.rb	/^        def raise_on_type_mismatch(record)$/;"	f	class:ActiveRecord.Associations.Association
raise_on_type_mismatch	lib/active_record/associations/belongs_to_polymorphic_association.rb	/^        def raise_on_type_mismatch(record)$/;"	f	class:ActiveRecord.Associations.BelongsToPolymorphicAssociation
ran?	lib/active_record/migration.rb	/^    def ran?(migration)$/;"	f
raw_connection	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def raw_connection$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
read_attribute	lib/active_record/attribute_methods/read.rb	/^      def read_attribute(attr_name)$/;"	f	class:ActiveRecord.AttributeMethods.Read
read_attribute_before_type_cast	lib/active_record/attribute_methods/before_type_cast.rb	/^      def read_attribute_before_type_cast(attr_name)$/;"	f	class:ActiveRecord.AttributeMethods.BeforeTypeCast
read_attribute_before_type_cast	lib/active_record/attribute_methods/serialization.rb	/^        def read_attribute_before_type_cast(attr_name)$/;"	f	class:ActiveRecord.AttributeMethods.Behavior
read_date	lib/active_record/attribute_assignment.rb	/^      def read_date$/;"	f	class:ActiveRecord.AttributeAssignment.MultiparameterAttribute
read_fixture_files	lib/active_record/fixtures.rb	/^      def read_fixture_files$/;"	f	class:ActiveRecord.FixtureSet
read_other	lib/active_record/attribute_assignment.rb	/^      def read_other(klass)$/;"	f	class:ActiveRecord.AttributeAssignment.MultiparameterAttribute
read_store_attribute	lib/active_record/store.rb	/^      def read_store_attribute(store_attribute, key)$/;"	f	class:ActiveRecord
read_time	lib/active_record/attribute_assignment.rb	/^      def read_time$/;"	f	class:ActiveRecord.AttributeAssignment.MultiparameterAttribute
read_value	lib/active_record/attribute_assignment.rb	/^      def read_value$/;"	f	class:ActiveRecord.AttributeAssignment.MultiparameterAttribute
reader	lib/active_record/associations/collection_association.rb	/^      def reader(force_reload = false)$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
reader	lib/active_record/associations/singular_association.rb	/^      def reader(force_reload = false)$/;"	f	class:ActiveRecord.Associations.SingularAssociation
reader_method	lib/active_record/aggregations.rb	/^        def reader_method(name, class_name, mapping, allow_nil, constructor)$/;"	f	class:ActiveRecord.Aggregations.ClassMethods
readonly	lib/active_record/relation/query_methods.rb	/^    def readonly(value = true)$/;"	f
readonly!	lib/active_record/core.rb	/^    def readonly!$/;"	f	class:ActiveRecord.Core
readonly!	lib/active_record/relation/query_methods.rb	/^    def readonly!(value = true)$/;"	f
readonly?	lib/active_record/core.rb	/^    def readonly?$/;"	f	class:ActiveRecord.Core
readonly_attribute?	lib/active_record/attribute_methods.rb	/^    def readonly_attribute?(name)$/;"	f	class:ActiveRecord
readonly_attributes	lib/active_record/readonly_attributes.rb	/^      def readonly_attributes$/;"	f	class:ActiveRecord.ReadonlyAttributes.ClassMethods
reap	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def reap$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool
reconnect!	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def reconnect!$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
reconnect!	lib/active_record/connection_adapters/mysql2_adapter.rb	/^      def reconnect!$/;"	f	class:ActiveRecord.ConnectionAdapters.Mysql2Adapter
reconnect!	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def reconnect!$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
reconnect!	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def reconnect!$/;"	f	class:ActiveRecord.PostgreSQLAdapter
record	lib/active_record/migration/command_recorder.rb	/^      def record(*command)$/;"	f	class:ActiveRecord.Migration.CommandRecorder
record_id	lib/active_record/associations/join_dependency/join_part.rb	/^        def record_id(row)$/;"	f	class:ActiveRecord.Associations.JoinDependency.JoinPart
record_version_state_after_migrating	lib/active_record/migration.rb	/^    def record_version_state_after_migrating(version)$/;"	f
records_by_reflection	lib/active_record/associations/preloader.rb	/^      def records_by_reflection(association)$/;"	f	class:ActiveRecord.Associations.Preloader
records_for	lib/active_record/associations/preloader/association.rb	/^        def records_for(ids)$/;"	f	class:ActiveRecord.Associations.Preloader.Association
records_for	lib/active_record/associations/preloader/has_and_belongs_to_many.rb	/^        def records_for(ids)$/;"	f	class:ActiveRecord.Associations.Preloader.HasAndBelongsToMany
recreate_database	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def recreate_database(name, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
recreate_database	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^        def recreate_database(name, options = {}) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.SchemaStatements
references	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def references(*args)$/;"	f	class:ActiveRecord.ConnectionAdapters
references	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def references(*args)$/;"	f	class:ActiveRecord.Table
references	lib/active_record/relation/predicate_builder.rb	/^    def self.references(attributes)$/;"	F	class:ActiveRecord.PredicateBuilder
references	lib/active_record/relation/query_methods.rb	/^    def references(*args)$/;"	f
references!	lib/active_record/relation/query_methods.rb	/^    def references!(*args)$/;"	f
references_eager_loaded_tables?	lib/active_record/relation.rb	/^    def references_eager_loaded_tables?$/;"	f	class:ActiveRecord.Relation
reflect_on_aggregation	lib/active_record/reflection.rb	/^      def reflect_on_aggregation(aggregation)$/;"	f	class:ActiveRecord.Reflection.ClassMethods
reflect_on_all_aggregations	lib/active_record/reflection.rb	/^      def reflect_on_all_aggregations$/;"	f	class:ActiveRecord.Reflection.ClassMethods
reflect_on_all_associations	lib/active_record/reflection.rb	/^      def reflect_on_all_associations(macro = nil)$/;"	f	class:ActiveRecord.Reflection.ClassMethods
reflect_on_all_autosave_associations	lib/active_record/reflection.rb	/^      def reflect_on_all_autosave_associations$/;"	f	class:ActiveRecord.Reflection.ClassMethods
reflect_on_association	lib/active_record/reflection.rb	/^      def reflect_on_association(association)$/;"	f	class:ActiveRecord.Reflection.ClassMethods
reflection_scope	lib/active_record/associations/preloader/association.rb	/^        def reflection_scope$/;"	f	class:ActiveRecord.Associations.Preloader.Association
register_task	lib/active_record/tasks/database_tasks.rb	/^      def register_task(pattern, task)$/;"	f	class:ActiveRecord.Tasks.DatabaseTasks
register_type	lib/active_record/connection_adapters/mysql_adapter.rb	/^        def self.register_type(type_id, type)$/;"	F	class:ActiveRecord.ConnectionAdapters.MysqlAdapter.Fields
register_type	lib/active_record/connection_adapters/postgresql/oid.rb	/^        def self.register_type(name, type)$/;"	F	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID
registered_type	lib/active_record/connection_adapters/postgresql/oid.rb	/^        def self.registered_type?(name)$/;"	F	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID
reject_new_record?	lib/active_record/nested_attributes.rb	/^    def reject_new_record?(association_name, attributes)$/;"	f
relation	lib/active_record/core.rb	/^      def relation #:nodoc:$/;"	f	class:ActiveRecord.Core.ClassMethods
relation_for_destroy	lib/active_record/locking/optimistic.rb	/^        def relation_for_destroy$/;"	f	class:ActiveRecord.Locking.Optimistic
relation_for_destroy	lib/active_record/persistence.rb	/^    def relation_for_destroy$/;"	f	class:ActiveRecord.Persistence
release	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def release(conn)$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool
release_connection	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def release_connection(with_id = current_connection_id)$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool
release_savepoint	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def release_savepoint$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
release_savepoint	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def release_savepoint$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
release_savepoint	lib/active_record/connection_adapters/postgresql/database_statements.rb	/^        def release_savepoint$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.DatabaseStatements
release_savepoint	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def release_savepoint$/;"	f	class:ActiveRecord.SQLite3Adapter.ExplainPrettyPrinter
reload	lib/active_record/associations/association.rb	/^      def reload$/;"	f	class:ActiveRecord.Associations.Association
reload	lib/active_record/associations/collection_proxy.rb	/^      def reload$/;"	f	class:ActiveRecord.Associations.CollectionProxy
reload	lib/active_record/attribute_methods/dirty.rb	/^      def reload(*)$/;"	f	class:ActiveRecord.AttributeMethods.Dirty
reload	lib/active_record/autosave_association.rb	/^    def reload(options = nil)$/;"	f	class:ActiveRecord.AutosaveAssociation
reload	lib/active_record/persistence.rb	/^    def reload(options = nil)$/;"	f	class:ActiveRecord.Persistence
reload	lib/active_record/relation.rb	/^    def reload$/;"	f	class:ActiveRecord.Relation
remember_transaction_record_state	lib/active_record/transactions.rb	/^    def remember_transaction_record_state #:nodoc:$/;"	f	class:ActiveRecord.Transactions
remove	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^        def remove$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool.Queue
remove	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def remove(conn)$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool
remove	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def remove(*column_names)$/;"	f	class:ActiveRecord.Table
remove_column	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def remove_column(table_name, *column_names)$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
remove_column	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def remove_column(table_name, *column_names) #:nodoc:$/;"	f	class:ActiveRecord.SQLite3Adapter
remove_column_sql	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def remove_column_sql(table_name, *column_names)$/;"	f	class:ActiveRecord.ConnectionAdapters
remove_connection	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def remove_connection(owner)$/;"	f	class:ActiveRecord.ConnectionHandler
remove_connection	lib/active_record/connection_handling.rb	/^    def remove_connection(klass = self)$/;"	f	class:ActiveRecord.ConnectionHandling
remove_duplicate_results!	lib/active_record/associations/join_dependency.rb	/^      def remove_duplicate_results!(base, records, associations)$/;"	f	class:ActiveRecord.Associations.JoinDependency
remove_index	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def remove_index(options = {})$/;"	f	class:ActiveRecord.Table
remove_index	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def remove_index(table_name, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
remove_index!	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def remove_index!(table_name, index_name) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
remove_index!	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^        def remove_index!(table_name, index_name) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.SchemaStatements.indexes
remove_index!	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def remove_index!(table_name, index_name) #:nodoc:$/;"	f	class:ActiveRecord.SQLite3Adapter
remove_index_sql	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def remove_index_sql(table_name, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters
remove_prefix_and_suffix	lib/active_record/schema_dumper.rb	/^      def remove_prefix_and_suffix(table)$/;"	f	class:ActiveRecord.SchemaDumper.table
remove_records	lib/active_record/associations/collection_association.rb	/^        def remove_records(existing_records, records, method)$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
remove_reference	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def remove_reference(table_name, ref_name, options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
remove_references	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def remove_references(*args)$/;"	f	class:ActiveRecord.Table
remove_target!	lib/active_record/associations/has_one_association.rb	/^        def remove_target!(method)$/;"	f	class:ActiveRecord.Associations.HasOneAssociation
remove_timestamps	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def remove_timestamps$/;"	f	class:ActiveRecord.Table
remove_timestamps	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def remove_timestamps(table_name)$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
remove_timestamps_sql	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def remove_timestamps_sql(table_name)$/;"	f	class:ActiveRecord.ConnectionAdapters
remove_uniq_by_reflection	lib/active_record/associations/join_dependency.rb	/^      def remove_uniq_by_reflection(reflection, records)$/;"	f	class:ActiveRecord.Associations.JoinDependency
rename	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def rename(column_name, new_column_name)$/;"	f	class:ActiveRecord.Table
rename_column	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def rename_column(table_name, column_name, new_column_name)$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
rename_column	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def rename_column(table_name, column_name, new_column_name) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.bulk_change_table
rename_column	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^        def rename_column(table_name, column_name, new_column_name)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.SchemaStatements.indexes
rename_column	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def rename_column(table_name, column_name, new_column_name) #:nodoc:$/;"	f	class:ActiveRecord.SQLite3Adapter
rename_column_sql	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def rename_column_sql(table_name, column_name, new_column_name)$/;"	f	class:ActiveRecord.ConnectionAdapters
rename_index	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def rename_index(table_name, old_name, new_name)$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
rename_index	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^        def rename_index(table_name, old_name, new_name)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.SchemaStatements.indexes
rename_table	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def rename_table(table_name, new_name)$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
rename_table	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def rename_table(table_name, new_name)$/;"	f	class:ActiveRecord.ConnectionAdapters.bulk_change_table
rename_table	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^        def rename_table(name, new_name)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.SchemaStatements.indexes
rename_table	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def rename_table(name, new_name)$/;"	f	class:ActiveRecord.SQLite3Adapter
render	lib/active_record/fixture_set/file.rb	/^        def render(content)$/;"	f	class:ActiveRecord.FixtureSet.File
reorder	lib/active_record/relation/query_methods.rb	/^    def reorder(*args)$/;"	f
reorder!	lib/active_record/relation/query_methods.rb	/^    def reorder!(*args)$/;"	f
replace	lib/active_record/associations/belongs_to_association.rb	/^      def replace(record)$/;"	f	class:ActiveRecord.Associations.BelongsToAssociation
replace	lib/active_record/associations/collection_association.rb	/^      def replace(other_array)$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
replace	lib/active_record/associations/collection_proxy.rb	/^      def replace(other_array)$/;"	f	class:ActiveRecord.Associations.CollectionProxy
replace	lib/active_record/associations/has_one_association.rb	/^      def replace(record, save = true)$/;"	f	class:ActiveRecord.Associations.HasOneAssociation
replace	lib/active_record/associations/has_one_through_association.rb	/^      def replace(record)$/;"	f	class:ActiveRecord.Associations.HasOneThroughAssociation
replace	lib/active_record/associations/singular_association.rb	/^        def replace(record)$/;"	f	class:ActiveRecord.Associations.SingularAssociation
replace_bind_variables	lib/active_record/sanitization.rb	/^      def replace_bind_variables(statement, values) #:nodoc:$/;"	f	class:ActiveRecord.Sanitization.ClassMethods.sanitize_sql_hash_for_assignment
replace_keys	lib/active_record/associations/belongs_to_association.rb	/^        def replace_keys(record)$/;"	f	class:ActiveRecord.Associations.BelongsToAssociation
replace_keys	lib/active_record/associations/belongs_to_polymorphic_association.rb	/^        def replace_keys(record)$/;"	f	class:ActiveRecord.Associations.BelongsToPolymorphicAssociation
replace_named_bind_variables	lib/active_record/sanitization.rb	/^      def replace_named_bind_variables(statement, bind_vars) #:nodoc:$/;"	f	class:ActiveRecord.Sanitization.ClassMethods.sanitize_sql_hash_for_assignment
replace_records	lib/active_record/associations/collection_association.rb	/^        def replace_records(new_target, original_target)$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
require_fixture_classes	lib/active_record/fixtures.rb	/^      def require_fixture_classes(fixture_set_names = nil)$/;"	f	class:ActiveRecord.TestFixtures.ClassMethods
requires_reloading?	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def requires_reloading?$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
requires_reloading?	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def requires_reloading?$/;"	f	class:ActiveRecord.SQLite3Adapter
reset	lib/active_record/associations/association.rb	/^      def reset$/;"	f	class:ActiveRecord.Associations.Association
reset	lib/active_record/associations/belongs_to_association.rb	/^      def reset$/;"	f	class:ActiveRecord.Associations.BelongsToAssociation
reset	lib/active_record/associations/collection_association.rb	/^      def reset$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
reset	lib/active_record/relation.rb	/^    def reset$/;"	f	class:ActiveRecord.Relation
reset!	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def reset!$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
reset!	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def reset!$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
reset!	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def reset!$/;"	f	class:ActiveRecord.PostgreSQLAdapter
reset_cache	lib/active_record/fixtures.rb	/^    def self.reset_cache$/;"	F	class:ActiveRecord.FixtureSet
reset_column_information	lib/active_record/model_schema.rb	/^      def reset_column_information$/;"	f	class:ActiveRecord.ModelSchema
reset_column_information	lib/active_record/reflection.rb	/^      def reset_column_information$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
reset_counters	lib/active_record/counter_cache.rb	/^      def reset_counters(id, *counters)$/;"	f	class:ActiveRecord.CounterCache.ClassMethods
reset_locking_column	lib/active_record/locking/optimistic.rb	/^        def reset_locking_column$/;"	f	class:ActiveRecord.Locking.Optimistic.ClassMethods
reset_pk_sequence!	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^        def reset_pk_sequence!(table, pk = nil, sequence = nil) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.SchemaStatements.indexes
reset_primary_key	lib/active_record/attribute_methods/primary_key.rb	/^        def reset_primary_key #:nodoc:$/;"	f	class:ActiveRecord.AttributeMethods.PrimaryKey.ClassMethods
reset_runtime	lib/active_record/log_subscriber.rb	/^    def self.reset_runtime$/;"	F	class:ActiveRecord.LogSubscriber
reset_scope	lib/active_record/associations/association.rb	/^      def reset_scope$/;"	f	class:ActiveRecord.Associations.Association
reset_sequence!	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def reset_sequence!(table, column, sequence = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
reset_sequence_name	lib/active_record/model_schema.rb	/^      def reset_sequence_name #:nodoc:$/;"	f	class:ActiveRecord.ModelSchema
reset_table_name	lib/active_record/model_schema.rb	/^      def reset_table_name #:nodoc:$/;"	f	class:ActiveRecord.ModelSchema.ClassMethods
reset_transaction	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def reset_transaction #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
resolve_hash_connection	lib/active_record/connection_adapters/connection_specification.rb	/^        def resolve_hash_connection(spec) # :nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionSpecification.Resolver
resolve_string_connection	lib/active_record/connection_adapters/connection_specification.rb	/^        def resolve_string_connection(spec) # :nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionSpecification.Resolver
respond_to?	lib/active_record/attribute_methods.rb	/^    def respond_to?(name, include_private = false)$/;"	f	class:ActiveRecord
respond_to?	lib/active_record/dynamic_matchers.rb	/^    def respond_to?(name, include_private = false)$/;"	f	class:ActiveRecord.DynamicMatchers
respond_to?	lib/active_record/migration/command_recorder.rb	/^      def respond_to?(*args) # :nodoc:$/;"	f	class:ActiveRecord.Migration.CommandRecorder
respond_to?	lib/active_record/relation/delegation.rb	/^    def respond_to?(method, include_private = false)$/;"	f
restore_query_cache_settings	lib/active_record/query_cache.rb	/^    def restore_query_cache_settings(connection_id, enabled)$/;"	f	class:ActiveRecord.QueryCache
restore_transaction_record_state	lib/active_record/transactions.rb	/^    def restore_transaction_record_state(force = false) #:nodoc:$/;"	f	class:ActiveRecord.Transactions
result	lib/active_record/dynamic_matchers.rb	/^      def result$/;"	f	class:Finder
result_as_array	lib/active_record/connection_adapters/postgresql/database_statements.rb	/^        def result_as_array(res) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.DatabaseStatements
retrieve_connection	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def retrieve_connection(klass) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionHandler
retrieve_connection	lib/active_record/connection_handling.rb	/^    def retrieve_connection$/;"	f	class:ActiveRecord.ConnectionHandling
retrieve_connection_pool	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def retrieve_connection_pool(klass)$/;"	f	class:ActiveRecord.ConnectionHandler
reverse_order	lib/active_record/relation/query_methods.rb	/^    def reverse_order$/;"	f
reverse_order!	lib/active_record/relation/query_methods.rb	/^    def reverse_order!$/;"	f
reverse_sql_order	lib/active_record/relation/query_methods.rb	/^    def reverse_sql_order(order_query)$/;"	f
revert	lib/active_record/migration.rb	/^    def revert$/;"	f	class:ActiveRecord
reverting?	lib/active_record/migration.rb	/^    def reverting?$/;"	f	class:ActiveRecord
rollback	lib/active_record/connection_adapters/abstract/transaction.rb	/^      def rollback$/;"	f	class:ActiveRecord.ConnectionAdapters.OpenTransaction
rollback	lib/active_record/migration.rb	/^      def rollback(migrations_paths, steps=1)$/;"	f	class:Migrator
rollback_active_record_state!	lib/active_record/transactions.rb	/^    def rollback_active_record_state!$/;"	f	class:ActiveRecord.Transactions
rollback_db_transaction	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def rollback_db_transaction() end$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
rollback_db_transaction	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def rollback_db_transaction #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
rollback_db_transaction	lib/active_record/connection_adapters/postgresql/database_statements.rb	/^        def rollback_db_transaction$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.DatabaseStatements
rollback_db_transaction	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def rollback_db_transaction #:nodoc:$/;"	f	class:ActiveRecord.SQLite3Adapter.ExplainPrettyPrinter
rollback_records	lib/active_record/connection_adapters/abstract/transaction.rb	/^      def rollback_records$/;"	f	class:ActiveRecord.ConnectionAdapters.OpenTransaction
rollback_to_savepoint	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def rollback_to_savepoint$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
rollback_to_savepoint	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def rollback_to_savepoint$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
rollback_to_savepoint	lib/active_record/connection_adapters/postgresql/database_statements.rb	/^        def rollback_to_savepoint$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.DatabaseStatements
rollback_to_savepoint	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def rollback_to_savepoint$/;"	f	class:ActiveRecord.SQLite3Adapter.ExplainPrettyPrinter
rollback_transaction	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def rollback_transaction #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
rolledback!	lib/active_record/transactions.rb	/^    def rolledback!(force_restore_state = false) #:nodoc:$/;"	f	class:ActiveRecord.Transactions
root	lib/active_record/tasks/sqlite_database_tasks.rb	/^      def root$/;"	f	class:ActiveRecord.Tasks.SQLiteDatabaseTasks
root_configuration_without_database	lib/active_record/tasks/mysql_database_tasks.rb	/^      def root_configuration_without_database$/;"	f	class:ActiveRecord.Tasks.MySQLDatabaseTasks
root_password	lib/active_record/tasks/mysql_database_tasks.rb	/^      def root_password$/;"	f	class:ActiveRecord.Tasks.MySQLDatabaseTasks
round_usec	lib/active_record/attribute_methods/time_zone_conversion.rb	/^      def round_usec(value)$/;"	f	class:ActiveRecord.AttributeMethods
rows	lib/active_record/fixture_set/file.rb	/^        def rows$/;"	f	class:ActiveRecord.FixtureSet.File
run	lib/active_record/associations/preloader.rb	/^      def run$/;"	f	class:ActiveRecord.Associations.Preloader
run	lib/active_record/associations/preloader/association.rb	/^        def run$/;"	f	class:ActiveRecord.Associations.Preloader.Association
run	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^        def run$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool.Reaper
run	lib/active_record/migration.rb	/^      def run(direction, migrations_paths, target_version)$/;"	f	class:Migrator
run	lib/active_record/migration.rb	/^    def run$/;"	f
run_in_transaction?	lib/active_record/fixtures.rb	/^    def run_in_transaction?$/;"	f	class:ActiveRecord.TestFixtures
runnable	lib/active_record/migration.rb	/^    def runnable$/;"	f
runtime	lib/active_record/log_subscriber.rb	/^    def self.runtime$/;"	F	class:ActiveRecord.LogSubscriber
runtime	lib/active_record/log_subscriber.rb	/^    def self.runtime=(value)$/;"	F	class:ActiveRecord.LogSubscriber
sanitize	lib/active_record/sanitization.rb	/^      def sanitize(object) #:nodoc:$/;"	f	class:ActiveRecord.Sanitization.ClassMethods
sanitize_limit	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def sanitize_limit(limit)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
sanitize_sql_array	lib/active_record/sanitization.rb	/^      def sanitize_sql_array(ary)$/;"	f	class:ActiveRecord.Sanitization.ClassMethods.sanitize_sql_hash_for_assignment
sanitize_sql_for_assignment	lib/active_record/sanitization.rb	/^      def sanitize_sql_for_assignment(assignments)$/;"	f	class:ActiveRecord.Sanitization.ClassMethods
sanitize_sql_for_conditions	lib/active_record/sanitization.rb	/^      def sanitize_sql_for_conditions(condition, table_name = self.table_name)$/;"	f	class:ActiveRecord.Sanitization.ClassMethods
sanitize_sql_hash_for_assignment	lib/active_record/sanitization.rb	/^      def sanitize_sql_hash_for_assignment(attrs)$/;"	f	class:ActiveRecord.Sanitization.ClassMethods
sanitize_sql_hash_for_conditions	lib/active_record/sanitization.rb	/^      def sanitize_sql_hash_for_conditions(attrs, default_table_name = self.table_name)$/;"	f	class:ActiveRecord.Sanitization.ClassMethods
save	lib/active_record/attribute_methods/dirty.rb	/^      def save(*)$/;"	f	class:ActiveRecord.AttributeMethods.Dirty
save	lib/active_record/persistence.rb	/^    def save(*)$/;"	f	class:ActiveRecord.Persistence
save	lib/active_record/transactions.rb	/^    def save(*) #:nodoc:$/;"	f	class:ActiveRecord.Transactions
save	lib/active_record/validations.rb	/^    def save(options={})$/;"	f	class:ActiveRecord.Validations
save!	lib/active_record/attribute_methods/dirty.rb	/^      def save!(*)$/;"	f	class:ActiveRecord.AttributeMethods.Dirty
save!	lib/active_record/persistence.rb	/^    def save!(*)$/;"	f	class:ActiveRecord.Persistence
save!	lib/active_record/transactions.rb	/^    def save!(*) #:nodoc:$/;"	f	class:ActiveRecord.Transactions
save!	lib/active_record/validations.rb	/^    def save!(options={})$/;"	f	class:ActiveRecord.Validations
save_belongs_to_association	lib/active_record/autosave_association.rb	/^    def save_belongs_to_association(reflection)$/;"	f	class:ActiveRecord.AutosaveAssociation
save_collection_association	lib/active_record/autosave_association.rb	/^    def save_collection_association(reflection)$/;"	f	class:ActiveRecord.AutosaveAssociation
save_has_one_association	lib/active_record/autosave_association.rb	/^    def save_has_one_association(reflection)$/;"	f	class:ActiveRecord.AutosaveAssociation
save_through_record	lib/active_record/associations/has_many_through_association.rb	/^        def save_through_record(record)$/;"	f	class:ActiveRecord.Associations.HasManyThroughAssociation
say	lib/active_record/migration.rb	/^    def say(message, subitem=false)$/;"	f	class:ActiveRecord
say_with_time	lib/active_record/migration.rb	/^    def say_with_time(message)$/;"	f	class:ActiveRecord
schema_cache=	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def schema_cache=(cache)$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
schema_exists?	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^        def schema_exists?(name)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.SchemaStatements
schema_migrations_table_name	lib/active_record/migration.rb	/^      def schema_migrations_table_name$/;"	f	class:Migrator
schema_names	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^        def schema_names$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.SchemaStatements.indexes
schema_search_path	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^        def schema_search_path$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.SchemaStatements.indexes
schema_search_path=	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^        def schema_search_path=(schema_csv)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.SchemaStatements.indexes
scope	lib/active_record/associations/association.rb	/^      def scope$/;"	f	class:ActiveRecord.Associations.Association
scope	lib/active_record/associations/association_scope.rb	/^      def scope$/;"	f	class:ActiveRecord.Associations.AssociationScope
scope	lib/active_record/associations/collection_association.rb	/^      def scope(opts = {})$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
scope	lib/active_record/associations/collection_proxy.rb	/^      def scope$/;"	f	class:ActiveRecord.Associations.CollectionProxy
scope	lib/active_record/associations/preloader/association.rb	/^        def scope$/;"	f	class:ActiveRecord.Associations.Preloader.Association
scope	lib/active_record/scoping/named.rb	/^        def scope(name, body, &block)$/;"	f	class:ActiveRecord.Scoping.Named.ClassMethods
scope_attributes	lib/active_record/scoping/named.rb	/^        def scope_attributes # :nodoc:$/;"	f	class:ActiveRecord.Scoping.Named.ClassMethods
scope_attributes?	lib/active_record/scoping/named.rb	/^        def scope_attributes? # :nodoc:$/;"	f	class:ActiveRecord.Scoping.Named.ClassMethods
scope_chain	lib/active_record/associations/join_dependency/join_association.rb	/^        def scope_chain$/;"	f	class:ActiveRecord.Associations.JoinDependency.JoinAssociation
scope_chain	lib/active_record/reflection.rb	/^      def scope_chain$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
scope_chain	lib/active_record/reflection.rb	/^      def scope_chain$/;"	f	class:ActiveRecord.Reflection.ThroughReflection
scope_for_create	lib/active_record/relation.rb	/^    def scope_for_create$/;"	f	class:ActiveRecord.Relation
scoped	lib/active_record/associations/association.rb	/^      def scoped$/;"	f	class:ActiveRecord.Associations.Association
scoping	lib/active_record/associations/collection_proxy.rb	/^      def scoping$/;"	f	class:ActiveRecord.Associations.CollectionProxy
scoping	lib/active_record/relation.rb	/^    def scoping$/;"	f	class:ActiveRecord.Relation
select	lib/active_record/associations/collection_association.rb	/^      def select(select = nil)$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
select	lib/active_record/associations/collection_proxy.rb	/^      def select(select = nil, &block)$/;"	f	class:ActiveRecord.Associations.CollectionProxy
select	lib/active_record/connection_adapters/abstract/database_statements.rb	/^        def select(sql, name = nil, binds = [])$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
select	lib/active_record/connection_adapters/mysql2_adapter.rb	/^      def select(sql, name = nil, binds = [])$/;"	f	class:ActiveRecord.ConnectionAdapters.Mysql2Adapter
select	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def select(sql, name = nil, binds = [])$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
select	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def select(sql, name = nil, binds = [])$/;"	f	class:ActiveRecord.PostgreSQLAdapter
select	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^        def select(sql, name = nil, binds = []) #:nodoc:$/;"	f	class:ActiveRecord.SQLite3Adapter
select	lib/active_record/relation/query_methods.rb	/^    def select(*fields)$/;"	f
select!	lib/active_record/relation/query_methods.rb	/^    def select!(*fields)$/;"	f
select_all	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def select_all(arel, name = nil, binds = [])$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
select_all	lib/active_record/connection_adapters/abstract/query_cache.rb	/^      def select_all(arel, name = nil, binds = [])$/;"	f	class:ActiveRecord
select_for_count	lib/active_record/relation/calculations.rb	/^    def select_for_count$/;"	f	class:ActiveRecord.execute_grouped_calculation
select_one	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def select_one(arel, name = nil, binds = [])$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
select_raw	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def select_raw(sql, name = nil)$/;"	f	class:ActiveRecord.PostgreSQLAdapter
select_rows	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def select_rows(sql, name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
select_rows	lib/active_record/connection_adapters/mysql2_adapter.rb	/^      def select_rows(sql, name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.Mysql2Adapter
select_rows	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def select_rows(sql, name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
select_rows	lib/active_record/connection_adapters/postgresql/database_statements.rb	/^        def select_rows(sql, name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.DatabaseStatements
select_rows	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def select_rows(sql, name = nil)$/;"	f	class:ActiveRecord.SQLite3Adapter.ExplainPrettyPrinter
select_value	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def select_value(arel, name = nil, binds = [])$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
select_values	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def select_values(arel, name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
sequence_name	lib/active_record/model_schema.rb	/^      def sequence_name$/;"	f	class:ActiveRecord.ModelSchema
sequence_name=	lib/active_record/model_schema.rb	/^      def sequence_name=(value)$/;"	f	class:ActiveRecord.ModelSchema
serial_sequence	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^        def serial_sequence(table, column)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.SchemaStatements.indexes
serializable_hash	lib/active_record/serialization.rb	/^    def serializable_hash(options = nil)$/;"	f	class:ActiveRecord.Serialization
serialize	lib/active_record/attribute_methods/serialization.rb	/^        def serialize$/;"	f	class:ActiveRecord.AttributeMethods.Attribute
serialize	lib/active_record/attribute_methods/serialization.rb	/^        def serialize(attr_name, class_name = Object)$/;"	f	class:ActiveRecord.AttributeMethods.Serialization.ClassMethods
serialized_attributes	lib/active_record/attribute_methods/serialization.rb	/^      def serialized_attributes$/;"	f	class:ActiveRecord.AttributeMethods
serialized_value	lib/active_record/attribute_methods/serialization.rb	/^        def serialized_value$/;"	f	class:ActiveRecord.AttributeMethods.Attribute
session_auth=	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def session_auth=(user)$/;"	f	class:ActiveRecord.PostgreSQLAdapter
set_fixture_class	lib/active_record/fixtures.rb	/^      def set_fixture_class(class_names = {})$/;"	f	class:ActiveRecord.TestFixtures.ClassMethods
set_index_names	lib/rails/generators/active_record/migration/migration_generator.rb	/^      def set_index_names$/;"	f	class:ActiveRecord.Generators.MigrationGenerator
set_inverse_instance	lib/active_record/associations/association.rb	/^      def set_inverse_instance(record)$/;"	f	class:ActiveRecord.Associations.Association
set_local_assigns!	lib/rails/generators/active_record/migration/migration_generator.rb	/^      def set_local_assigns!$/;"	f	class:ActiveRecord.Generators.MigrationGenerator
set_new_record	lib/active_record/associations/has_one_association.rb	/^        def set_new_record(record)$/;"	f	class:ActiveRecord.Associations.HasOneAssociation
set_new_record	lib/active_record/associations/singular_association.rb	/^        def set_new_record(record)$/;"	f	class:ActiveRecord.Associations.SingularAssociation
set_owner_attributes	lib/active_record/associations/association.rb	/^        def set_owner_attributes(record)$/;"	f	class:ActiveRecord.Associations.Association
set_psql_env	lib/active_record/tasks/postgresql_database_tasks.rb	/^      def set_psql_env$/;"	f	class:ActiveRecord.Tasks.PostgreSQLDatabaseTasks
set_standard_conforming_strings	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def set_standard_conforming_strings$/;"	f	class:ActiveRecord.PostgreSQLAdapter
set_target_and_inverse	lib/active_record/associations/join_dependency.rb	/^      def set_target_and_inverse(join_part, association, record)$/;"	f	class:ActiveRecord.Associations.JoinDependency
setup	lib/active_record/validations/uniqueness.rb	/^      def setup(klass)$/;"	f	class:ActiveRecord.Validations.UniquenessValidator
setup_fixture_accessors	lib/active_record/fixtures.rb	/^      def setup_fixture_accessors(fixture_set_names = nil)$/;"	f	class:ActiveRecord.TestFixtures.ClassMethods
setup_fixtures	lib/active_record/fixtures.rb	/^    def setup_fixtures$/;"	f	class:ActiveRecord.TestFixtures
should_record_timestamps?	lib/active_record/timestamp.rb	/^    def should_record_timestamps?$/;"	f	class:ActiveRecord.Timestamp
show_deprecation_warnings	lib/active_record/associations/builder/collection_association.rb	/^    def show_deprecation_warnings$/;"	f	class:ActiveRecord.CollectionAssociation
show_deprecation_warnings	lib/active_record/associations/builder/has_and_belongs_to_many.rb	/^    def show_deprecation_warnings$/;"	f	class:ActiveRecord.HasAndBelongsToMany
show_variable	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def show_variable(name)$/;"	f	class:ActiveRecord.ConnectionAdapters.bulk_change_table
signature	lib/active_record/dynamic_matchers.rb	/^      def signature$/;"	f	class:Finder
silence_auto_explain	lib/active_record/explain.rb	/^    def silence_auto_explain$/;"	f	class:ActiveRecord.Explain.exec_explain
simplified_type	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^        def simplified_type(field_type)$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter.Column
simplified_type	lib/active_record/connection_adapters/column.rb	/^        def simplified_type(field_type)$/;"	f	class:ActiveRecord.ConnectionAdapters
simplified_type	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def simplified_type(field_type)$/;"	f	class:ActiveRecord.ConnectionAdapters
size	lib/active_record/associations/collection_association.rb	/^      def size$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
size	lib/active_record/associations/collection_proxy.rb	/^      def size$/;"	f	class:ActiveRecord.Associations.CollectionProxy
size	lib/active_record/associations/has_many_through_association.rb	/^      def size$/;"	f	class:ActiveRecord.Associations.HasManyThroughAssociation
size	lib/active_record/fixtures.rb	/^    def size$/;"	f	class:ActiveRecord.FixtureSet
size	lib/active_record/null_relation.rb	/^    def size$/;"	f	class:ActiveRecord.NullRelation
size	lib/active_record/relation.rb	/^    def size$/;"	f	class:ActiveRecord.Relation
slice	lib/active_record/core.rb	/^    def slice(*methods)$/;"	f	class:ActiveRecord
source_macro	lib/active_record/reflection.rb	/^      def source_macro$/;"	f	class:ActiveRecord.Reflection.ThroughReflection
source_options	lib/active_record/reflection.rb	/^      def source_options$/;"	f	class:ActiveRecord.Reflection.ThroughReflection
source_reflection	lib/active_record/associations/preloader/through_association.rb	/^        def source_reflection$/;"	f	class:ActiveRecord.Associations.Preloader.ThroughAssociation
source_reflection	lib/active_record/reflection.rb	/^      def source_reflection$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
source_reflection	lib/active_record/reflection.rb	/^      def source_reflection$/;"	f	class:ActiveRecord.Reflection.ThroughReflection
source_reflection_names	lib/active_record/reflection.rb	/^      def source_reflection_names$/;"	f	class:ActiveRecord.Reflection.ThroughReflection
spawn	lib/active_record/relation/spawn_methods.rb	/^    def spawn #:nodoc:$/;"	f	class:ActiveRecord.SpawnMethods
spec	lib/active_record/connection_adapters/connection_specification.rb	/^        def spec$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionSpecification.Resolver
sql	lib/active_record/log_subscriber.rb	/^    def sql(event)$/;"	f	class:ActiveRecord.LogSubscriber
sql_for_insert	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def sql_for_insert(sql, pk, id_value, sequence_name, binds)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
sql_for_insert	lib/active_record/connection_adapters/postgresql/database_statements.rb	/^        def sql_for_insert(sql, pk, id_value, sequence_name, binds)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.DatabaseStatements
sql_key	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def sql_key(sql)$/;"	f	class:ActiveRecord.PostgreSQLAdapter
sql_query_length	lib/active_record/connection_adapters/abstract/database_limits.rb	/^      def sql_query_length$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseLimits
sql_type	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def sql_type$/;"	f	class:ActiveRecord.ConnectionAdapters.ColumnDefinition
sqlite3_connection	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^    def sqlite3_connection(config) # :nodoc:$/;"	f	class:ActiveRecord.ConnectionHandling
sqlite_version	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^        def sqlite_version$/;"	f	class:ActiveRecord
stale_state	lib/active_record/associations/association.rb	/^        def stale_state$/;"	f	class:ActiveRecord.Associations.Association
stale_state	lib/active_record/associations/belongs_to_association.rb	/^        def stale_state$/;"	f	class:ActiveRecord.Associations.BelongsToAssociation
stale_state	lib/active_record/associations/belongs_to_polymorphic_association.rb	/^        def stale_state$/;"	f	class:ActiveRecord.Associations.BelongsToPolymorphicAssociation
stale_state	lib/active_record/associations/through_association.rb	/^        def stale_state$/;"	f	class:ActiveRecord.Associations.ThroughAssociation
stale_target?	lib/active_record/associations/association.rb	/^      def stale_target?$/;"	f	class:ActiveRecord.Associations.Association
start	lib/active_record/explain_subscriber.rb	/^    def start(name, id, payload)$/;"	f	class:ActiveRecord.ExplainSubscriber
start	lib/active_record/migration.rb	/^    def start$/;"	f
sti_name	lib/active_record/inheritance.rb	/^      def sti_name$/;"	f	class:ActiveRecord.Inheritance.ClassMethods
store	lib/active_record/store.rb	/^      def store(store_attribute, options = {})$/;"	f	class:ActiveRecord.Store.ClassMethods
store_accessor	lib/active_record/store.rb	/^      def store_accessor(store_attribute, *keys)$/;"	f	class:ActiveRecord.Store.ClassMethods
strict_mode?	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def strict_mode?$/;"	f	class:ActiveRecord.ConnectionAdapters
string_to_array	lib/active_record/connection_adapters/postgresql/cast.rb	/^        def string_to_array(string, oid)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLColumn.Cast
string_to_binary	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def string_to_binary(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.ColumnDefinition
string_to_binary	lib/active_record/connection_adapters/column.rb	/^        def string_to_binary(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
string_to_binary	lib/active_record/connection_adapters/column.rb	/^      def string_to_binary(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
string_to_cidr	lib/active_record/connection_adapters/postgresql/cast.rb	/^        def string_to_cidr(string)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLColumn.Cast
string_to_date	lib/active_record/connection_adapters/mysql_adapter.rb	/^        def self.string_to_date(v)$/;"	F	class:ActiveRecord.ConnectionAdapters.MysqlAdapter.Column
string_to_dummy_time	lib/active_record/connection_adapters/column.rb	/^        def string_to_dummy_time(string)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
string_to_dummy_time	lib/active_record/connection_adapters/mysql_adapter.rb	/^        def self.string_to_dummy_time(v)$/;"	F	class:ActiveRecord.ConnectionAdapters.MysqlAdapter.Column
string_to_hstore	lib/active_record/connection_adapters/postgresql/cast.rb	/^        def string_to_hstore(string)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLColumn.Cast
string_to_json	lib/active_record/connection_adapters/postgresql/cast.rb	/^        def string_to_json(string)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLColumn.Cast
string_to_time	lib/active_record/connection_adapters/column.rb	/^        def string_to_time(string)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
string_to_time	lib/active_record/connection_adapters/mysql_adapter.rb	/^        def self.string_to_time(value)$/;"	F	class:ActiveRecord.ConnectionAdapters.MysqlAdapter.Column
string_to_time	lib/active_record/connection_adapters/postgresql/cast.rb	/^        def string_to_time(string)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLColumn.Cast
structure_dump	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def structure_dump$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
structure_dump	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def structure_dump #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
structure_dump	lib/active_record/tasks/database_tasks.rb	/^      def structure_dump(*arguments)$/;"	f	class:ActiveRecord.Tasks
structure_dump	lib/active_record/tasks/mysql_database_tasks.rb	/^      def structure_dump(filename)$/;"	f	class:ActiveRecord.Tasks.MySQLDatabaseTasks
structure_dump	lib/active_record/tasks/postgresql_database_tasks.rb	/^      def structure_dump(filename)$/;"	f	class:ActiveRecord.Tasks.PostgreSQLDatabaseTasks
structure_dump	lib/active_record/tasks/sqlite_database_tasks.rb	/^      def structure_dump(filename)$/;"	f	class:ActiveRecord.Tasks.SQLiteDatabaseTasks
structure_load	lib/active_record/tasks/database_tasks.rb	/^      def structure_load(*arguments)$/;"	f	class:ActiveRecord.Tasks
structure_load	lib/active_record/tasks/mysql_database_tasks.rb	/^      def structure_load(filename)$/;"	f	class:ActiveRecord.Tasks.MySQLDatabaseTasks
structure_load	lib/active_record/tasks/postgresql_database_tasks.rb	/^      def structure_load(filename)$/;"	f	class:ActiveRecord.Tasks.PostgreSQLDatabaseTasks
structure_load	lib/active_record/tasks/sqlite_database_tasks.rb	/^      def structure_load(filename)$/;"	f	class:ActiveRecord.Tasks.SQLiteDatabaseTasks
subquery_for	lib/active_record/connection_adapters/abstract/database_statements.rb	/^        def subquery_for(key, select)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
subquery_for	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def subquery_for(key, select)$/;"	f	class:ActiveRecord.ConnectionAdapters
substitute_at	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def substitute_at(column, index)$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
substitute_at	lib/active_record/connection_adapters/postgresql/database_statements.rb	/^        def substitute_at(column, index)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.DatabaseStatements
suffix	lib/active_record/dynamic_matchers.rb	/^        def suffix$/;"	f	class:ActiveRecord.DynamicMatchers.Method
suffix	lib/active_record/dynamic_matchers.rb	/^      def self.suffix$/;"	F	class:FindByBang
sum	lib/active_record/associations/collection_association.rb	/^      def sum(*args)$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
sum	lib/active_record/null_relation.rb	/^    def sum(*)$/;"	f	class:ActiveRecord.NullRelation
sum	lib/active_record/relation/calculations.rb	/^    def sum(*args)$/;"	f	class:ActiveRecord.Calculations
supports_add_column?	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def supports_add_column?$/;"	f	class:ActiveRecord.SQLite3Adapter
supports_autoincrement?	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def supports_autoincrement? #:nodoc:$/;"	f	class:ActiveRecord.SQLite3Adapter
supports_bulk_alter?	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def supports_bulk_alter?$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
supports_bulk_alter?	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def supports_bulk_alter? #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
supports_count_distinct?	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def supports_count_distinct?$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
supports_count_distinct?	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def supports_count_distinct? #:nodoc:$/;"	f	class:ActiveRecord.SQLite3Adapter
supports_ddl_transactions?	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def supports_ddl_transactions?$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
supports_ddl_transactions?	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def supports_ddl_transactions?$/;"	f	class:ActiveRecord.PostgreSQLAdapter
supports_ddl_transactions?	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def supports_ddl_transactions?$/;"	f	class:ActiveRecord.SQLite3Adapter
supports_disable_referential_integrity?	lib/active_record/connection_adapters/postgresql/referential_integrity.rb	/^        def supports_disable_referential_integrity? #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.ReferentialIntegrity
supports_explain?	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def supports_explain?$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
supports_explain?	lib/active_record/connection_adapters/mysql2_adapter.rb	/^      def supports_explain?$/;"	f	class:ActiveRecord.ConnectionAdapters.Mysql2Adapter
supports_explain?	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def supports_explain?$/;"	f	class:ActiveRecord.PostgreSQLAdapter
supports_explain?	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def supports_explain?$/;"	f	class:ActiveRecord.SQLite3Adapter
supports_index_sort_order?	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def supports_index_sort_order?$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
supports_index_sort_order?	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def supports_index_sort_order?$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
supports_index_sort_order?	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def supports_index_sort_order?$/;"	f	class:ActiveRecord.PostgreSQLAdapter
supports_index_sort_order?	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def supports_index_sort_order?$/;"	f	class:ActiveRecord.SQLite3Adapter
supports_insert_with_returning?	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def supports_insert_with_returning?$/;"	f	class:ActiveRecord.PostgreSQLAdapter
supports_migrations?	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def supports_migrations?$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
supports_migrations?	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def supports_migrations?$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
supports_migrations?	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def supports_migrations?$/;"	f	class:ActiveRecord.PostgreSQLAdapter
supports_migrations?	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def supports_migrations? #:nodoc:$/;"	f	class:ActiveRecord.SQLite3Adapter
supports_partial_index?	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def supports_partial_index?$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
supports_partial_index?	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def supports_partial_index?$/;"	f	class:ActiveRecord.PostgreSQLAdapter
supports_primary_key?	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def supports_primary_key?$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
supports_primary_key?	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def supports_primary_key?$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
supports_primary_key?	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def supports_primary_key? #:nodoc:$/;"	f	class:ActiveRecord.PostgreSQLAdapter
supports_primary_key?	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def supports_primary_key? #:nodoc:$/;"	f	class:ActiveRecord.SQLite3Adapter
supports_savepoints?	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def supports_savepoints?$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
supports_savepoints?	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def supports_savepoints?$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
supports_savepoints?	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def supports_savepoints?$/;"	f	class:ActiveRecord.PostgreSQLAdapter
supports_savepoints?	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def supports_savepoints?$/;"	f	class:ActiveRecord.SQLite3Adapter
supports_statement_cache?	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def supports_statement_cache?$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
supports_statement_cache?	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def supports_statement_cache?$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
supports_statement_cache?	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def supports_statement_cache?$/;"	f	class:ActiveRecord.PostgreSQLAdapter
supports_statement_cache?	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def supports_statement_cache?$/;"	f	class:ActiveRecord.SQLite3Adapter
supports_transaction_isolation?	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def supports_transaction_isolation?$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
supports_transaction_isolation?	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def supports_transaction_isolation?$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
supports_transaction_isolation?	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def supports_transaction_isolation?$/;"	f	class:ActiveRecord.PostgreSQLAdapter
supports_views?	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def supports_views?$/;"	f	class:ActiveRecord.ConnectionAdapters
suppress_messages	lib/active_record/migration.rb	/^    def suppress_messages$/;"	f	class:ActiveRecord
symbolized_base_class	lib/active_record/inheritance.rb	/^      def symbolized_base_class$/;"	f	class:ActiveRecord.Inheritance.ClassMethods
symbolized_sti_name	lib/active_record/inheritance.rb	/^      def symbolized_sti_name$/;"	f	class:ActiveRecord.Inheritance.ClassMethods
synchronize	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^        def synchronize(&block)$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool.Queue
table	lib/active_record/associations/join_dependency/join_association.rb	/^        def table$/;"	f	class:ActiveRecord.Associations.JoinDependency.JoinAssociation
table	lib/active_record/associations/join_dependency/join_base.rb	/^        def table$/;"	f	class:ActiveRecord.Associations.JoinDependency.JoinBase
table	lib/active_record/associations/join_dependency/join_part.rb	/^        def table$/;"	f	class:ActiveRecord.Associations.JoinDependency.JoinPart
table	lib/active_record/associations/preloader/association.rb	/^        def table$/;"	f	class:ActiveRecord.Associations.Preloader.Association
table	lib/active_record/schema_dumper.rb	/^      def table(table, stream)$/;"	f	class:ActiveRecord.SchemaDumper
table_alias_for	lib/active_record/associations/join_helper.rb	/^      def table_alias_for(reflection, join = false)$/;"	f	class:ActiveRecord.Associations.JoinHelper
table_alias_for	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def table_alias_for(table_name)$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
table_alias_length	lib/active_record/connection_adapters/abstract/database_limits.rb	/^      def table_alias_length$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseLimits
table_alias_length	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def table_alias_length$/;"	f	class:ActiveRecord.PostgreSQLAdapter
table_definition	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def table_definition$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
table_definition	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def table_definition$/;"	f	class:ActiveRecord.PostgreSQLAdapter
table_exists?	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def table_exists?(table_name)$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
table_exists?	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def table_exists?(name)$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
table_exists?	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^        def table_exists?(name)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.SchemaStatements
table_exists?	lib/active_record/connection_adapters/schema_cache.rb	/^      def table_exists?(name)$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaCache
table_exists?	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def table_exists?(table_name)$/;"	f	class:ActiveRecord.SQLite3Adapter.ExplainPrettyPrinter
table_exists?	lib/active_record/model_schema.rb	/^      def table_exists?$/;"	f	class:ActiveRecord.ModelSchema
table_name	lib/active_record/model_schema.rb	/^      def table_name$/;"	f	class:ActiveRecord.ModelSchema.ClassMethods
table_name	lib/active_record/reflection.rb	/^      def table_name$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
table_name	lib/active_record/schema_migration.rb	/^    def self.table_name$/;"	F	class:ActiveRecord.SchemaMigration
table_name=	lib/active_record/model_schema.rb	/^      def table_name=(value)$/;"	f	class:ActiveRecord.ModelSchema.ClassMethods
table_name_for	lib/active_record/associations/association_scope.rb	/^      def table_name_for(reflection)$/;"	f	class:ActiveRecord.Associations.AssociationScope
table_name_for	lib/active_record/associations/join_helper.rb	/^      def table_name_for(reflection)$/;"	f	class:ActiveRecord.Associations.JoinHelper
table_name_length	lib/active_record/connection_adapters/abstract/database_limits.rb	/^      def table_name_length$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseLimits
table_name_prefix	lib/rails/generators/active_record/model/templates/module.rb	/^  def self.table_name_prefix$/;"	F
table_rows	lib/active_record/fixtures.rb	/^    def table_rows$/;"	f	class:ActiveRecord.FixtureSet
table_structure	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^        def table_structure(table_name)$/;"	f	class:ActiveRecord.SQLite3Adapter
tables	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def tables(name = nil, database = nil, like = nil) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
tables	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^        def tables(name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.SchemaStatements
tables	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def tables(name = nil, table_name = nil) #:nodoc:$/;"	f	class:ActiveRecord.SQLite3Adapter.ExplainPrettyPrinter
tables	lib/active_record/schema_dumper.rb	/^      def tables(stream)$/;"	f	class:ActiveRecord.SchemaDumper
tables_in_string	lib/active_record/relation.rb	/^    def tables_in_string(string)$/;"	f	class:ActiveRecord.Relation
take	lib/active_record/relation/finder_methods.rb	/^    def take(limit = nil)$/;"	f	class:ActiveRecord.FinderMethods
take!	lib/active_record/relation/finder_methods.rb	/^    def take!$/;"	f	class:ActiveRecord.FinderMethods
target	lib/active_record/associations/collection_proxy.rb	/^      def target$/;"	f	class:ActiveRecord.Associations.CollectionProxy
target	lib/active_record/migration.rb	/^    def target$/;"	f
target=	lib/active_record/associations/association.rb	/^      def target=(target)$/;"	f	class:ActiveRecord.Associations.Association
target_id	lib/active_record/associations/belongs_to_association.rb	/^        def target_id$/;"	f	class:ActiveRecord.Associations.BelongsToAssociation
target_reflection_has_associated_record?	lib/active_record/associations/has_many_through_association.rb	/^        def target_reflection_has_associated_record?$/;"	f	class:ActiveRecord.Associations.HasManyThroughAssociation
target_scope	lib/active_record/associations/association.rb	/^      def target_scope$/;"	f	class:ActiveRecord.Associations.Association
target_scope	lib/active_record/associations/through_association.rb	/^        def target_scope$/;"	f	class:ActiveRecord.Associations.ThroughAssociation
teardown	lib/active_record/test_case.rb	/^    def teardown$/;"	f	class:ActiveRecord.TestCase
teardown_fixtures	lib/active_record/fixtures.rb	/^    def teardown_fixtures$/;"	f	class:ActiveRecord.TestFixtures
text?	lib/active_record/connection_adapters/column.rb	/^      def text?$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
through_association	lib/active_record/associations/has_many_through_association.rb	/^        def through_association$/;"	f	class:ActiveRecord.Associations.HasManyThroughAssociation
through_options	lib/active_record/reflection.rb	/^      def through_options$/;"	f	class:ActiveRecord.Reflection.ThroughReflection
through_records_by_owner	lib/active_record/associations/preloader/through_association.rb	/^        def through_records_by_owner$/;"	f	class:ActiveRecord.Associations.Preloader.ThroughAssociation
through_records_for	lib/active_record/associations/has_many_through_association.rb	/^        def through_records_for(record)$/;"	f	class:ActiveRecord.Associations.HasManyThroughAssociation
through_reflection	lib/active_record/associations/preloader/through_association.rb	/^        def through_reflection$/;"	f	class:ActiveRecord.Associations.Preloader.ThroughAssociation
through_reflection	lib/active_record/reflection.rb	/^      def through_reflection$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
through_reflection	lib/active_record/reflection.rb	/^      def through_reflection$/;"	f	class:ActiveRecord.Reflection.ThroughReflection
through_scope	lib/active_record/associations/preloader/through_association.rb	/^        def through_scope$/;"	f	class:ActiveRecord.Associations.Preloader.ThroughAssociation.through_records_by_owner
timestamp_attributes_for_create	lib/active_record/timestamp.rb	/^    def timestamp_attributes_for_create$/;"	f	class:ActiveRecord.Timestamp
timestamp_attributes_for_create_in_model	lib/active_record/timestamp.rb	/^    def timestamp_attributes_for_create_in_model$/;"	f	class:ActiveRecord.Timestamp
timestamp_attributes_for_update	lib/active_record/timestamp.rb	/^    def timestamp_attributes_for_update$/;"	f	class:ActiveRecord.Timestamp
timestamp_attributes_for_update_in_model	lib/active_record/timestamp.rb	/^    def timestamp_attributes_for_update_in_model$/;"	f	class:ActiveRecord.Timestamp
timestamp_column_names	lib/active_record/fixtures.rb	/^      def timestamp_column_names$/;"	f	class:ActiveRecord.FixtureSet
timestamps	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def timestamps$/;"	f	class:ActiveRecord.Table
timestamps	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def timestamps(*args)$/;"	f	class:ActiveRecord.ConnectionAdapters
to_a	lib/active_record/relation.rb	/^    def to_a$/;"	f	class:ActiveRecord.Relation
to_ary	lib/active_record/associations/collection_proxy.rb	/^      def to_ary$/;"	f	class:ActiveRecord.Associations.CollectionProxy
to_ary	lib/active_record/core.rb	/^    def to_ary # :nodoc:$/;"	f	class:ActiveRecord
to_ary	lib/active_record/result.rb	/^    def to_ary$/;"	f	class:ActiveRecord.Result
to_date	lib/active_record/connection_adapters/mysql_adapter.rb	/^    def to_date$/;"	f	class:Mysql.Time
to_hash	lib/active_record/result.rb	/^    def to_hash$/;"	f	class:ActiveRecord.Result
to_key	lib/active_record/attribute_methods/primary_key.rb	/^      def to_key$/;"	f	class:ActiveRecord.AttributeMethods.PrimaryKey
to_param	lib/active_record/integration.rb	/^    def to_param$/;"	f	class:ActiveRecord.Integration
to_sql	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def to_sql(arel, binds = [])$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
to_sql	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def to_sql$/;"	f	class:ActiveRecord.ConnectionAdapters
to_sql	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def to_sql$/;"	f	class:ActiveRecord.ConnectionAdapters.ColumnDefinition
to_sql	lib/active_record/null_relation.rb	/^    def to_sql$/;"	f	class:ActiveRecord.NullRelation
to_sql	lib/active_record/relation.rb	/^    def to_sql$/;"	f	class:ActiveRecord.Relation
to_xml	lib/active_record/serializers/xml_serializer.rb	/^    def to_xml(options = {}, &block)$/;"	f	class:ActiveRecord.Serialization
toggle	lib/active_record/persistence.rb	/^    def toggle(attribute)$/;"	f	class:ActiveRecord.Persistence
toggle!	lib/active_record/persistence.rb	/^    def toggle!(attribute)$/;"	f	class:ActiveRecord.Persistence
touch	lib/active_record/callbacks.rb	/^    def touch(*) #:nodoc:$/;"	f	class:ActiveRecord.Callbacks
touch	lib/active_record/persistence.rb	/^    def touch(name = nil)$/;"	f	class:ActiveRecord.Persistence
trailer	lib/active_record/schema_dumper.rb	/^      def trailer(stream)$/;"	f	class:ActiveRecord.SchemaDumper
transaction	lib/active_record/associations/collection_association.rb	/^      def transaction(*args)$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
transaction	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def transaction(options = {})$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
transaction	lib/active_record/transactions.rb	/^      def transaction(options = {}, &block)$/;"	f	class:ActiveRecord.Transactions.ClassMethods
transaction	lib/active_record/transactions.rb	/^    def transaction(options = {}, &block)$/;"	f	class:ActiveRecord.Transactions
transaction_if	lib/active_record/associations/has_one_association.rb	/^        def transaction_if(value)$/;"	f	class:ActiveRecord.Associations.HasOneAssociation
transaction_include_action?	lib/active_record/transactions.rb	/^    def transaction_include_action?(action) #:nodoc:$/;"	f	class:ActiveRecord.Transactions
transaction_isolation_levels	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def transaction_isolation_levels$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
transaction_joinable=	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def transaction_joinable=(joinable)$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
transaction_open?	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def transaction_open?$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
transaction_record_state	lib/active_record/transactions.rb	/^    def transaction_record_state(state) #:nodoc:$/;"	f	class:ActiveRecord.Transactions
translate_exception	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def translate_exception(exception, message)$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
translate_exception	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def translate_exception(exception, message)$/;"	f	class:ActiveRecord.ConnectionAdapters
translate_exception	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def translate_exception(exception, message)$/;"	f	class:ActiveRecord.PostgreSQLAdapter
translate_exception	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^        def translate_exception(exception, message)$/;"	f	class:ActiveRecord
truncate	lib/active_record/associations/alias_tracker.rb	/^        def truncate(name)$/;"	f	class:ActiveRecord.Associations.AliasTracker
try_to_load_dependency	lib/active_record/fixtures.rb	/^      def try_to_load_dependency(file_name)$/;"	f	class:ActiveRecord.TestFixtures.ClassMethods
tsvector	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def tsvector(*args)$/;"	f	class:ActiveRecord.PostgreSQLAdapter.TableDefinition
type	lib/active_record/attribute_methods/serialization.rb	/^        def type$/;"	f	class:ActiveRecord.AttributeMethods.Type
type	lib/active_record/attribute_methods/time_zone_conversion.rb	/^        def type$/;"	f	class:ActiveRecord.AttributeMethods.TimeZoneConversion.Type
type	lib/active_record/connection_adapters/mysql_adapter.rb	/^          def type; :date; end$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter.Fields.Date
type	lib/active_record/connection_adapters/mysql_adapter.rb	/^          def type; :datetime; end$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter.Fields.DateTime
type	lib/active_record/connection_adapters/mysql_adapter.rb	/^          def type; :float; end$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter.Fields.Float
type	lib/active_record/connection_adapters/mysql_adapter.rb	/^          def type; :time; end$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter.Fields.Time
type	lib/active_record/connection_adapters/mysql_adapter.rb	/^          def type; end$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter.Fields.Type
type	lib/active_record/connection_adapters/postgresql/oid.rb	/^          def type; :datetime; end$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID.Date
type	lib/active_record/connection_adapters/postgresql/oid.rb	/^          def type; :timestamp; end$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID.Timestamp
type	lib/active_record/connection_adapters/postgresql/oid.rb	/^          def type; end$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID.Type
type	lib/active_record/reflection.rb	/^      def type$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
type_cast	lib/active_record/attribute_methods/serialization.rb	/^        def type_cast(value)$/;"	f	class:ActiveRecord.AttributeMethods.Type
type_cast	lib/active_record/attribute_methods/time_zone_conversion.rb	/^        def type_cast(value)$/;"	f	class:ActiveRecord.AttributeMethods.TimeZoneConversion.Type
type_cast	lib/active_record/connection_adapters/abstract/quoting.rb	/^      def type_cast(value, column)$/;"	f	class:ActiveRecord.ConnectionAdapters.Quoting
type_cast	lib/active_record/connection_adapters/column.rb	/^      def type_cast(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
type_cast	lib/active_record/connection_adapters/mysql_adapter.rb	/^          def type_cast(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter.Fields.Boolean
type_cast	lib/active_record/connection_adapters/mysql_adapter.rb	/^          def type_cast(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter.Fields.Date
type_cast	lib/active_record/connection_adapters/mysql_adapter.rb	/^          def type_cast(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter.Fields.DateTime
type_cast	lib/active_record/connection_adapters/mysql_adapter.rb	/^          def type_cast(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter.Fields.Decimal
type_cast	lib/active_record/connection_adapters/mysql_adapter.rb	/^          def type_cast(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter.Fields.Float
type_cast	lib/active_record/connection_adapters/mysql_adapter.rb	/^          def type_cast(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter.Fields.Integer
type_cast	lib/active_record/connection_adapters/mysql_adapter.rb	/^          def type_cast(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter.Fields.Time
type_cast	lib/active_record/connection_adapters/mysql_adapter.rb	/^          def type_cast(value); value; end$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter.Fields.Identity
type_cast	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def type_cast(value, column)$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
type_cast	lib/active_record/connection_adapters/postgresql/oid.rb	/^          def type_cast(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID.Array
type_cast	lib/active_record/connection_adapters/postgresql/oid.rb	/^          def type_cast(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID.Boolean
type_cast	lib/active_record/connection_adapters/postgresql/oid.rb	/^          def type_cast(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID.Bytea
type_cast	lib/active_record/connection_adapters/postgresql/oid.rb	/^          def type_cast(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID.Cidr
type_cast	lib/active_record/connection_adapters/postgresql/oid.rb	/^          def type_cast(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID.Date
type_cast	lib/active_record/connection_adapters/postgresql/oid.rb	/^          def type_cast(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID.Decimal
type_cast	lib/active_record/connection_adapters/postgresql/oid.rb	/^          def type_cast(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID.Float
type_cast	lib/active_record/connection_adapters/postgresql/oid.rb	/^          def type_cast(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID.Hstore
type_cast	lib/active_record/connection_adapters/postgresql/oid.rb	/^          def type_cast(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID.Identity
type_cast	lib/active_record/connection_adapters/postgresql/oid.rb	/^          def type_cast(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID.Integer
type_cast	lib/active_record/connection_adapters/postgresql/oid.rb	/^          def type_cast(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID.Json
type_cast	lib/active_record/connection_adapters/postgresql/oid.rb	/^          def type_cast(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID.Money
type_cast	lib/active_record/connection_adapters/postgresql/oid.rb	/^          def type_cast(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID.Time
type_cast	lib/active_record/connection_adapters/postgresql/oid.rb	/^          def type_cast(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID.Timestamp
type_cast	lib/active_record/connection_adapters/postgresql/oid.rb	/^          def type_cast(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID.Vector
type_cast	lib/active_record/connection_adapters/postgresql/quoting.rb	/^        def type_cast(value, column, array_member = false)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.Quoting
type_cast	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def type_cast(value)$/;"	f	class:ActiveRecord.ConnectionAdapters
type_cast	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def type_cast(value, column) # :nodoc:$/;"	f	class:ActiveRecord.SQLite3Adapter
type_cast_attribute_for_write	lib/active_record/attribute_methods/serialization.rb	/^        def type_cast_attribute_for_write(column, value)$/;"	f	class:ActiveRecord.AttributeMethods.Behavior
type_cast_attribute_for_write	lib/active_record/attribute_methods/write.rb	/^      def type_cast_attribute_for_write(column, value)$/;"	f	class:ActiveRecord.AttributeMethods
type_cast_attribute_value	lib/active_record/attribute_assignment.rb	/^    def type_cast_attribute_value(multiparameter_name, value)$/;"	f	class:ActiveRecord.AttributeAssignment
type_cast_calculated_value	lib/active_record/relation/calculations.rb	/^    def type_cast_calculated_value(value, column, operation = nil)$/;"	f	class:ActiveRecord.execute_grouped_calculation
type_cast_code	lib/active_record/connection_adapters/column.rb	/^      def type_cast_code(var_name)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
type_cast_for_write	lib/active_record/connection_adapters/column.rb	/^      def type_cast_for_write(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
type_cast_for_write	lib/active_record/connection_adapters/mysql_adapter.rb	/^          def type_cast_for_write(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter.Fields.Type
type_cast_for_write	lib/active_record/connection_adapters/postgresql/oid.rb	/^          def type_cast_for_write(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.OID.Type
type_cast_using_column	lib/active_record/relation/calculations.rb	/^    def type_cast_using_column(value, column)$/;"	f	class:ActiveRecord.execute_grouped_calculation
type_condition	lib/active_record/inheritance.rb	/^      def type_condition(table = arel_table)$/;"	f	class:ActiveRecord.Inheritance.ClassMethods
type_to_sql	lib/active_record/connection_adapters/abstract/schema_statements.rb	/^      def type_to_sql(type, limit = nil, precision = nil, scale = nil) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.SchemaStatements
type_to_sql	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def type_to_sql(type, limit = nil, precision = nil, scale = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.bulk_change_table
type_to_sql	lib/active_record/connection_adapters/postgresql/schema_statements.rb	/^        def type_to_sql(type, limit = nil, precision = nil, scale = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.SchemaStatements.indexes
typecasted_attribute_value	lib/active_record/attribute_methods.rb	/^    def typecasted_attribute_value(name)$/;"	f	class:ActiveRecord
typecasted_attribute_value	lib/active_record/attribute_methods/serialization.rb	/^        def typecasted_attribute_value(name)$/;"	f	class:ActiveRecord.AttributeMethods.Behavior
uncached	lib/active_record/connection_adapters/abstract/query_cache.rb	/^      def uncached$/;"	f	class:ActiveRecord
uncached	lib/active_record/query_cache.rb	/^      def uncached(&block)$/;"	f	class:ActiveRecord.QueryCache.ClassMethods
undecorated_table_name	lib/active_record/model_schema.rb	/^      def undecorated_table_name(class_name = base_class.name)$/;"	f	class:ActiveRecord.ModelSchema
undefine_attribute_methods	lib/active_record/attribute_methods.rb	/^      def undefine_attribute_methods # :nodoc:$/;"	f	class:ActiveRecord.AttributeMethods.ClassMethods
unescape_bytea	lib/active_record/connection_adapters/postgresql/quoting.rb	/^        def unescape_bytea(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.Quoting
uniq	lib/active_record/associations/collection_association.rb	/^      def uniq$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
uniq	lib/active_record/associations/collection_proxy.rb	/^      def uniq$/;"	f	class:ActiveRecord.Associations.CollectionProxy
uniq	lib/active_record/relation/query_methods.rb	/^    def uniq(value = true)$/;"	f
uniq!	lib/active_record/relation/query_methods.rb	/^    def uniq!(value = true)$/;"	f
unscoped	lib/active_record/scoping/default.rb	/^        def unscoped$/;"	f	class:ActiveRecord.Scoping.Default.ClassMethods
unserialize	lib/active_record/attribute_methods/serialization.rb	/^        def unserialize$/;"	f	class:ActiveRecord.AttributeMethods.Attribute
unserialized_value	lib/active_record/attribute_methods/serialization.rb	/^        def unserialized_value$/;"	f	class:ActiveRecord.AttributeMethods.Attribute
up	lib/active_record/migration.rb	/^      def up(migrations_paths, target_version = nil)$/;"	f	class:Migrator
up	lib/active_record/migration.rb	/^    def up$/;"	f	class:ActiveRecord
up	lib/rails/generators/active_record/migration/templates/migration.rb	/^  def up$/;"	f
up?	lib/active_record/migration.rb	/^    def up?$/;"	f
update	lib/active_record/attribute_methods/dirty.rb	/^      def update(*)$/;"	f	class:ActiveRecord.AttributeMethods.Dirty
update	lib/active_record/callbacks.rb	/^    def update(*) #:nodoc:$/;"	f	class:ActiveRecord.Callbacks
update	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def update(arel, name = nil, binds = [])$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
update	lib/active_record/locking/optimistic.rb	/^        def update(attribute_names = @attributes.keys) #:nodoc:$/;"	f	class:ActiveRecord.Locking.Optimistic
update	lib/active_record/persistence.rb	/^    def update(attribute_names = @attributes.keys)$/;"	f	class:ActiveRecord.Persistence
update	lib/active_record/relation.rb	/^    def update(id, attributes)$/;"	f	class:ActiveRecord.Relation
update	lib/active_record/timestamp.rb	/^    def update(*args)$/;"	f	class:ActiveRecord.Timestamp
update_all	lib/active_record/null_relation.rb	/^    def update_all(_updates, _conditions = nil, _options = {})$/;"	f	class:ActiveRecord.NullRelation
update_all	lib/active_record/relation.rb	/^    def update_all(updates)$/;"	f	class:ActiveRecord.Relation
update_attribute	lib/active_record/persistence.rb	/^    def update_attribute(name, value)$/;"	f	class:ActiveRecord.Persistence
update_attributes	lib/active_record/persistence.rb	/^    def update_attributes(attributes)$/;"	f	class:ActiveRecord.Persistence
update_attributes!	lib/active_record/persistence.rb	/^    def update_attributes!(attributes)$/;"	f	class:ActiveRecord.Persistence
update_column	lib/active_record/persistence.rb	/^    def update_column(name, value)$/;"	f	class:ActiveRecord.Persistence
update_columns	lib/active_record/persistence.rb	/^    def update_columns(attributes)$/;"	f	class:ActiveRecord.Persistence
update_counter	lib/active_record/associations/has_many_association.rb	/^        def update_counter(difference, reflection = reflection)$/;"	f	class:ActiveRecord.Associations
update_counters	lib/active_record/associations/belongs_to_association.rb	/^        def update_counters(record)$/;"	f	class:ActiveRecord.Associations.BelongsToAssociation
update_counters	lib/active_record/counter_cache.rb	/^      def update_counters(id, counters)$/;"	f	class:ActiveRecord.CounterCache.ClassMethods
update_counters	lib/active_record/locking/optimistic.rb	/^        def update_counters(id, counters)$/;"	f	class:ActiveRecord.Locking.Optimistic.ClassMethods
update_sql	lib/active_record/connection_adapters/abstract/database_statements.rb	/^        def update_sql(sql, name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
update_sql	lib/active_record/connection_adapters/abstract_mysql_adapter.rb	/^      def update_sql(sql, name = nil) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractMysqlAdapter
update_sql	lib/active_record/connection_adapters/postgresql/database_statements.rb	/^        def update_sql(sql, name = nil)$/;"	f	class:ActiveRecord.ConnectionAdapters.PostgreSQLAdapter.DatabaseStatements
update_sql	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def update_sql(sql, name = nil) #:nodoc:$/;"	f	class:ActiveRecord.SQLite3Adapter.ExplainPrettyPrinter
update_through_counter?	lib/active_record/associations/has_many_through_association.rb	/^        def update_through_counter?(method)$/;"	f	class:ActiveRecord.Associations.HasManyThroughAssociation
updated?	lib/active_record/associations/belongs_to_association.rb	/^      def updated?$/;"	f	class:ActiveRecord.Associations.BelongsToAssociation
use_insert_returning?	lib/active_record/connection_adapters/postgresql_adapter.rb	/^      def use_insert_returning?$/;"	f	class:ActiveRecord.PostgreSQLAdapter
uses_transaction	lib/active_record/fixtures.rb	/^      def uses_transaction(*methods)$/;"	f	class:ActiveRecord.TestFixtures.ClassMethods
uses_transaction?	lib/active_record/fixtures.rb	/^      def uses_transaction?(method)$/;"	f	class:ActiveRecord.TestFixtures.ClassMethods
using_limitable_reflections?	lib/active_record/relation/finder_methods.rb	/^    def using_limitable_reflections?(reflections)$/;"	f	class:ActiveRecord.FinderMethods
uuid	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def uuid(name, options = {})$/;"	f	class:ActiveRecord.PostgreSQLAdapter.TableDefinition
valid?	lib/active_record/dynamic_matchers.rb	/^      def valid?$/;"	f	class:ActiveRecord.DynamicMatchers
valid?	lib/active_record/validations.rb	/^    def valid?(context = nil)$/;"	f	class:ActiveRecord.Validations
valid_alter_table_options	lib/active_record/connection_adapters/sqlite3_adapter.rb	/^      def valid_alter_table_options( type, options)$/;"	f	class:ActiveRecord.SQLite3Adapter
valid_dependent_options	lib/active_record/associations/builder/association.rb	/^    def valid_dependent_options$/;"	f
valid_dependent_options	lib/active_record/associations/builder/belongs_to.rb	/^    def valid_dependent_options$/;"	f	class:ActiveRecord.BelongsTo
valid_dependent_options	lib/active_record/associations/builder/has_many.rb	/^    def valid_dependent_options$/;"	f	class:ActiveRecord.HasMany
valid_dependent_options	lib/active_record/associations/builder/has_one.rb	/^    def valid_dependent_options$/;"	f	class:ActiveRecord.HasOne
valid_options	lib/active_record/associations/builder/association.rb	/^    def valid_options$/;"	f
valid_options	lib/active_record/associations/builder/belongs_to.rb	/^    def valid_options$/;"	f	class:ActiveRecord.BelongsTo
valid_options	lib/active_record/associations/builder/collection_association.rb	/^    def valid_options$/;"	f	class:ActiveRecord.CollectionAssociation
valid_options	lib/active_record/associations/builder/has_and_belongs_to_many.rb	/^    def valid_options$/;"	f	class:ActiveRecord.HasAndBelongsToMany
valid_options	lib/active_record/associations/builder/has_many.rb	/^    def valid_options$/;"	f	class:ActiveRecord.HasMany
valid_options	lib/active_record/associations/builder/has_one.rb	/^    def valid_options$/;"	f	class:ActiveRecord.HasOne
valid_options	lib/active_record/associations/builder/singular_association.rb	/^    def valid_options$/;"	f	class:ActiveRecord.SingularAssociation
validate	lib/active_record/fixture_set/file.rb	/^        def validate(data)$/;"	f	class:ActiveRecord.FixtureSet.File
validate	lib/active_record/migration.rb	/^    def validate(migrations)$/;"	f
validate	lib/active_record/validations/presence.rb	/^      def validate(record)$/;"	f	class:ActiveRecord.Validations.PresenceValidator
validate?	lib/active_record/reflection.rb	/^      def validate?$/;"	f	class:ActiveRecord.Reflection.AssociationReflection
validate_collection_association	lib/active_record/autosave_association.rb	/^    def validate_collection_association(reflection)$/;"	f	class:ActiveRecord.AutosaveAssociation
validate_each	lib/active_record/validations/associated.rb	/^      def validate_each(record, attribute, value)$/;"	f	class:ActiveRecord.Validations.AssociatedValidator
validate_each	lib/active_record/validations/uniqueness.rb	/^      def validate_each(record, attribute, value)$/;"	f	class:ActiveRecord.Validations.UniquenessValidator
validate_file_name!	lib/rails/generators/active_record/migration/migration_generator.rb	/^        def validate_file_name!$/;"	f	class:ActiveRecord.Generators.MigrationGenerator.index_name_for
validate_missing_parameters!	lib/active_record/attribute_assignment.rb	/^      def validate_missing_parameters!(positions)$/;"	f	class:ActiveRecord.AttributeAssignment.MultiparameterAttribute
validate_options	lib/active_record/associations/builder/association.rb	/^    def validate_options$/;"	f
validate_order_args	lib/active_record/relation/query_methods.rb	/^    def validate_order_args(args)$/;"	f
validate_single_association	lib/active_record/autosave_association.rb	/^    def validate_single_association(reflection)$/;"	f	class:ActiveRecord.AutosaveAssociation
validates_associated	lib/active_record/validations/associated.rb	/^      def validates_associated(*attr_names)$/;"	f	class:ActiveRecord.Validations.ClassMethods
validates_presence_of	lib/active_record/validations/presence.rb	/^      def validates_presence_of(*attr_names)$/;"	f	class:ActiveRecord.Validations.ClassMethods
validates_uniqueness_of	lib/active_record/validations/uniqueness.rb	/^      def validates_uniqueness_of(*attr_names)$/;"	f	class:ActiveRecord.Validations.ClassMethods
value_to_boolean	lib/active_record/connection_adapters/column.rb	/^        def value_to_boolean(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
value_to_date	lib/active_record/connection_adapters/column.rb	/^        def value_to_date(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
value_to_decimal	lib/active_record/connection_adapters/column.rb	/^        def value_to_decimal(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
value_to_integer	lib/active_record/connection_adapters/column.rb	/^        def value_to_integer(value)$/;"	f	class:ActiveRecord.ConnectionAdapters.Column
values	lib/active_record/relation.rb	/^    def values$/;"	f	class:ActiveRecord.Relation
verify!	lib/active_record/connection_adapters/abstract_adapter.rb	/^      def verify!(*ignored)$/;"	f	class:ActiveRecord.ConnectionAdapters.AbstractAdapter
verify_readonly_attribute	lib/active_record/persistence.rb	/^    def verify_readonly_attribute(name)$/;"	f	class:ActiveRecord.Persistence
version	lib/active_record/connection_adapters/mysql2_adapter.rb	/^      def version$/;"	f	class:ActiveRecord.ConnectionAdapters.Mysql2Adapter
version	lib/active_record/connection_adapters/mysql_adapter.rb	/^      def version$/;"	f	class:ActiveRecord.ConnectionAdapters.MysqlAdapter
version	lib/active_record/schema_migration.rb	/^    def version$/;"	f	class:ActiveRecord.SchemaMigration
wait_poll	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^        def wait_poll(timeout)$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool.Queue
where	lib/active_record/relation/query_methods.rb	/^    def where(opts, *rest)$/;"	f
where!	lib/active_record/relation/query_methods.rb	/^    def where!(opts, *rest)$/;"	f
where_values_hash	lib/active_record/null_relation.rb	/^    def where_values_hash$/;"	f	class:ActiveRecord.NullRelation
where_values_hash	lib/active_record/relation.rb	/^    def where_values_hash$/;"	f	class:ActiveRecord.Relation
with_connection	lib/active_record/connection_adapters/abstract/connection_pool.rb	/^      def with_connection$/;"	f	class:ActiveRecord.ConnectionAdapters.ConnectionPool
with_default_scope	lib/active_record/relation.rb	/^    def with_default_scope #:nodoc:$/;"	f	class:ActiveRecord.Relation
with_lock	lib/active_record/locking/pessimistic.rb	/^      def with_lock(lock = true)$/;"	f	class:ActiveRecord.Locking.Pessimistic
with_transaction_returning_status	lib/active_record/transactions.rb	/^    def with_transaction_returning_status$/;"	f	class:ActiveRecord.Transactions
within_new_transaction	lib/active_record/connection_adapters/abstract/database_statements.rb	/^      def within_new_transaction(options = {}) #:nodoc:$/;"	f	class:ActiveRecord.ConnectionAdapters.DatabaseStatements
wrap_block_extension	lib/active_record/associations/builder/collection_association.rb	/^    def wrap_block_extension$/;"	f	class:ActiveRecord.CollectionAssociation
writable?	lib/active_record/associations/builder/collection_association.rb	/^    def writable?$/;"	f	class:ActiveRecord.CollectionAssociation
write	lib/active_record/migration.rb	/^    def write(text="")$/;"	f	class:ActiveRecord
write_attribute	lib/active_record/attribute_methods/dirty.rb	/^      def write_attribute(attr, value)$/;"	f	class:ActiveRecord.AttributeMethods.Dirty
write_attribute	lib/active_record/attribute_methods/write.rb	/^      def write_attribute(attr_name, value)$/;"	f	class:ActiveRecord.AttributeMethods
write_store_attribute	lib/active_record/store.rb	/^      def write_store_attribute(store_attribute, key, value)$/;"	f	class:ActiveRecord
writer	lib/active_record/associations/collection_association.rb	/^      def writer(records)$/;"	f	class:ActiveRecord.Associations.CollectionAssociation
writer	lib/active_record/associations/singular_association.rb	/^      def writer(record)$/;"	f	class:ActiveRecord.Associations.SingularAssociation
writer_method	lib/active_record/aggregations.rb	/^        def writer_method(name, class_name, mapping, allow_nil, converter)$/;"	f	class:ActiveRecord.Aggregations.ClassMethods
xml	lib/active_record/connection_adapters/abstract/schema_definitions.rb	/^      def xml(*args)$/;"	f	class:ActiveRecord.ConnectionAdapters.TableDefinition
xml	lib/active_record/connection_adapters/postgresql_adapter.rb	/^        def xml(*args)$/;"	f	class:ActiveRecord.PostgreSQLAdapter.TableDefinition
yaml_file_path	lib/active_record/fixtures.rb	/^      def yaml_file_path$/;"	f	class:ActiveRecord.FixtureSet
